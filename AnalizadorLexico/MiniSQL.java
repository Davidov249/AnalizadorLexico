/* The following code was generated by JFlex 1.7.0 */

import java.lang.Object;
import java.lang.String;
import java.io.PrintWriter;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.lang.System;
import java.io.Console;
import java.io.InputStream;
import java.util.Scanner;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>Lexer.jflex</tt>
 */
public class MiniSQL {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\64\1\43\3\64\22\0\1\64\1\52\1\0\1\62\1\0"+
    "\1\47\1\53\1\42\1\57\1\46\1\45\1\41\1\54\1\31\1\37"+
    "\1\44\2\35\10\35\1\0\1\54\1\50\1\51\1\50\1\0\1\54"+
    "\1\1\1\2\1\11\1\14\1\10\1\30\1\22\1\17\1\12\1\33"+
    "\1\23\1\5\1\27\1\13\1\4\1\24\1\34\1\15\1\3\1\7"+
    "\1\6\1\21\1\25\1\32\1\16\1\20\1\55\1\0\1\56\1\0"+
    "\1\26\1\0\4\63\1\40\25\63\1\60\1\36\1\61\7\0\1\64"+
    "\32\0\1\64\u15df\0\1\64\u097f\0\13\64\35\0\2\64\5\0\1\64"+
    "\57\0\1\64\u0fa0\0\1\64\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\ud00f\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\4\2\2\3\4\2\1\3\15\2\1\4"+
    "\1\2\1\5\1\3\1\6\1\7\1\10\1\11\1\7"+
    "\1\4\1\12\1\13\1\7\1\14\1\4\1\1\1\15"+
    "\1\12\1\16\1\4\1\15\1\2\1\17\2\2\1\17"+
    "\31\2\2\17\2\2\1\17\11\2\1\17\17\2\2\17"+
    "\3\2\1\17\25\2\1\17\34\2\1\20\1\2\1\21"+
    "\1\22\1\10\1\23\2\2\1\17\7\2\1\17\6\2"+
    "\1\17\10\2\1\17\4\2\1\17\7\2\1\17\20\2"+
    "\1\17\25\2\1\17\24\2\1\17\50\2\1\17\1\2"+
    "\1\17\6\2\1\21\1\23\1\0\1\23\6\2\1\0"+
    "\20\2\2\17\10\2\1\17\1\2\1\17\1\2\1\0"+
    "\1\2\1\0\25\2\1\17\16\2\1\17\3\2\1\17"+
    "\13\2\1\17\15\2\1\17\5\2\1\17\1\2\1\17"+
    "\4\2\1\21\1\0\1\24\1\23\1\2\1\0\23\2"+
    "\1\17\5\2\2\0\15\2\1\17\35\2\1\17\13\2"+
    "\1\0\16\2\2\0\1\17\31\2\1\0\1\2\1\17"+
    "\2\2\1\0\5\2\2\0\1\17\4\2\1\17\11\2"+
    "\1\0\3\2\1\0\5\2\1\0\1\17\1\2\1\17"+
    "\1\2\1\0\1\2\1\17\2\2\1\0\3\2\1\0"+
    "\1\2\2\0\2\2\2\0\1\2\1\0\3\2\1\0"+
    "\1\2\6\0\3\2\5\0\2\2\1\0\1\17\21\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[674];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\65\0\152\0\237\0\324\0\u0109\0\u013e\0\u0173"+
    "\0\u01a8\0\u01dd\0\u0212\0\u0247\0\u027c\0\u02b1\0\u02e6\0\u031b"+
    "\0\u0350\0\u0385\0\u03ba\0\u03ef\0\u0424\0\u0459\0\u048e\0\u04c3"+
    "\0\u04f8\0\u052d\0\u0562\0\u0597\0\u05cc\0\u0601\0\65\0\65"+
    "\0\u0636\0\u066b\0\u06a0\0\65\0\65\0\65\0\u06d5\0\u06d5"+
    "\0\u06d5\0\u070a\0\65\0\u073f\0\u0774\0\u07a9\0\u07de\0\u0813"+
    "\0\u0848\0\u087d\0\u08b2\0\u04c3\0\u08e7\0\u091c\0\u0951\0\u0986"+
    "\0\u09bb\0\u09f0\0\u0a25\0\u0a5a\0\u0a8f\0\u0ac4\0\u0af9\0\u0b2e"+
    "\0\u0b63\0\u0b98\0\u0bcd\0\u0c02\0\u0c37\0\u0c6c\0\u0ca1\0\u0cd6"+
    "\0\u0d0b\0\u0d40\0\u0d75\0\u0daa\0\u0ddf\0\u0e14\0\u0e49\0\u0e7e"+
    "\0\u0eb3\0\u0ee8\0\u0f1d\0\u0f52\0\u0f87\0\u0fbc\0\u0ff1\0\u1026"+
    "\0\u105b\0\u1090\0\u10c5\0\u10fa\0\u112f\0\u1164\0\u1199\0\u11ce"+
    "\0\u1203\0\u1238\0\u126d\0\u12a2\0\u12d7\0\u130c\0\u1341\0\u1376"+
    "\0\u13ab\0\u13e0\0\u1415\0\u144a\0\u147f\0\u14b4\0\u14e9\0\u151e"+
    "\0\u1553\0\u1588\0\u15bd\0\u15f2\0\u1627\0\u165c\0\u1691\0\u16c6"+
    "\0\u16fb\0\u1730\0\u1765\0\u179a\0\u17cf\0\u1804\0\u1839\0\u186e"+
    "\0\u18a3\0\u18d8\0\u190d\0\u1942\0\u1977\0\u19ac\0\u19e1\0\u1a16"+
    "\0\u1a4b\0\u1a80\0\u1ab5\0\u1aea\0\u1b1f\0\u1b54\0\u1b89\0\u1bbe"+
    "\0\u1bf3\0\u1c28\0\u1c5d\0\u1c92\0\u1cc7\0\u1cfc\0\u1d31\0\u1d66"+
    "\0\u1d9b\0\u1dd0\0\u1e05\0\u1e3a\0\u1e6f\0\u1ea4\0\u1ed9\0\u1f0e"+
    "\0\u1f43\0\u1f78\0\u1fad\0\u1fe2\0\u2017\0\u204c\0\65\0\65"+
    "\0\u2081\0\u20b6\0\u20eb\0\u2120\0\u2155\0\u218a\0\u21bf\0\u21f4"+
    "\0\u2229\0\u225e\0\u2293\0\u22c8\0\u22fd\0\u2332\0\u2367\0\u239c"+
    "\0\u23d1\0\u2406\0\u243b\0\u2470\0\u24a5\0\u24da\0\u250f\0\u2544"+
    "\0\u2579\0\u25ae\0\u25e3\0\u2618\0\u264d\0\u2682\0\u26b7\0\u26ec"+
    "\0\u2721\0\u2756\0\u278b\0\u27c0\0\u27f5\0\u282a\0\u285f\0\u2894"+
    "\0\u28c9\0\u28fe\0\u2933\0\u2968\0\u299d\0\u29d2\0\u2a07\0\u2a3c"+
    "\0\u2a71\0\u2aa6\0\u2adb\0\u2b10\0\u2b45\0\u2b7a\0\u2baf\0\u2be4"+
    "\0\u2c19\0\u2c4e\0\u2c83\0\u2cb8\0\u2ced\0\u2d22\0\u2d57\0\u2d8c"+
    "\0\u2dc1\0\u2df6\0\u2e2b\0\u2e60\0\u2e95\0\u2eca\0\u2eff\0\u2f34"+
    "\0\u2f69\0\u2f9e\0\u2fd3\0\u3008\0\u303d\0\u3072\0\u30a7\0\u30dc"+
    "\0\u3111\0\u3146\0\u317b\0\u31b0\0\u31e5\0\u321a\0\u324f\0\u3284"+
    "\0\u32b9\0\u32ee\0\u3323\0\u3358\0\u338d\0\u33c2\0\u33f7\0\u342c"+
    "\0\u10fa\0\u3461\0\u3496\0\u34cb\0\u3500\0\u3535\0\u356a\0\u359f"+
    "\0\u35d4\0\u3609\0\u363e\0\u3673\0\u36a8\0\u36dd\0\u3712\0\u3747"+
    "\0\u377c\0\u37b1\0\u37e6\0\u381b\0\u28c9\0\u3850\0\u3885\0\u38ba"+
    "\0\u38ef\0\u3924\0\u3959\0\u398e\0\u39c3\0\u39f8\0\u3a2d\0\u3a62"+
    "\0\u3a97\0\u3acc\0\u3b01\0\u3b36\0\u3b6b\0\u3ba0\0\u3bd5\0\u3c0a"+
    "\0\u3c3f\0\u3c74\0\u3ca9\0\u3cde\0\u3d13\0\u3d48\0\u3d7d\0\u3db2"+
    "\0\u3de7\0\u3e1c\0\u3e51\0\u3e86\0\u3ebb\0\u3ef0\0\u3f25\0\u3f5a"+
    "\0\u3f8f\0\u3fc4\0\u3ff9\0\u402e\0\u4063\0\u4098\0\u40cd\0\u4102"+
    "\0\u4137\0\u416c\0\u41a1\0\u41d6\0\u420b\0\u4240\0\u4275\0\u42aa"+
    "\0\u42df\0\u4314\0\u4349\0\u437e\0\u43b3\0\u43e8\0\u441d\0\u4452"+
    "\0\u4487\0\u44bc\0\u44f1\0\u4526\0\u455b\0\u4590\0\u45c5\0\u45fa"+
    "\0\u462f\0\u4664\0\u4699\0\u46ce\0\u4703\0\u4738\0\u476d\0\u47a2"+
    "\0\u47d7\0\u480c\0\u4841\0\u4876\0\u48ab\0\u48e0\0\u4915\0\u494a"+
    "\0\u497f\0\u49b4\0\u49e9\0\u4a1e\0\u4a53\0\u4a88\0\u4abd\0\u4af2"+
    "\0\u3d48\0\u4b27\0\u4b5c\0\u4b91\0\u4bc6\0\u4bfb\0\u4c30\0\u4c65"+
    "\0\u4c9a\0\u4ccf\0\u4d04\0\u4d39\0\u4d6e\0\u4da3\0\u4dd8\0\u4e0d"+
    "\0\u4e42\0\u4e77\0\u4eac\0\u4ee1\0\u4f16\0\u4f4b\0\u4f80\0\u4fb5"+
    "\0\u4fea\0\u501f\0\u5054\0\u5089\0\u50be\0\u50f3\0\u5128\0\u515d"+
    "\0\u5192\0\u51c7\0\u51fc\0\u5231\0\u5266\0\u529b\0\u52d0\0\u5305"+
    "\0\u533a\0\u536f\0\u53a4\0\u53d9\0\u540e\0\u5443\0\u5478\0\u54ad"+
    "\0\u54e2\0\u5517\0\u554c\0\u5581\0\u55b6\0\u55eb\0\u5620\0\u5655"+
    "\0\u568a\0\u56bf\0\u56f4\0\u5729\0\u575e\0\u5793\0\u57c8\0\u57fd"+
    "\0\u5832\0\u5867\0\u3f5a\0\65\0\65\0\u589c\0\u58d1\0\u5906"+
    "\0\u593b\0\u5970\0\u59a5\0\u59da\0\u5a0f\0\u5a44\0\u5a79\0\u5aae"+
    "\0\u5ae3\0\u5b18\0\u22c8\0\u5b4d\0\u5b82\0\u5bb7\0\u5bec\0\u5c21"+
    "\0\u5c56\0\u5c8b\0\u5cc0\0\u5cf5\0\u5d2a\0\u5d5f\0\u5d94\0\u5dc9"+
    "\0\u5dfe\0\u5e33\0\u5e68\0\u5e9d\0\u5ed2\0\u5f07\0\u5f3c\0\u5f71"+
    "\0\u5fa6\0\u5fdb\0\u6010\0\u6045\0\u607a\0\u60af\0\u60e4\0\u6119"+
    "\0\u614e\0\u6183\0\u61b8\0\u61ed\0\u6222\0\u6257\0\u628c\0\u62c1"+
    "\0\u62f6\0\u632b\0\u2120\0\u6360\0\u6395\0\u63ca\0\u63ff\0\u6434"+
    "\0\u6469\0\u649e\0\u64d3\0\u6508\0\u653d\0\u6572\0\u65a7\0\u65dc"+
    "\0\u6611\0\u6646\0\u667b\0\u66b0\0\u66e5\0\u4bfb\0\u671a\0\u674f"+
    "\0\u6784\0\u67b9\0\u67ee\0\u6823\0\u6858\0\u688d\0\u68c2\0\u68f7"+
    "\0\u692c\0\u6961\0\u6996\0\u69cb\0\u6a00\0\u6a35\0\u6a6a\0\u6a9f"+
    "\0\u6ad4\0\u6b09\0\u6b3e\0\u6b73\0\u6ba8\0\u6bdd\0\u6c12\0\u6c47"+
    "\0\u6c7c\0\u6cb1\0\u21bf\0\u6ce6\0\u6d1b\0\u6d50\0\u6d85\0\u6dba"+
    "\0\u6def\0\u6e24\0\u6e59\0\u6e8e\0\u6ec3\0\u6ef8\0\u6f2d\0\u6f62"+
    "\0\u6f97\0\u6fcc\0\u7001\0\u7036\0\u706b\0\u70a0\0\u70d5\0\u710a"+
    "\0\u713f\0\u7174\0\u71a9\0\u71de\0\u7213\0\u7248\0\u6a6a\0\u727d"+
    "\0\u72b2\0\u72e7\0\u731c\0\u7351\0\u7386\0\u73bb\0\u73f0\0\u7425"+
    "\0\u745a\0\u278b\0\u748f\0\u74c4\0\u74f9\0\u752e\0\u7563\0\u7598"+
    "\0\u0e14\0\u75cd\0\u7602\0\u7637\0\u766c\0\u76a1\0\u76d6\0\u770b"+
    "\0\u7740\0\u7775\0\u77aa\0\u77df\0\u7814\0\u7849\0\u787e\0\u78b3"+
    "\0\u78e8\0\u791d\0\u7952\0\65\0\u7987\0\u79bc\0\u79f1\0\u7a26"+
    "\0\u7a5b\0\u7a90\0\u7ac5\0\u7afa\0\u7b2f\0\u7b64\0\u7b99\0\u7bce"+
    "\0\u7c03\0\u7c38\0\u7c6d\0\u7ca2\0\u7cd7\0\u7d0c\0\u7d41\0\u7d76"+
    "\0\u7dab\0\u7de0\0\u7e15\0\u7e4a\0\u7e7f\0\u7eb4\0\u7ee9\0\u7f1e"+
    "\0\u7f53\0\u7f88\0\u7fbd\0\u7ff2\0\u8027\0\u805c\0\u8091\0\u80c6"+
    "\0\u80fb\0\u8130\0\u8165\0\u819a\0\u81cf\0\u8204\0\u8239\0\u826e"+
    "\0\u82a3\0\u82d8\0\u830d\0\u8342\0\u8377\0\u83ac\0\u83e1\0\u8416"+
    "\0\u844b\0\u8480\0\u79bc\0\u84b5\0\u84ea\0\u851f\0\u8554\0\u8589"+
    "\0\u85be\0\u85f3";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[674];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\32\1\33\1\30\1\34\1\30\1\35\1\36\1\37"+
    "\1\30\1\40\1\41\1\42\1\43\1\44\1\45\1\46"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\40\1\55"+
    "\1\56\1\40\1\57\1\30\1\42\66\0\1\30\1\60"+
    "\1\61\1\30\1\62\1\63\1\64\1\30\1\65\1\30"+
    "\1\66\1\67\1\70\3\30\1\71\4\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\1\72"+
    "\2\30\1\73\1\30\1\74\1\30\1\75\1\30\1\76"+
    "\2\30\1\77\1\64\7\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\1\100\2\30\1\101"+
    "\1\30\1\102\1\103\1\104\1\105\1\106\3\30\1\107"+
    "\1\110\4\30\1\111\1\30\1\0\1\112\1\30\1\0"+
    "\2\30\1\113\1\30\2\0\1\30\22\0\1\30\2\0"+
    "\5\30\1\114\2\30\1\115\1\30\1\116\1\30\1\117"+
    "\3\30\1\120\2\30\1\121\1\30\1\0\1\30\1\122"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\1\123"+
    "\2\30\1\124\3\30\1\125\1\30\1\126\13\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\2\30\1\127\7\30\1\130\10\30\1\131\1\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\132\1\30\1\133\1\134\3\30\1\135\1\30\1\136"+
    "\2\30\1\137\1\30\1\140\6\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\2\30\1\141"+
    "\1\30\1\142\5\30\1\143\1\30\1\144\10\30\1\0"+
    "\2\30\1\0\1\145\3\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\146\2\30\1\147\1\150\1\151\6\30\1\152"+
    "\1\30\1\153\6\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\2\30\1\154\7\30\1\155"+
    "\1\156\11\30\1\0\1\157\1\64\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\160\2\30\1\161\1\30"+
    "\1\162\1\30\1\163\1\164\14\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\1\165\1\166"+
    "\1\30\1\167\1\30\1\170\1\30\1\171\1\30\1\172"+
    "\2\30\1\173\10\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\174\2\30\1\175\1\30"+
    "\1\176\1\30\1\177\1\30\1\200\13\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\7\30"+
    "\1\201\15\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\1\202\2\30\1\203\21\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\3\30\1\204\21\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\205\10\30\1\206\13\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\3\30\1\207\1\210\2\30\1\211\4\30\1\212"+
    "\10\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\7\30\1\213\1\30\1\214\13\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\215\2\30\1\216\1\217\1\220\1\30\1\221\1\30"+
    "\1\222\2\30\1\223\10\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\1\224\2\30\1\225"+
    "\5\30\1\226\2\30\1\227\1\30\1\230\6\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\25\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\231\2\30\1\232\3\30\1\233\1\30"+
    "\1\234\13\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\1\235\2\30\1\236\1\237\1\240"+
    "\1\30\1\241\1\30\1\242\2\30\1\243\10\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\32\0"+
    "\1\244\34\0\3\30\1\245\21\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\36\0\1\35\1\0"+
    "\1\246\63\0\1\40\26\0\42\41\1\247\1\250\21\41"+
    "\43\0\1\42\20\0\1\42\45\0\1\251\70\0\1\40"+
    "\66\0\1\40\67\0\1\44\54\0\1\40\77\0\1\40"+
    "\65\0\1\53\3\0\2\30\1\252\22\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\2\30"+
    "\1\253\5\30\1\64\14\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\4\30\1\254\1\30"+
    "\1\255\16\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\256\16\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\6\30"+
    "\1\257\16\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\13\30\1\64\1\30\1\64\7\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\64\12\30\1\64\11\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\7\30\1\64"+
    "\15\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\21\30\1\64\3\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\10\30\1\260"+
    "\14\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\6\30\1\261\16\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\4\30\1\262"+
    "\20\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\6\30\1\263\12\30\1\245\3\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\6\30\1\264\16\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\3\30\1\265\3\30\1\266"+
    "\15\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\20\30\1\70\4\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\25\30\1\0"+
    "\1\70\1\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\30\1\267\23\30\1\0\1\64\1\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\1\270\24\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\2\30\1\271\1\30\1\272\1\30\1\273\1\30"+
    "\1\274\14\30\1\0\1\275\1\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\14\30\1\276\1\30\1\277"+
    "\6\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\17\30\1\70\5\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\2\30\1\300"+
    "\22\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\5\30\1\301\17\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\1\302\24\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\303\24\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\4\30\1\304\20\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\6\30\1\305\16\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\6\30\1\306\16\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\4\30\1\213\20\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\13\30\1\255\11\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\7\30\1\307\15\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\6\30\1\257\1\310\15\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\25\30\1\0\1\30\1\311\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\2\30\1\211\7\30\1\312"+
    "\12\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\313\7\30\1\314\13\30\1\255\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\315\17\30\1\316\4\30\1\0\1\30\1\211\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\12\30\1\317"+
    "\7\30\1\70\2\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\320\6\30\1\321\1\30"+
    "\1\322\13\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\11\30\1\323\10\30\1\324\1\325"+
    "\1\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\13\30\1\326\7\30\1\255\1\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\30\1\327\23\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\330\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\23\30\1\64\1\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\25\30\1\0\1\331\1\30"+
    "\1\0\1\332\3\30\2\0\1\30\22\0\1\30\2\0"+
    "\25\30\1\0\1\333\1\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\1\334\4\30\1\335\3\30\1\336"+
    "\3\30\1\337\7\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\340\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\10\30\1\341\14\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\2\30\1\70\22\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\13\30\1\342\11\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\14\30\1\343\10\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\6\30\1\344\1\345\1\346\1\347\13\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\2\30"+
    "\1\350\3\30\1\351\16\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\1\352\3\30\1\353"+
    "\1\354\4\30\1\355\1\30\1\356\10\30\1\0\1\357"+
    "\1\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\3\30\1\142\1\30\1\360\17\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\14\30\1\361"+
    "\10\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\3\30\1\362\3\30\1\363\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\364\6\30\1\365\15\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\3\30\1\366\21\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\2\30\1\367\3\30\1\370\1\30\1\371\1\372"+
    "\1\255\1\373\7\30\1\374\1\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\7\30\1\375"+
    "\15\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\25\30\1\0\1\376\1\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\6\30\1\377\16\30"+
    "\1\0\1\u0100\1\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\6\30\1\64\1\30\1\u0101\1\30\1\u0102"+
    "\12\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\4\30\1\u0103\20\30\1\0\1\u0104\1\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\25\30"+
    "\1\0\2\30\1\0\1\211\3\30\2\0\1\30\22\0"+
    "\1\30\2\0\16\30\1\201\6\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\6\30\1\u0105"+
    "\6\30\1\64\7\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\10\30\1\u0106\14\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\5\30\1\u0107\17\30\1\0\1\u0108\1\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\25\30\1\0\1\u0109"+
    "\1\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\u010a\1\30\1\u010b\1\30\1\u010c\3\30\1\u010d\1\30"+
    "\1\213\12\30\1\0\1\30\1\u010e\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\u010f\1\30\1\u0110\22\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\3\30\1\u0109\21\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\11\30\1\u0111\13\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\4\30\1\u0112\17\30\1\u0113\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\4\30\1\70"+
    "\20\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\u0114\1\30\1\u0115\1\30\1\u0116\1\30"+
    "\1\u0117\1\30\1\u0118\7\30\1\u0119\2\30\1\u011a\1\30"+
    "\1\0\1\30\1\u011b\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\21\30\1\u011c\3\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\1\u011d\24\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\20\30\1\u011e\4\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\4\30\1\u011f\1\u011d"+
    "\17\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\12\30\1\70\12\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\4\30\1\u0120"+
    "\7\30\1\u0121\10\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\u0122\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\6\30\1\u0123\16\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\3\30\1\u0124\21\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\6\30\1\64\16\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\354\2\30\1\u0125\21\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\15\30\1\64\7\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\4\30\1\u0126\20\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\2\30\1\u0127\10\30\1\64\1\u0128\10\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\2\30\1\u0129\22\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\340\24\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\1\30"+
    "\1\u012a\23\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\14\30\1\u012b\10\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\20\30"+
    "\1\u012c\4\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\3\30\1\u012d\3\30\1\u012e\1\30"+
    "\1\u012f\13\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\11\30\1\u0130\13\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\14\30"+
    "\1\262\10\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\u0131\16\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\11\30"+
    "\1\u0132\13\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\7\30\1\u0133\1\30\1\176\13\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\6\30\1\u0134\16\30\1\0\2\30\1\0\1\64"+
    "\3\30\2\0\1\30\22\0\1\30\2\0\12\30\1\73"+
    "\1\u0135\11\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\14\30\1\320\10\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\12\30"+
    "\1\u0136\12\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\4\30\1\142\20\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\5\30"+
    "\1\u0137\6\30\1\u0138\10\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\3\30\1\u0139\21\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\4\30\1\u0126\5\30\1\u013a\12\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\6\30"+
    "\1\u0134\16\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\4\30\1\u013b\7\30\1\u013c\10\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\3\30\1\u013d\3\30\1\u013e\15\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\1\0\43\244"+
    "\1\0\21\244\1\0\11\30\1\340\13\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\11\0\1\u013f"+
    "\24\0\1\246\2\0\1\u013f\24\0\43\251\1\u0140\1\0"+
    "\1\u0141\1\u0142\10\251\1\u0142\5\251\1\0\3\30\1\u0143"+
    "\21\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\7\30\1\u0144\15\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\3\30\1\u0145"+
    "\21\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\7\30\1\u011d\15\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\16\30\1\u0146"+
    "\6\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\11\30\1\u0147\13\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\22\30\1\u0125"+
    "\2\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\16\30\1\64\6\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\22\30\1\64"+
    "\2\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\24\30\1\u0148\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\25\30\1\u0149\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\24\30"+
    "\1\142\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\262\24\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\2\30\1\u014a\22\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\6\30\1\u014b\16\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\2\30\1\u014c\22\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\7\30\1\u014d\15\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\5\30\1\u014e\17\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\3\30\1\u0137\1\30\1\u014f\1\257\16\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\u0150\24\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\3\30\1\214\21\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\7\30"+
    "\1\u0151\15\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\u0152\16\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\6\30"+
    "\1\u0153\16\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\10\30\1\70\14\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\4\30"+
    "\1\u0154\20\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\2\30\1\u0155\4\30\1\u0156\1\u0157"+
    "\13\30\1\u0158\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\7\30\1\u011d\13\30\1\374\1\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\7\30\1\u0159\15\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\14\30\1\u015a\10\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\12\30\1\u015b\12\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\2\30\1\u0100\22\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\21\30\1\u015c\3\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\13\30\1\64\11\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\u0126\24\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\13\30\1\u011e\11\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\7\30\1\u0126\15\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\u015d\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\21\30\1\70\3\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\14\30\1\64\10\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\12\30\1\71\12\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\3\30\1\340\21\30\1\0"+
    "\2\30\1\0\2\30\1\u015e\1\30\2\0\1\30\22\0"+
    "\1\30\2\0\12\30\1\u015f\12\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\11\30\1\222"+
    "\13\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\u0132\24\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\4\30\1\u0160\20\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\25\30\1\0\2\30\1\0\2\30\1\u0161\1\30"+
    "\2\0\1\30\22\0\1\30\2\0\23\30\1\u0162\1\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\6\30\1\u0163\16\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\7\30\1\u0164\15\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\11\30\1\u0165\1\u0166\12\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\7\30\1\64"+
    "\2\30\1\u0145\12\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\21\30\1\u0167\3\30\1\0"+
    "\1\64\1\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\25\30\1\u0168\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\12\30\1\64\12\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\1\u0169"+
    "\24\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\25\30\1\0\2\30\1\u016a\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\4\30\1\u016b\20\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\7\30\1\u016c\4\30\1\u016d\10\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\10\30\1\u0136"+
    "\14\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\7\30\1\u016e\15\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\2\30\1\u016f"+
    "\3\30\1\64\16\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\6\30\2\64\1\u0170\14\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\u0171\24\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\4\30\1\u0172\20\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\4\30\1\363\1\u0173\17\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\12\30\1\211\12\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\2\30\1\u0174\3\30\1\u0175\3\30\1\u0176\5\30"+
    "\1\u0177\4\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\14\30\1\u0178\10\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\23\30"+
    "\1\u0179\1\30\1\0\1\u017a\1\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\2\30\1\u017b\22\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\2\30\1\u017c\11\30\1\u017d\10\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\2\30\1\u017e"+
    "\22\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\u017f\24\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\14\30\1\u0180\10\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\10\30\1\u0181\14\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\4\30\1\u0182\20\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\7\30\1\u0183\15\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\3\30\1\64\3\30"+
    "\1\u0184\15\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\4\30\1\u0185\20\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\6\30"+
    "\1\u0186\16\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\7\30\1\u0187\1\30\1\u0188\13\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\5\30\1\211\17\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\12\30\1\u0189\12\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\7\30\1\u018a\15\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\5\30\1\u018b\3\30"+
    "\1\u018c\13\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\7\30\1\u017e\15\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\16\30"+
    "\1\u018d\6\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\7\30\1\64\1\u018e\14\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\4\30\1\u018f\20\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\u0190\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\u0191\6\30\1\64\15\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\10\30\1\64\14\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\30\1\176\23\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\1\245\24\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\4\30\1\u0192\20\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\10\30\1\u0193\14\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\7\30\1\u017f\15\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\4\30\1\u0194\4\30\1\u0195"+
    "\13\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\u0196\6\30\1\u0197\15\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\21\30"+
    "\1\u0198\3\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\u0199\1\30\1\u019a\11\30"+
    "\1\64\2\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\2\30\1\u019b\22\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\4\30"+
    "\1\u019c\20\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\2\30\1\64\5\30\1\u019d\10\30"+
    "\1\u019e\3\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\4\30\1\64\6\30\1\u019f\11\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\6\30\1\u01a0\16\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\1\u01a1\24\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\5\30\1\u01a2\17\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\3\30\1\u01a3\21\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\3\30\1\u01a4\3\30\1\u01a5\15\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\4\30\1\u01a6"+
    "\20\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\7\30\1\u01a7\15\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\16\30\1\211"+
    "\6\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\11\30\1\322\13\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\13\30\1\u01a8"+
    "\11\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\5\30\1\u01a9\17\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\10\30\1\164"+
    "\4\30\1\u011e\7\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\24\30\1\64\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\3\30"+
    "\1\64\21\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\1\30\1\314\23\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\5\30"+
    "\1\u0109\17\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\4\30\1\64\20\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\10\30"+
    "\1\314\14\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\u01aa\16\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\11\30"+
    "\1\65\13\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\4\30\1\u01ab\20\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\10\30"+
    "\1\u01ac\14\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\3\30\1\211\21\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\10\30"+
    "\1\u01ad\14\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\2\30\1\u01ae\5\30\1\u01af\12\30"+
    "\1\u0194\1\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\3\30\1\u011d\6\30\1\211\5\30"+
    "\1\u01b0\4\30\1\0\1\u01b1\1\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\6\30\1\u01b2\16\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\16\30\1\u01b3\6\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\6\30\1\u01b4\16\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\12\30\1\u01b5\1\30\1\70\10\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\10\30\1\261"+
    "\14\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\5\30\1\176\17\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\5\30\1\u017f"+
    "\17\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\12\30\1\313\12\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\6\30\1\u01b6"+
    "\1\u01b7\15\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\1\211\24\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\10\30\1\65"+
    "\14\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\4\30\1\u01b8\2\30\1\64\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\2\30\1\211\22\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\25\30\1\0\1\64\1\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\7\30"+
    "\1\u01b9\15\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\32\0\1\u01ba\3\0\1\u01ba\3\0\1\u01ba"+
    "\23\0\44\u01bb\1\0\1\u0141\1\0\10\u01bb\1\0\5\u01bb"+
    "\44\0\1\u01bc\20\0\43\u0142\1\u01bd\2\0\17\u0142\1\0"+
    "\4\30\1\u0179\20\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\14\30\1\65\10\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\10\30\1\363\14\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\3\30\1\u01be\21\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\3\30\1\340\21\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\140\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\6\0"+
    "\1\u01bf\60\0\6\30\1\u01c0\16\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\11\30\1\u01c1"+
    "\13\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\11\30\1\u01c2\13\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\10\30\1\211"+
    "\14\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\2\30\1\255\22\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\14\30\1\u01c3"+
    "\10\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\12\30\1\u01c4\12\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\25\30\1\0"+
    "\1\u01c5\1\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\7\30\1\u01c6\15\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\13\30\1\u015f\11\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\4\30\1\u01c7\20\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\6\30\1\363\16\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\14\30\1\u01c8\10\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\1\64\2\30\1\u01c9"+
    "\21\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\u01ca\24\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\6\30\1\u01cb\16\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\4\30\1\u01cc\20\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\13\30\1\u01cd\1\u01ce"+
    "\10\30\1\0\2\30\1\0\1\u01cf\1\30\1\u01d0\1\30"+
    "\2\0\1\30\22\0\1\30\2\0\5\30\1\u01d1\17\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\12\30\1\u0123\12\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\5\30\1\70\17\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\3\30\1\u01d2\21\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\7\30\1\u01d3\15\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\5\30\1\314\17\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\3\30\1\u01d4\21\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\2\30\1\u01d5\22\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\2\30\1\u01d6\14\30"+
    "\1\u01d7\5\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\4\30\1\u011e\20\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\2\30"+
    "\1\u01d8\22\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\21\30\1\255\3\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\12\0\1\u01d9"+
    "\54\0\23\30\1\70\1\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\11\0\1\u01da\55\0\20\30"+
    "\1\u0126\4\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\14\30\1\u01db\10\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\1\u014d"+
    "\24\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\23\30\1\u01dc\1\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\6\30\1\u017e"+
    "\16\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\u01dd\24\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\4\30\1\u01de\20\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\4\30\1\u0129\2\30\1\u01df\15\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\25\30"+
    "\1\0\1\340\1\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\6\30\1\u01e0\16\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\1\u01e1\10\30"+
    "\1\u01e2\13\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\7\30\1\u01e3\15\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\7\30"+
    "\1\u01a5\15\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\7\30\1\u01e4\15\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\11\30"+
    "\1\211\13\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\u01e5\16\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\3\30"+
    "\1\u011d\21\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\7\30\1\u01e6\15\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\2\30"+
    "\1\64\22\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\70\16\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\1\u01e7"+
    "\24\30\1\u0149\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\22\30\1\u01e8\2\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\1\65\24\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\12\30\1\u01e9\1\30\1\211\10\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\14\30"+
    "\1\u01ea\4\30\1\255\3\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\5\30\1\u01c9\17\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\11\30\1\u01eb\13\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\25\30\1\0\2\30"+
    "\1\0\1\64\3\30\2\0\1\30\22\0\1\30\2\0"+
    "\10\30\1\u01ec\14\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\6\30\1\u01ed\16\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\13\30\1\u01ee\11\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\14\30\1\314\10\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\3\30\1\u01db\21\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\u01ef\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\4\30\1\u01f0\20\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\11\30\1\u01f1\13\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\14\30\1\u01ab\10\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\30\1\u01f2\23\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\4\30\1\u01f3\20\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\14\30\1\u01f4\10\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\u01f5\24\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\25\30\1\0\1\314\1\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\5\30\1\u01f6"+
    "\17\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\14\30\1\u01f7\10\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\12\30\1\u01f8"+
    "\12\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\5\30\1\u01f9\3\30\1\u01fa\13\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\3\30\1\u01fb\21\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\u0156\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\30\1\u01fc\23\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\3\30\1\u01fd\21\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\5\30\1\u01fe\17\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\6\30\1\u01ff\16\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\3\30\1\u01f5\10\30\1\u0200\10\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\6\30\1\u0201"+
    "\16\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\14\30\1\340\10\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\12\30\1\u0202"+
    "\12\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\22\30\1\70\2\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\14\30\1\211"+
    "\10\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\11\30\1\u0203\13\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\14\30\1\u0204"+
    "\10\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\4\30\1\u0205\20\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\7\30\1\u0206"+
    "\15\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\11\30\1\314\13\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\11\30\1\u0106"+
    "\13\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\7\30\1\354\15\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\7\30\1\u0207"+
    "\15\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\7\30\1\u0208\15\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\11\30\1\u0209"+
    "\13\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\11\30\1\u020a\13\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\1\u020b\24\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\25\30\1\0\1\30\1\u017c\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\11\30\1\u020c\13\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\7\30\1\u019f\15\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\u020d\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\14\30\1\217\10\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\11\30\1\u020e\13\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\25\30\1\0\1\30\1\u020f\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\u0210\16\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\36\0\1\u01ba"+
    "\30\0\14\30\1\u0211\10\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\11\0\1\u0212\55\0\14\30"+
    "\1\u011e\10\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\2\30\1\u0213\22\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\3\30"+
    "\1\u0214\21\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\11\30\1\u0215\13\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\6\30"+
    "\1\u0216\16\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\1\64\24\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\25\30\1\0"+
    "\1\u0217\1\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\11\30\1\354\13\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\14\30\1\u017c\10\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\13\30\1\70\11\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\14\30\1\u0218\10\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\u0219\24\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\u021a\24\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\3\30"+
    "\1\u021b\21\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\25\30\1\0\1\u0126\1\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\5\30\1\u021c"+
    "\17\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\320\24\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\24\30\1\340\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\2\30\1\u021d\22\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\14\30\1\u01b1\10\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\11\30\1\106\13\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\6\30\1\u021e\16\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\3\30\1\u021f\21\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\1\u013a\3\30\1\u0220\20\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\5\0\1\u0221\112\0\1\u0222\33\0\12\30\1\314\12\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\6\30\1\u0223\16\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\13\30\1\u0224\11\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\3\30\1\71\21\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\2\30\1\302\22\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\14\30\1\u0225\10\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\11\30\1\u0226\13\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\12\30\1\u015e\12\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\10\30\1\u01dc\14\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\2\30\1\u0227\22\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\7\30\1\u0228\15\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\12\30\1\u0229\12\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\10\30\1\u022a\14\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\23\30\1\u022b\1\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\2\30\1\u022c\22\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\2\30\1\272\15\30\1\314\4\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\1\u022d"+
    "\24\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\1\u022e\24\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\11\30\1\u022f\13\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\11\30\1\363\13\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\10\30\1\262\14\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\5\30\1\360\17\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\25\30\1\0\1\30"+
    "\1\64\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\142\24\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\11\30\1\u0230\13\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\14\30"+
    "\1\70\10\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\4\30\1\211\20\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\14\30"+
    "\1\u0231\10\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\3\30\1\u01c1\21\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\14\30"+
    "\1\u0232\10\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\12\30\1\u014d\12\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\12\30"+
    "\1\u0233\12\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\1\u01ef\24\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\5\30\1\354"+
    "\17\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\11\30\1\u0234\13\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\7\30\1\163"+
    "\15\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\11\30\1\u014d\13\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\11\30\1\100"+
    "\13\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\25\30\1\0\1\30\1\u0235\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\10\30\1\u0182\14\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\7\30\1\u0236\15\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\3\30\1\u01ef\21\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\13\30\1\u0237\11\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\14\30\1\100\10\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\2\30\1\257\22\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\4\30\1\u0238\20\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\14\30\1\213\10\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\12\30\1\u0239\12\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\20\30\1\255\4\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\21\30\1\340\3\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\u023a\24\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\7\30\1\u023b\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\11\30\1\u023c\13\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\14\0\1\u023d\52\0\6\30\1\u023e"+
    "\16\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\12\30\1\u023f\12\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\6\30\1\u0240"+
    "\16\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\11\30\1\u0241\13\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\25\30\1\u0242"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\12\30\1\u011e\12\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\23\30\1\u017e\1\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\6\30\1\u0243\16\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\24\30\1\u0244\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\7\30"+
    "\1\u020b\15\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\1\u0245\24\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\1\170\24\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\12\30\1\u0246\12\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\1\u0247\24\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\14\0"+
    "\1\u0248\61\0\1\u0249\55\0\7\30\1\u024a\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\u024b\24\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\12\30\1\u024c\12\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\23\30"+
    "\1\u024d\1\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\14\30\1\u024e\10\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\6\30"+
    "\1\u024f\16\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\255\7\30\1\u0250\6\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\3\30\1\u01c7\21\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\11\30\1\u01a1\13\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\4\30\1\u0251\20\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\6\30\1\u017c\16\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\6\30\1\u0252\16\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\1\30\1\70\21\30"+
    "\1\u022e\1\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\1\u0107\6\30\1\313\15\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\30\1\u024e\23\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\12\30\1\272\12\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\13\30\1\u0253\11\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\11\30\1\u0254\13\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\12\30\1\u0255\12\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\5\30\1\u01f5\17\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\7\30\1\u0256\15\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\21\30\1\u0257\3\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\10\30\1\u022e\14\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\25\30\1\0\2\30\1\0"+
    "\1\u0258\3\30\2\0\1\30\22\0\1\30\2\0\17\30"+
    "\1\u0182\5\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\23\0\1\u0259\43\0\11\30\1\u025a\13\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\15\30\1\u025b\7\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\10\30\1\u025c\14\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\7\0\1\u025d\57\0\1\u025e\24\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\2\30\1\u025f"+
    "\22\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\25\30\1\0\1\u0260\1\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\7\30\1\u0261\15\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\6\30\1\u0262\16\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\22\0\1\u0263\54\0\1\u0264"+
    "\54\0\11\30\1\u0265\13\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\2\30\1\u0266\22\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\3\30\1\u0267\21\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\7\30\1\313\15\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\25\30\1\u0268\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\u0269\16\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\15\30"+
    "\1\u026a\7\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\10\30\1\u026b\14\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\21\30"+
    "\1\u0237\3\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\10\30\1\u0100\14\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\21\30"+
    "\1\u0100\3\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\14\30\1\u026c\10\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\6\30"+
    "\1\u0266\16\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\10\0\1\u026d\56\0\10\30\1\u017e\14\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\u026e\24\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\2\30\1\u026f\17\30\1\u0270"+
    "\2\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\4\0\1\u0271\62\0\2\30\1\u0272\22\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\7\30\1\211\15\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\23\30\1\176\1\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\25\30\1\u0273\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\7\30\1\64\1\30\1\u0147\13\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\11\0"+
    "\1\u0274\55\0\12\30\1\u0275\12\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\2\0\6\30\1\u0276"+
    "\16\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\12\30\1\315\12\30\1\0\2\30\1\0"+
    "\4\30\2\0\1\30\22\0\1\30\7\0\1\u025d\1\u0277"+
    "\4\0\1\u0278\51\0\7\30\1\u0279\15\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\10\30"+
    "\1\u026b\14\30\1\u027a\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\3\30\1\u0126\21\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\3\30"+
    "\1\u0125\21\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\20\0\1\u0264\46\0\5\30\1\u027b\17\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\11\30\1\u027c\13\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\7\30\1\u027d\15\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\11\0\1\u027e\55\0\3\30\1\u027f\21\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\20\0\1\u0280"+
    "\7\0\1\u0281\52\0\1\u0282\50\0\6\30\1\u0206\16\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\1\u0107\24\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\13\0\1\u0283\53\0\1\u0284\64\0"+
    "\14\30\1\u01cb\10\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\13\0\1\u0285\53\0\13\30\1\u017a"+
    "\11\30\1\0\2\30\1\0\4\30\2\0\1\30\22\0"+
    "\1\30\2\0\25\30\1\0\1\u0286\1\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\15\30\1\u0287\7\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\16\0\1\u0264\50\0\5\30\1\u0288\17\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\5\0\1\u0289"+
    "\72\0\1\u028a\61\0\1\u0264\104\0\1\u028b\44\0\1\u028c"+
    "\70\0\1\u028d\52\0\11\30\1\u028e\13\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\23\30"+
    "\1\u028f\1\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\14\30\1\302\10\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\7\0\1\u027e"+
    "\71\0\1\u0290\61\0\1\u0291\64\0\1\u0264\57\0\1\u0263"+
    "\62\0\4\30\1\u0292\20\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\16\30\1\u0293\6\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\7\0\1\u0284\61\0\1\u0264\62\0\1\u0294\24\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\14\30\1\u0295\10\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\14\30\1\u0296\10\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\1\u0297\24\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\11\30\1\u0298\13\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\2\30"+
    "\1\u0299\22\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\6\30\1\u029a\16\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\7\30"+
    "\1\u029b\15\30\1\0\2\30\1\0\4\30\2\0\1\30"+
    "\22\0\1\30\2\0\15\30\1\u029c\7\30\1\0\2\30"+
    "\1\0\4\30\2\0\1\30\22\0\1\30\2\0\6\30"+
    "\1\u0276\4\30\1\u029d\11\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\7\30\1\u029e\15\30"+
    "\1\0\2\30\1\0\4\30\2\0\1\30\22\0\1\30"+
    "\2\0\6\30\1\u029f\16\30\1\0\2\30\1\0\4\30"+
    "\2\0\1\30\22\0\1\30\2\0\1\u02a0\24\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\11\30\1\u02a1\13\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\2\0\4\30\1\u02a2\20\30\1\0"+
    "\2\30\1\0\4\30\2\0\1\30\22\0\1\30\2\0"+
    "\2\30\1\u029b\22\30\1\0\2\30\1\0\4\30\2\0"+
    "\1\30\22\0\1\30\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[34344];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\34\1\2\11\3\1\3\11\4\1\1\11"+
    "\173\1\2\11\230\1\1\0\7\1\1\0\36\1\1\0"+
    "\1\1\1\0\120\1\1\0\2\11\1\1\1\0\31\1"+
    "\2\0\67\1\1\0\16\1\2\0\32\1\1\0\4\1"+
    "\1\0\5\1\2\0\17\1\1\0\3\1\1\0\5\1"+
    "\1\0\1\11\3\1\1\0\4\1\1\0\3\1\1\0"+
    "\1\1\2\0\2\1\2\0\1\1\1\0\3\1\1\0"+
    "\1\1\6\0\3\1\5\0\2\1\1\0\22\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[674];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    String File = "";
    String ArchivoEscribir = "";
    Scanner scanner = new Scanner(System.in);


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public MiniSQL(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 202) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    	System.out.println("Inserte nombre de archivo");
	File = scanner.nextLine();
	try{
		PrintWriter writer = new PrintWriter(File + ".out", "UTF-8");
		writer.print(ArchivoEscribir);
		writer.close();
		System.out.println("El archivo a sido generado con exito");
	}catch (Exception e){
		System.err.println("Error: " + e.getMessage());
	}

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
        return YYEOF;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { ArchivoEscribir = ArchivoEscribir + "Error en la col: " + yycolumn + " fila: " + yyline + " Caracter no Reconocido" + "\n";
            } 
            // fall through
          case 21: break;
          case 2: 
            { if(yylength() < 31)
	{
		ArchivoEscribir = ArchivoEscribir + "Identificador" + " | "+ yytext()+ " | " + yycolumn + " | " + yyline + "\n";
	}else{
	ArchivoEscribir = ArchivoEscribir + "Identificador" + " | "+ yytext().substring(0,31) + " Advertencia: Identificador truncado" + "\n"; }
            } 
            // fall through
          case 22: break;
          case 3: 
            { ArchivoEscribir = ArchivoEscribir + "Boolean" + " | "+ yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 23: break;
          case 4: 
            { ArchivoEscribir = ArchivoEscribir +"Operador" + " | "+ yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 24: break;
          case 5: 
            { ArchivoEscribir = ArchivoEscribir + "Entero" + " | " + yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 25: break;
          case 6: 
            { ArchivoEscribir = ArchivoEscribir + "Simbolo"+ " | " + yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 26: break;
          case 7: 
            { ArchivoEscribir = ArchivoEscribir + "Operador" + " | "+ yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 27: break;
          case 8: 
            { ArchivoEscribir = ArchivoEscribir + "Error en la col: " + yycolumn + " fila: " + yyline + " Cadena sin cerrar"+ "\n";
            } 
            // fall through
          case 28: break;
          case 9: 
            { /*Hacer nada equisde*/
            } 
            // fall through
          case 29: break;
          case 10: 
            { ArchivoEscribir = ArchivoEscribir + "Operador"+ " | " + yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 30: break;
          case 11: 
            { ArchivoEscribir = ArchivoEscribir + "Operador"+ " | " + yytext()+ " | " + yycolumn + " | " + yyline+ "\n";
            } 
            // fall through
          case 31: break;
          case 12: 
            { ArchivoEscribir = ArchivoEscribir + "Operador"+ " | "+ yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 32: break;
          case 13: 
            { ArchivoEscribir = ArchivoEscribir + "Simbolo" + " | "+ yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 33: break;
          case 14: 
            { ArchivoEscribir = ArchivoEscribir +"Operador"+ " | "+ yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 34: break;
          case 15: 
            { ArchivoEscribir = ArchivoEscribir + "Reservada" + " | " + yytext() + " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 35: break;
          case 16: 
            { ArchivoEscribir = ArchivoEscribir + "Comentario" + " | "+ yytext().substring(0, yylength() - 1) + " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 36: break;
          case 17: 
            { ArchivoEscribir = ArchivoEscribir + "Float" + " | "+ yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 37: break;
          case 18: 
            { ArchivoEscribir = ArchivoEscribir + "Cadena" + " | "+ yytext().substring(0, yylength() - 1) + " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 38: break;
          case 19: 
            { ArchivoEscribir = ArchivoEscribir + "Error en la col: " + yycolumn + " fila: " + yyline + " Comentario multilinea sin cerrar"+ "\n";
            } 
            // fall through
          case 39: break;
          case 20: 
            { ArchivoEscribir = ArchivoEscribir + "Comentariomult" + " | "+ yytext()+ " | " + yycolumn + " | " + yyline + "\n";
            } 
            // fall through
          case 40: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java MiniSQL [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        MiniSQL scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new MiniSQL(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
