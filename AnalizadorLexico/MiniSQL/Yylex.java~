/* The following code was generated by JFlex 1.7.0 */

package MiniSQL;

import java.lang.Object;
import java.lang.String;
import java.io.PrintWriter;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.lang.System;
import java.io.Console;
import java.io.InputStream;
import java.util.Scanner;
import java_cup.runtime.*;




/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>MiniSQL/LexerS.jflex</tt>
 */
public class Yylex implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\67\1\43\3\67\22\0\1\67\1\52\1\0\1\65\1\0"+
    "\1\46\1\53\1\42\1\60\1\61\1\45\1\41\1\55\1\31\1\37"+
    "\1\44\2\35\10\35\1\0\1\54\1\51\1\50\1\47\1\0\1\64"+
    "\1\1\1\2\1\11\1\14\1\10\1\30\1\22\1\17\1\12\1\33"+
    "\1\23\1\5\1\27\1\13\1\4\1\24\1\34\1\15\1\3\1\7"+
    "\1\6\1\21\1\25\1\32\1\16\1\20\1\56\1\0\1\57\1\0"+
    "\1\26\1\0\4\66\1\40\25\66\1\62\1\36\1\63\7\0\1\67"+
    "\32\0\1\67\u15df\0\1\67\u097f\0\13\67\35\0\2\67\5\0\1\67"+
    "\57\0\1\67\u0fa0\0\1\67\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\ud00f\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\4\2\2\3\4\2\1\3\14\2\1\4"+
    "\2\2\1\5\1\3\1\6\1\7\1\10\1\11\1\12"+
    "\1\13\1\14\1\15\1\16\1\17\1\20\1\1\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\32\1\2\1\33\2\2\1\34\13\2\1\35\16\2"+
    "\1\36\1\37\2\2\1\40\11\2\1\41\17\2\1\42"+
    "\1\43\2\2\1\44\1\2\1\45\25\2\1\46\34\2"+
    "\1\47\1\2\1\50\1\51\1\52\1\10\1\0\1\53"+
    "\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63"+
    "\2\2\1\64\1\65\3\2\1\66\1\67\1\70\1\71"+
    "\1\72\1\73\5\2\1\74\5\2\1\75\3\2\1\76"+
    "\11\2\1\77\7\2\1\100\13\2\1\101\10\2\1\102"+
    "\12\2\1\103\26\2\1\104\11\2\1\105\7\2\1\106"+
    "\7\2\1\107\34\2\1\110\2\2\1\111\2\2\1\112"+
    "\20\2\1\113\3\2\1\114\2\2\1\115\11\2\1\50"+
    "\2\0\7\2\1\116\1\117\5\2\1\120\1\121\13\2"+
    "\1\122\13\2\1\123\1\2\1\124\1\2\1\125\1\2"+
    "\1\126\1\2\1\127\4\2\1\130\1\2\1\131\1\2"+
    "\1\132\13\2\1\133\1\2\1\134\1\135\2\2\1\136"+
    "\1\2\1\137\1\2\1\140\1\0\3\2\1\141\2\2"+
    "\1\142\1\143\1\144\23\2\1\145\3\2\1\146\15\2"+
    "\1\147\1\2\1\150\1\2\1\151\2\2\1\152\1\153"+
    "\2\2\1\154\1\2\1\155\3\2\1\156\5\2\1\157"+
    "\1\160\2\2\1\161\2\2\1\162\1\163\1\164\11\2"+
    "\1\165\2\2\1\166\1\167\3\2\1\170\1\171\3\2"+
    "\1\172\3\2\1\173\3\2\1\174\10\2\1\175\1\176"+
    "\1\2\1\177\14\2\1\200\3\2\1\201\1\2\1\202"+
    "\1\2\1\203\1\50\1\0\1\204\3\2\1\205\4\2"+
    "\1\206\2\2\1\207\15\2\1\210\3\2\1\211\2\2"+
    "\1\212\2\2\1\213\10\2\1\214\1\215\1\2\1\216"+
    "\1\2\1\217\1\220\1\221\4\2\1\222\1\223\13\2"+
    "\1\0\14\2\1\224\10\2\1\225\3\2\1\226\3\2"+
    "\1\227\7\2\1\230\1\231\1\2\1\232\4\2\1\233"+
    "\4\2\1\234\34\2\1\235\2\2\1\236\3\2\1\237"+
    "\1\240\5\2\1\241\4\2\1\242\1\243\4\2\1\244"+
    "\1\2\1\245\1\246\1\247\1\250\1\2\1\251\1\2"+
    "\1\252\1\253\2\2\1\254\1\2\1\255\1\2\1\256"+
    "\1\2\1\204\4\2\1\257\1\260\2\2\1\261\3\2"+
    "\1\262\1\2\1\263\3\2\1\264\1\265\7\2\1\266"+
    "\2\2\1\267\4\2\1\270\2\2\1\271\1\272\2\2"+
    "\1\273\14\2\1\274\1\0\1\275\3\2\1\276\1\277"+
    "\5\2\1\300\7\2\1\301\1\2\1\302\1\2\1\303"+
    "\5\2\1\304\14\2\1\305\2\2\1\306\1\307\2\2"+
    "\1\310\20\2\1\311\1\2\1\312\1\313\2\2\1\314"+
    "\1\2\1\315\2\2\1\316\1\317\2\2\1\320\13\2"+
    "\1\321\1\322\11\2\1\323\3\2\1\324\1\325\1\2"+
    "\1\326\6\2\1\327\5\2\1\330\2\2\1\331\1\332"+
    "\1\333\2\2\1\334\10\2\1\335\1\2\1\0\1\2"+
    "\1\336\1\337\1\2\1\340\1\341\2\2\1\342\3\2"+
    "\1\343\1\344\1\2\1\345\1\2\1\346\10\2\1\347"+
    "\1\350\4\2\1\351\1\2\1\352\1\2\1\353\4\2"+
    "\1\354\1\355\1\356\13\2\1\357\6\2\1\360\1\361"+
    "\1\362\1\2\1\363\3\2\1\364\1\2\1\365\1\366"+
    "\3\2\1\367\1\370\3\2\1\371\1\2\1\372\10\2"+
    "\1\373\1\374\1\375\1\376\2\2\1\377\3\2\1\u0100"+
    "\3\2\1\u0101\2\2\1\u0102\2\2\1\u0103\1\2\1\u0104"+
    "\1\u0105\1\2\1\u0106\1\2\1\u0107\1\2\1\u0108\1\u0109"+
    "\13\2\1\u010a\2\2\1\u010b\1\2\1\u010c\1\2\1\u010d"+
    "\1\2\1\u010e\2\2\1\u010f\2\2\1\u0110\2\2\1\u0111"+
    "\1\u0112\1\2\1\u0113\1\u0114\1\u0115\3\2\1\u0116\1\u0117"+
    "\1\2\1\u0118\4\2\1\u0119\1\u011a\1\2\1\u011b\1\u011c"+
    "\2\2\1\u011d\12\2\1\u011e\2\2\1\u011f\1\u0120\2\2"+
    "\1\u0121\2\2\1\u0122\5\2\1\u0123\3\2\1\u0124\3\2"+
    "\1\u0125\1\2\1\u0126\1\u0127\1\u0128\2\2\1\u0129\5\2"+
    "\1\u012a\1\2\1\u012b\4\2\1\u012c\1\u012d\2\2\1\u012e"+
    "\3\2\1\u012f\1\u0130\5\2\1\u0131\2\2\1\u0132\1\u0133"+
    "\6\2\1\u0134\1\u0135\1\2\1\u0136\6\2\1\u0137\4\2"+
    "\1\u0138\1\u0139\1\u013a\1\2\1\u013b\1\u013c\2\2\1\u013d"+
    "\1\u013e\1\2\1\u013f\6\2\1\u0140\2\2\1\u0141\2\2"+
    "\1\u0142\1\u0143\1\u0144\1\u0145\6\2\1\u0146\1\u0147\1\u0148"+
    "\2\2\1\u0149\1\u014a\1\u014b\1\u014c\2\2\1\u014d\3\2"+
    "\1\u014e\5\2\1\u014f\1\u0150\1\u0151\2\2\1\u0152\1\2"+
    "\1\u0153\1\u0154\3\2\1\u0155\1\2\1\u0156\1\u0157\3\2"+
    "\1\u0158\2\2\1\u0159\6\2\1\u015a\2\2\1\u015b\6\2"+
    "\1\u015c\1\u015d\15\2\1\u015e\1\u015f\7\2\1\u0160";

  private static int [] zzUnpackAction() {
    int [] result = new int[1398];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\70\0\160\0\250\0\340\0\u0118\0\u0150\0\u0188"+
    "\0\u01c0\0\u01f8\0\u0230\0\u0268\0\u02a0\0\u02d8\0\u0310\0\u0348"+
    "\0\u0380\0\u03b8\0\u03f0\0\u0428\0\u0460\0\u0498\0\u04d0\0\u0508"+
    "\0\u0540\0\u0578\0\u05b0\0\u05e8\0\u0620\0\u0658\0\70\0\70"+
    "\0\u0690\0\u06c8\0\u0700\0\70\0\70\0\u0738\0\u0770\0\u07a8"+
    "\0\u07e0\0\u0818\0\70\0\70\0\u0850\0\70\0\u0888\0\70"+
    "\0\u08c0\0\70\0\70\0\u08f8\0\u0930\0\u0968\0\u09a0\0\u09d8"+
    "\0\u05b0\0\u0a10\0\u0a48\0\u0a80\0\u0ab8\0\u0af0\0\u0b28\0\u0b60"+
    "\0\u0b98\0\u0bd0\0\u0c08\0\u0c40\0\u05b0\0\u0c78\0\u0cb0\0\u0ce8"+
    "\0\u0d20\0\u0d58\0\u0d90\0\u0dc8\0\u0e00\0\u0e38\0\u0e70\0\u0ea8"+
    "\0\u0ee0\0\u0f18\0\u0f50\0\u0f88\0\u0fc0\0\u0ff8\0\u1030\0\u1068"+
    "\0\u10a0\0\u10d8\0\u1110\0\u1148\0\u1180\0\u11b8\0\u11f0\0\u1228"+
    "\0\u1260\0\u1298\0\u12d0\0\u1308\0\u1340\0\u1378\0\u13b0\0\u13e8"+
    "\0\u1420\0\u1458\0\u1490\0\u14c8\0\u1500\0\u1538\0\u1570\0\u15a8"+
    "\0\u15e0\0\u1618\0\u1650\0\u1688\0\u16c0\0\u05b0\0\u16f8\0\u1730"+
    "\0\u1768\0\u17a0\0\u17d8\0\u1810\0\u1848\0\u1880\0\u18b8\0\u18f0"+
    "\0\u1928\0\u1960\0\u1998\0\u19d0\0\u1a08\0\u1a40\0\u1a78\0\u1ab0"+
    "\0\u1ae8\0\u1b20\0\u1b58\0\u1b90\0\u1bc8\0\u1c00\0\u1c38\0\u1c70"+
    "\0\u1ca8\0\u1ce0\0\u1d18\0\u1d50\0\u1d88\0\u1dc0\0\u1df8\0\u1e30"+
    "\0\u1e68\0\u1ea0\0\u1ed8\0\u1f10\0\u1f48\0\u1f80\0\u1fb8\0\u1ff0"+
    "\0\u2028\0\u2060\0\u2098\0\u20d0\0\u2108\0\u2140\0\u2178\0\u21b0"+
    "\0\u21e8\0\u2220\0\u2258\0\u2290\0\u22c8\0\70\0\70\0\70"+
    "\0\u2300\0\70\0\70\0\70\0\70\0\70\0\70\0\70"+
    "\0\70\0\70\0\u2338\0\u2370\0\u05b0\0\u23a8\0\u23e0\0\u2418"+
    "\0\u2450\0\u05b0\0\u05b0\0\u05b0\0\u05b0\0\u05b0\0\u05b0\0\u2488"+
    "\0\u24c0\0\u24f8\0\u2530\0\u2568\0\u25a0\0\u25d8\0\u2610\0\u2648"+
    "\0\u2680\0\u26b8\0\u05b0\0\u26f0\0\u2728\0\u2760\0\u2798\0\u27d0"+
    "\0\u2808\0\u2840\0\u2878\0\u28b0\0\u28e8\0\u2920\0\u2958\0\u2990"+
    "\0\u29c8\0\u2a00\0\u2a38\0\u2a70\0\u2aa8\0\u2ae0\0\u2b18\0\u2b50"+
    "\0\u2b88\0\u2bc0\0\u2bf8\0\u2c30\0\u2c68\0\u2ca0\0\u2cd8\0\u2d10"+
    "\0\u2d48\0\u2d80\0\u2db8\0\u2df0\0\u2e28\0\u2e60\0\u2e98\0\u2ed0"+
    "\0\u2f08\0\u2f40\0\u2f78\0\u2fb0\0\u2fe8\0\u05b0\0\u3020\0\u3058"+
    "\0\u3090\0\u30c8\0\u3100\0\u3138\0\u3170\0\u31a8\0\u31e0\0\u3218"+
    "\0\u3250\0\u3288\0\u32c0\0\u32f8\0\u3330\0\u3368\0\u33a0\0\u33d8"+
    "\0\u3410\0\u3448\0\u3480\0\u34b8\0\u34f0\0\u3528\0\u3560\0\u3598"+
    "\0\u35d0\0\u3608\0\u3640\0\u3678\0\u36b0\0\u36e8\0\u3720\0\u3758"+
    "\0\u3790\0\u37c8\0\u3800\0\u3838\0\u3870\0\u38a8\0\u38e0\0\u3918"+
    "\0\u3950\0\u05b0\0\u3988\0\u39c0\0\u39f8\0\u3a30\0\u3a68\0\u3aa0"+
    "\0\u3ad8\0\u05b0\0\u3b10\0\u3b48\0\u3b80\0\u3bb8\0\u3bf0\0\u3c28"+
    "\0\u3c60\0\u3c98\0\u3cd0\0\u3d08\0\u3d40\0\u3d78\0\u3db0\0\u3de8"+
    "\0\u3e20\0\u3e58\0\u3e90\0\u3ec8\0\u3f00\0\u3f38\0\u3f70\0\u3fa8"+
    "\0\u3fe0\0\u4018\0\u4050\0\u4088\0\u40c0\0\u40f8\0\u4130\0\u4168"+
    "\0\u41a0\0\u41d8\0\u4210\0\u4248\0\u4280\0\u42b8\0\u05b0\0\u42f0"+
    "\0\u4328\0\u05b0\0\u4360\0\u4398\0\u05b0\0\u43d0\0\u4408\0\u4440"+
    "\0\u4478\0\u44b0\0\u44e8\0\u4520\0\u4558\0\u4590\0\u45c8\0\u4600"+
    "\0\u4638\0\u4670\0\u46a8\0\u46e0\0\u4718\0\u05b0\0\u4750\0\u4788"+
    "\0\u47c0\0\u47f8\0\u4830\0\u4868\0\u48a0\0\u48d8\0\u4910\0\u4948"+
    "\0\u4980\0\u49b8\0\u49f0\0\u4a28\0\u4a60\0\u4a98\0\u4ad0\0\u4b08"+
    "\0\u4b40\0\u4b78\0\u4bb0\0\u4be8\0\u4c20\0\u4c58\0\u4c90\0\u4cc8"+
    "\0\u05b0\0\u05b0\0\u4d00\0\u4d38\0\u4d70\0\u4da8\0\u4de0\0\u05b0"+
    "\0\u05b0\0\u4e18\0\u4e50\0\u4e88\0\u4ec0\0\u4ef8\0\u4f30\0\u4f68"+
    "\0\u4fa0\0\u4fd8\0\u5010\0\u5048\0\u05b0\0\u5080\0\u50b8\0\u50f0"+
    "\0\u5128\0\u5160\0\u5198\0\u51d0\0\u5208\0\u5240\0\u5278\0\u52b0"+
    "\0\u05b0\0\u52e8\0\u5320\0\u5358\0\u5390\0\u53c8\0\u05b0\0\u5400"+
    "\0\u05b0\0\u5438\0\u5470\0\u54a8\0\u54e0\0\u05b0\0\u5518\0\u05b0"+
    "\0\u5550\0\u05b0\0\u5588\0\u55c0\0\u55f8\0\u5630\0\u5668\0\u56a0"+
    "\0\u56d8\0\u5710\0\u5748\0\u5780\0\u57b8\0\u57f0\0\u5828\0\u5860"+
    "\0\u05b0\0\u5898\0\u58d0\0\u05b0\0\u5908\0\u05b0\0\u5940\0\u05b0"+
    "\0\u5978\0\u59b0\0\u59e8\0\u5a20\0\u5a58\0\u5a90\0\u5ac8\0\u05b0"+
    "\0\u05b0\0\u05b0\0\u5b00\0\u5b38\0\u5b70\0\u5ba8\0\u5be0\0\u5c18"+
    "\0\u5c50\0\u5c88\0\u5cc0\0\u5cf8\0\u5d30\0\u5d68\0\u5da0\0\u5dd8"+
    "\0\u5e10\0\u5e48\0\u5e80\0\u5eb8\0\u5ef0\0\u5f28\0\u5f60\0\u5f98"+
    "\0\u5fd0\0\u05b0\0\u6008\0\u6040\0\u6078\0\u60b0\0\u60e8\0\u6120"+
    "\0\u6158\0\u6190\0\u61c8\0\u6200\0\u6238\0\u6270\0\u62a8\0\u05b0"+
    "\0\u62e0\0\u6318\0\u6350\0\u05b0\0\u6388\0\u63c0\0\u05b0\0\u05b0"+
    "\0\u63f8\0\u6430\0\u05b0\0\u6468\0\u64a0\0\u64d8\0\u6510\0\u6548"+
    "\0\u05b0\0\u6580\0\u65b8\0\u65f0\0\u6628\0\u6660\0\u05b0\0\u05b0"+
    "\0\u6698\0\u66d0\0\u05b0\0\u6708\0\u6740\0\u05b0\0\u05b0\0\u6778"+
    "\0\u67b0\0\u67e8\0\u6820\0\u6858\0\u6890\0\u68c8\0\u6900\0\u6938"+
    "\0\u6970\0\u05b0\0\u69a8\0\u69e0\0\u05b0\0\u05b0\0\u6a18\0\u6a50"+
    "\0\u6a88\0\u05b0\0\u05b0\0\u6ac0\0\u6af8\0\u6b30\0\u05b0\0\u6b68"+
    "\0\u6ba0\0\u6bd8\0\u05b0\0\u6c10\0\u6c48\0\u6c80\0\u6cb8\0\u6cf0"+
    "\0\u6d28\0\u6d60\0\u6d98\0\u6dd0\0\u6e08\0\u6e40\0\u6e78\0\u05b0"+
    "\0\u6eb0\0\u6ee8\0\u6f20\0\u6f58\0\u6f90\0\u6fc8\0\u7000\0\u7038"+
    "\0\u7070\0\u70a8\0\u70e0\0\u7118\0\u7150\0\u7188\0\u71c0\0\u05b0"+
    "\0\u71f8\0\u7230\0\u7268\0\u05b0\0\u72a0\0\u05b0\0\u72d8\0\u05b0"+
    "\0\u7310\0\u7348\0\u4b08\0\u7380\0\u73b8\0\u73f0\0\u05b0\0\u7428"+
    "\0\u7460\0\u7498\0\u74d0\0\u05b0\0\u7508\0\u7540\0\u05b0\0\u7578"+
    "\0\u75b0\0\u75e8\0\u7620\0\u7658\0\u7690\0\u76c8\0\u7700\0\u7738"+
    "\0\u7770\0\u77a8\0\u77e0\0\u7818\0\u05b0\0\u7850\0\u7888\0\u78c0"+
    "\0\u05b0\0\u78f8\0\u7930\0\u05b0\0\u7968\0\u79a0\0\u05b0\0\u79d8"+
    "\0\u7a10\0\u7a48\0\u7a80\0\u7ab8\0\u7af0\0\u7b28\0\u7b60\0\u05b0"+
    "\0\u05b0\0\u7b98\0\u05b0\0\u7bd0\0\u05b0\0\u05b0\0\u05b0\0\u7c08"+
    "\0\u7c40\0\u7c78\0\u7cb0\0\u05b0\0\u7ce8\0\u7d20\0\u7d58\0\u7d90"+
    "\0\u7dc8\0\u7e00\0\u7e38\0\u7e70\0\u7ea8\0\u7ee0\0\u7f18\0\u7f50"+
    "\0\u7f88\0\u7fc0\0\u7ff8\0\u8030\0\u8068\0\u80a0\0\u80d8\0\u8110"+
    "\0\u8148\0\u8180\0\u81b8\0\u81f0\0\u8228\0\u05b0\0\u8260\0\u8298"+
    "\0\u82d0\0\u8308\0\u8340\0\u8378\0\u83b0\0\u83e8\0\u05b0\0\u8420"+
    "\0\u8458\0\u8490\0\u05b0\0\u84c8\0\u8500\0\u8538\0\u8570\0\u85a8"+
    "\0\u85e0\0\u8618\0\u8650\0\u8688\0\u86c0\0\u86f8\0\u05b0\0\u05b0"+
    "\0\u8730\0\u05b0\0\u8768\0\u87a0\0\u87d8\0\u8810\0\u05b0\0\u8848"+
    "\0\u8880\0\u88b8\0\u88f0\0\u05b0\0\u8928\0\u8960\0\u8998\0\u89d0"+
    "\0\u8a08\0\u8a40\0\u8a78\0\u8ab0\0\u8ae8\0\u8b20\0\u8b58\0\u8b90"+
    "\0\u8bc8\0\u8c00\0\u8c38\0\u8c70\0\u8ca8\0\u8ce0\0\u8d18\0\u8d50"+
    "\0\u8d88\0\u8dc0\0\u8df8\0\u8e30\0\u8e68\0\u8ea0\0\u8ed8\0\u8f10"+
    "\0\u05b0\0\u8f48\0\u8f80\0\u8fb8\0\u8ff0\0\u9028\0\u9060\0\u05b0"+
    "\0\u05b0\0\u9098\0\u90d0\0\u9108\0\u9140\0\u9178\0\u05b0\0\u91b0"+
    "\0\u91e8\0\u9220\0\u9258\0\u05b0\0\u05b0\0\u9290\0\u92c8\0\u9300"+
    "\0\u9338\0\u9370\0\u93a8\0\u05b0\0\u05b0\0\u05b0\0\u05b0\0\u93e0"+
    "\0\u05b0\0\u9418\0\u05b0\0\u05b0\0\u9450\0\u9488\0\u05b0\0\u94c0"+
    "\0\u05b0\0\u94f8\0\u05b0\0\u9530\0\70\0\u9568\0\u95a0\0\u95d8"+
    "\0\u9610\0\u05b0\0\u05b0\0\u9648\0\u9680\0\u05b0\0\u96b8\0\u96f0"+
    "\0\u9728\0\u05b0\0\u9760\0\u05b0\0\u9798\0\u97d0\0\u9808\0\u05b0"+
    "\0\u05b0\0\u9840\0\u9878\0\u98b0\0\u98e8\0\u9920\0\u9958\0\u9990"+
    "\0\u05b0\0\u99c8\0\u9a00\0\u05b0\0\u9a38\0\u9a70\0\u9aa8\0\u9ae0"+
    "\0\u05b0\0\u9b18\0\u9b50\0\u05b0\0\u05b0\0\u9b88\0\u9bc0\0\u9bf8"+
    "\0\u9c30\0\u9c68\0\u9ca0\0\u9cd8\0\u9d10\0\u9d48\0\u9d80\0\u9db8"+
    "\0\u9df0\0\u9e28\0\u9e60\0\u9e98\0\u05b0\0\u9ed0\0\u05b0\0\u9f08"+
    "\0\u9f40\0\u9f78\0\u9fb0\0\u05b0\0\u9fe8\0\ua020\0\ua058\0\ua090"+
    "\0\ua0c8\0\u05b0\0\ua100\0\ua138\0\ua170\0\ua1a8\0\ua1e0\0\ua218"+
    "\0\ua250\0\u05b0\0\ua288\0\u05b0\0\ua2c0\0\u05b0\0\ua2f8\0\ua330"+
    "\0\ua368\0\ua3a0\0\ua3d8\0\u05b0\0\ua410\0\ua448\0\ua480\0\ua4b8"+
    "\0\ua4f0\0\ua528\0\ua560\0\ua598\0\ua5d0\0\ua608\0\ua640\0\ua678"+
    "\0\u05b0\0\ua6b0\0\ua6e8\0\u05b0\0\u05b0\0\ua720\0\ua758\0\u05b0"+
    "\0\ua790\0\ua7c8\0\ua800\0\ua838\0\ua870\0\ua8a8\0\ua8e0\0\ua918"+
    "\0\ua950\0\ua988\0\ua9c0\0\ua9f8\0\uaa30\0\uaa68\0\uaaa0\0\uaad8"+
    "\0\u05b0\0\uab10\0\u05b0\0\u05b0\0\uab48\0\uab80\0\u05b0\0\uabb8"+
    "\0\u05b0\0\uabf0\0\uac28\0\u05b0\0\u05b0\0\uac60\0\uac98\0\u05b0"+
    "\0\uacd0\0\uad08\0\uad40\0\uad78\0\uadb0\0\uade8\0\uae20\0\uae58"+
    "\0\uae90\0\uaec8\0\uaf00\0\u05b0\0\u05b0\0\uaf38\0\uaf70\0\uafa8"+
    "\0\uafe0\0\ub018\0\ub050\0\ub088\0\ub0c0\0\ub0f8\0\u05b0\0\ub130"+
    "\0\ub168\0\ub1a0\0\ub1d8\0\u05b0\0\ub210\0\u05b0\0\ub248\0\ub280"+
    "\0\ub2b8\0\ub2f0\0\ub328\0\ub360\0\u05b0\0\ub398\0\ub3d0\0\ub408"+
    "\0\ub440\0\ub478\0\u05b0\0\ub4b0\0\ub4e8\0\u05b0\0\u05b0\0\u05b0"+
    "\0\ub520\0\ub558\0\u05b0\0\ub590\0\ub5c8\0\ub600\0\ub638\0\ub670"+
    "\0\ub6a8\0\ub6e0\0\ub718\0\u05b0\0\ub750\0\ub788\0\ub7c0\0\u05b0"+
    "\0\u05b0\0\ub7f8\0\ub830\0\u05b0\0\ub868\0\ub8a0\0\u05b0\0\ub8d8"+
    "\0\ub910\0\ub948\0\ub980\0\u05b0\0\ub9b8\0\u05b0\0\ub9f0\0\uba28"+
    "\0\uba60\0\uba98\0\ubad0\0\ubb08\0\ubb40\0\ubb78\0\ubbb0\0\ubbe8"+
    "\0\u05b0\0\u05b0\0\ubc20\0\ubc58\0\ubc90\0\ubcc8\0\u05b0\0\ubd00"+
    "\0\u05b0\0\ubd38\0\u05b0\0\ubd70\0\ubda8\0\ubde0\0\ube18\0\u05b0"+
    "\0\u05b0\0\u05b0\0\ube50\0\ube88\0\ubec0\0\ubef8\0\ubf30\0\ubf68"+
    "\0\ubfa0\0\ubfd8\0\uc010\0\uc048\0\uc080\0\u05b0\0\uc0b8\0\uc0f0"+
    "\0\uc128\0\uc160\0\uc198\0\uc1d0\0\u05b0\0\u05b0\0\u05b0\0\uc208"+
    "\0\u05b0\0\uc240\0\uc278\0\uc2b0\0\u05b0\0\uc2e8\0\u05b0\0\u05b0"+
    "\0\uc320\0\uc358\0\uc390\0\u05b0\0\u05b0\0\uc3c8\0\uc400\0\uc438"+
    "\0\u05b0\0\uc470\0\u05b0\0\uc4a8\0\uc4e0\0\uc518\0\uc550\0\uc588"+
    "\0\uc5c0\0\uc5f8\0\uc630\0\u05b0\0\u05b0\0\u05b0\0\u05b0\0\uc668"+
    "\0\uc6a0\0\u05b0\0\uc6d8\0\uc710\0\uc748\0\u05b0\0\uc780\0\uc7b8"+
    "\0\uc7f0\0\u05b0\0\uc828\0\uc860\0\u05b0\0\uc898\0\uc8d0\0\u05b0"+
    "\0\uc908\0\70\0\u05b0\0\uc940\0\u05b0\0\uc978\0\u05b0\0\uc9b0"+
    "\0\uc9e8\0\u05b0\0\uca20\0\uca58\0\uca90\0\ucac8\0\ucb00\0\ucb38"+
    "\0\ucb70\0\ucba8\0\ucbe0\0\ucc18\0\ucc50\0\u05b0\0\ucc88\0\uccc0"+
    "\0\uccf8\0\ucd30\0\u05b0\0\ucd68\0\u05b0\0\ucda0\0\u05b0\0\ucdd8"+
    "\0\uce10\0\u05b0\0\uce48\0\uce80\0\u05b0\0\uceb8\0\ucef0\0\u05b0"+
    "\0\u05b0\0\ucf28\0\u05b0\0\u05b0\0\u05b0\0\ucf60\0\ucf98\0\ucfd0"+
    "\0\u05b0\0\u05b0\0\ud008\0\u05b0\0\ud040\0\ud078\0\ud0b0\0\ud0e8"+
    "\0\u05b0\0\u05b0\0\ud120\0\ud158\0\u05b0\0\ud190\0\ud1c8\0\u05b0"+
    "\0\ud200\0\ud238\0\ud270\0\ud2a8\0\ud2e0\0\ud318\0\ud350\0\ud388"+
    "\0\ud3c0\0\ud3f8\0\u05b0\0\ud430\0\ud468\0\u05b0\0\u05b0\0\ud4a0"+
    "\0\ud4d8\0\u05b0\0\ud510\0\ud548\0\u05b0\0\ud580\0\ud5b8\0\ud5f0"+
    "\0\ud628\0\ud660\0\u05b0\0\ud698\0\ud6d0\0\ud708\0\u05b0\0\ud740"+
    "\0\ud778\0\ud7b0\0\u05b0\0\ud7e8\0\u05b0\0\u05b0\0\u05b0\0\ud820"+
    "\0\ud858\0\u05b0\0\ud890\0\ud8c8\0\ud900\0\ud938\0\ud970\0\u05b0"+
    "\0\ud9a8\0\u05b0\0\ud9e0\0\uda18\0\uda50\0\uda88\0\u05b0\0\u05b0"+
    "\0\udac0\0\udaf8\0\u05b0\0\udb30\0\udb68\0\udba0\0\u05b0\0\u05b0"+
    "\0\udbd8\0\udc10\0\udc48\0\udc80\0\udcb8\0\u05b0\0\udcf0\0\udd28"+
    "\0\u05b0\0\u05b0\0\udd60\0\udd98\0\uddd0\0\ude08\0\ude40\0\ude78"+
    "\0\u05b0\0\udeb0\0\udee8\0\u05b0\0\udf20\0\udf58\0\udf90\0\udfc8"+
    "\0\ue000\0\ue038\0\u05b0\0\ue070\0\ue0a8\0\ue0e0\0\ue118\0\u05b0"+
    "\0\u05b0\0\u05b0\0\ue150\0\u05b0\0\u05b0\0\ue188\0\ue1c0\0\u05b0"+
    "\0\u05b0\0\ue1f8\0\u05b0\0\ue230\0\ue268\0\ue2a0\0\ue2d8\0\ue310"+
    "\0\ue348\0\u05b0\0\ue380\0\ue3b8\0\u05b0\0\ue3f0\0\ue428\0\u05b0"+
    "\0\u05b0\0\u05b0\0\u05b0\0\ue460\0\ue498\0\ue4d0\0\ue508\0\ue540"+
    "\0\ue578\0\u05b0\0\u05b0\0\u05b0\0\ue5b0\0\ue5e8\0\u05b0\0\u05b0"+
    "\0\u05b0\0\u05b0\0\ue620\0\ue658\0\u05b0\0\ue690\0\ue6c8\0\ue700"+
    "\0\u05b0\0\ue738\0\ue770\0\ue7a8\0\ue7e0\0\ue818\0\u05b0\0\ue850"+
    "\0\u05b0\0\ue888\0\ue8c0\0\u05b0\0\ue8f8\0\u05b0\0\u05b0\0\ue930"+
    "\0\ue968\0\ue9a0\0\u05b0\0\ue9d8\0\u05b0\0\u05b0\0\uea10\0\uea48"+
    "\0\uea80\0\u05b0\0\ueab8\0\ueaf0\0\u05b0\0\ueb28\0\ueb60\0\ueb98"+
    "\0\uebd0\0\uec08\0\uec40\0\u05b0\0\uec78\0\uecb0\0\u05b0\0\uece8"+
    "\0\ued20\0\ued58\0\ued90\0\uedc8\0\uee00\0\u05b0\0\u05b0\0\uee38"+
    "\0\uee70\0\ueea8\0\ueee0\0\uef18\0\uef50\0\uef88\0\uefc0\0\ueff8"+
    "\0\uf030\0\uf068\0\uf0a0\0\uf0d8\0\u05b0\0\u05b0\0\uf110\0\uf148"+
    "\0\uf180\0\uf1b8\0\uf1f0\0\uf228\0\uf260\0\u05b0";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1398];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\2\1\30"+
    "\1\31\1\32\1\33\1\34\1\33\1\35\1\36\1\37"+
    "\1\33\1\40\1\41\1\42\1\43\1\44\1\45\1\46"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\64\1\33\1\42"+
    "\71\0\1\33\1\65\1\66\1\33\1\67\1\70\1\71"+
    "\1\33\1\72\1\33\1\73\1\74\1\75\3\33\1\76"+
    "\7\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\77\2\33\1\100\1\33\1\101\1\33\1\102\1\33"+
    "\1\103\2\33\1\104\1\105\12\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\106\2\33\1\107\1\33"+
    "\1\110\1\111\1\112\1\113\1\114\3\33\1\115\1\116"+
    "\4\33\1\117\2\33\1\120\1\33\1\0\2\33\1\121"+
    "\1\33\2\0\1\33\25\0\1\33\2\0\5\33\1\122"+
    "\2\33\1\123\1\33\1\124\1\33\1\125\3\33\1\126"+
    "\2\33\1\127\3\33\1\130\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\131\2\33\1\132\3\33\1\133"+
    "\1\33\1\134\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\2\33\1\135\7\33\1\136\10\33\1\137"+
    "\4\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\140\1\33\1\141\1\142\3\33\1\143\1\33\1\144"+
    "\2\33\1\145\1\33\1\146\11\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\2\33\1\147\1\33\1\150"+
    "\5\33\1\151\1\33\1\152\13\33\1\0\1\153\3\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\154\2\33\1\155"+
    "\1\156\1\157\6\33\1\160\1\33\1\161\11\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\2\33\1\162"+
    "\7\33\1\163\1\164\12\33\1\165\1\166\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\167\2\33\1\170"+
    "\1\33\1\171\1\33\1\172\1\173\17\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\174\1\175\1\33"+
    "\1\176\1\33\1\177\1\33\1\200\1\33\1\201\2\33"+
    "\1\202\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\1\203\2\33\1\204\1\33\1\205\1\33\1\206"+
    "\1\33\1\207\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\210\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\211\2\33\1\212\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\3\33"+
    "\1\213\24\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\1\214\10\33\1\215\16\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\3\33\1\216\1\217\2\33"+
    "\1\220\4\33\1\221\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\222\1\33\1\223\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\224"+
    "\2\33\1\225\1\226\1\227\1\33\1\230\1\33\1\231"+
    "\2\33\1\232\13\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\233\2\33\1\234\5\33\1\235\2\33"+
    "\1\236\1\33\1\237\11\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\240\2\33\1\241\3\33\1\242"+
    "\1\33\1\243\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\244\2\33\1\245\1\246\1\247\1\33"+
    "\1\250\1\33\1\251\2\33\1\252\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\32\0\1\253\37\0\30\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\3\33"+
    "\1\254\24\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\36\0\1\35\1\0\1\255\66\0\1\256\31\0\42\41"+
    "\1\257\1\260\24\41\43\0\1\42\23\0\1\42\45\0"+
    "\1\261\72\0\1\262\67\0\1\263\67\0\1\264\67\0"+
    "\1\265\72\0\1\266\73\0\1\267\71\0\1\270\71\0"+
    "\1\271\71\0\1\272\3\0\2\33\1\273\25\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\2\33\1\274"+
    "\5\33\1\275\17\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\276\1\33\1\277\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\300"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\301\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\13\33\1\302\1\33\1\303\12\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\304\12\33"+
    "\1\305\14\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\306\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\21\33\1\307\6\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\10\33\1\310\17\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\311\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\312\23\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\313\12\33\1\314\6\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\315\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\316\3\33\1\317\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\20\33\1\320\7\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\26\33"+
    "\1\321\1\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\1\33\1\322\24\33\1\323\1\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\324\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\2\33\1\325"+
    "\1\33\1\326\1\33\1\327\1\33\1\330\15\33\1\331"+
    "\1\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\14\33\1\332\1\33\1\333\11\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\17\33\1\334\10\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\2\33\1\335"+
    "\25\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\5\33\1\336\22\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\337\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\340\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\341\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\342"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\343\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\344\23\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\13\33\1\345\14\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\346"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\347\1\350\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\27\33\1\351\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\2\33\1\352\7\33\1\353"+
    "\15\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\354\7\33\1\355\13\33\1\356\3\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\357\17\33\1\360"+
    "\6\33\1\361\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\12\33\1\362\7\33\1\363\5\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\364\6\33\1\365"+
    "\1\33\1\366\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\11\33\1\367\10\33\1\370\1\371\4\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\13\33"+
    "\1\372\7\33\1\373\4\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\33\1\374\26\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\375\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\23\33"+
    "\1\376\4\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\26\33\1\377\1\33\1\0\1\u0100\3\33\2\0"+
    "\1\33\25\0\1\33\2\0\26\33\1\u0101\1\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u0102\4\33"+
    "\1\u0103\3\33\1\u0104\3\33\1\u0105\12\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u0106\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\10\33"+
    "\1\u0107\17\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\2\33\1\u0108\25\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\13\33\1\u0109\14\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u010a\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u010b\1\u010c\1\u010d\1\u010e\16\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\2\33\1\u010f\3\33\1\u0110"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\u0111\3\33\1\u0112\1\u0113\4\33\1\u0114\1\33\1\u0115"+
    "\11\33\1\u0116\1\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\3\33\1\u0117\1\33\1\u0118\22\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\14\33\1\u0119"+
    "\13\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\3\33\1\u011a\3\33\1\u011b\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u011c\6\33\1\u011d\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\3\33"+
    "\1\u011e\24\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\2\33\1\u011f\3\33\1\u0120\1\33\1\u0121\1\u0122"+
    "\1\u0123\1\u0124\7\33\1\u0125\4\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0126\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\26\33\1\u0127"+
    "\1\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u0128\17\33\1\u0129\1\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u012a\1\33\1\u012b"+
    "\1\33\1\u012c\15\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u012d\21\33\1\u012e\1\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\30\33\1\0"+
    "\1\u012f\3\33\2\0\1\33\25\0\1\33\2\0\16\33"+
    "\1\u0130\11\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u0131\6\33\1\u0132\12\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\10\33\1\u0133\17\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\5\33"+
    "\1\u0134\20\33\1\u0135\1\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\26\33\1\u0136\1\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u0137\1\33\1\u0138"+
    "\1\33\1\u0139\3\33\1\u013a\1\33\1\u013b\14\33\1\u013c"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u013d"+
    "\1\33\1\u013e\25\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\3\33\1\u013f\24\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u0140\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\4\33\1\u0141"+
    "\17\33\1\u0142\3\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u0143\23\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u0144\1\33\1\u0145\1\33"+
    "\1\u0146\1\33\1\u0147\1\33\1\u0148\7\33\1\u0149\2\33"+
    "\1\u014a\3\33\1\u014b\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\21\33\1\u014c\6\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u014d\27\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\20\33\1\u014e\7\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u014f\1\u0150\22\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\12\33\1\u0151\15\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u0152\7\33\1\u0153"+
    "\13\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u0154\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\6\33\1\u0155\21\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\3\33\1\u0156\24\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u0157"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\u0158\2\33\1\u0159\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\15\33\1\u015a\12\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u015b\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u015c\10\33\1\u015d\1\u015e\13\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\2\33\1\u015f\25\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u0160\27\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\33"+
    "\1\u0161\26\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u0162\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\20\33\1\u0163\7\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u0164\3\33"+
    "\1\u0165\1\33\1\u0166\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u0167\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0168\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u0169\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\11\33\1\u016a\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u016b\1\33\1\u016c\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u016d\21\33\1\0\1\u016e\3\33\2\0\1\33\25\0"+
    "\1\33\2\0\12\33\1\u016f\1\u0170\14\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0171\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u0172\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\u0173\23\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\5\33\1\u0174\6\33\1\u0175\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\3\33"+
    "\1\u0176\24\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\u0177\5\33\1\u0178\15\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u0179\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u017a\7\33\1\u017b\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u017c\3\33\1\u017d\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\1\0\43\253"+
    "\1\0\24\253\1\0\11\33\1\u017e\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\11\0\1\u017f\24\0\1\255"+
    "\2\0\1\u017f\27\0\45\u0180\1\u0181\22\u0180\1\0\3\33"+
    "\1\u0182\24\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0183\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u0184\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u0185\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\16\33"+
    "\1\u0186\11\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\11\33\1\u0187\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\22\33\1\u0188\5\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\16\33\1\u0189\11\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\22\33"+
    "\1\u018a\5\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\24\33\1\u018b\3\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u018c\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\25\33\1\u018d\2\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\24\33"+
    "\1\u018e\3\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\1\u018f\27\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u0190\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0191\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\2\33\1\u0192"+
    "\25\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u0193\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\2\33\1\u0194\25\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0195\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\5\33\1\u0196"+
    "\22\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\3\33\1\u0197\1\33\1\u0198\1\u0199\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u019a\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\3\33\1\u019b"+
    "\24\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u019c\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u019d\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u019e\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u019f"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\10\33\1\u01a0\17\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u01a1\23\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\2\33\1\u01a2\4\33\1\u01a3"+
    "\1\u01a4\13\33\1\u01a5\3\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u01a6\13\33\1\u01a7\4\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u01a8\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\15\33\1\u01a9\12\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u01aa\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u01ab\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u01ac\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\12\33\1\u01ad\15\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\2\33\1\u01ae\25\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u01af\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\21\33"+
    "\1\u01b0\6\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\13\33\1\u01b1\14\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\u01b2\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u01b3\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\13\33\1\u01b4"+
    "\14\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u01b5\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\6\33\1\u01b6\21\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u01b7\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u01b8"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\21\33\1\u01b9\6\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\14\33\1\u01ba\13\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u01bb\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\3\33\1\u01bc"+
    "\24\33\1\0\2\33\1\u01bd\1\33\2\0\1\33\25\0"+
    "\1\33\2\0\12\33\1\u01be\15\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u01bf\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u01c0\27\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u01c1\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\u01c2\23\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\30\33\1\0\2\33\1\u01c3\1\33"+
    "\2\0\1\33\25\0\1\33\2\0\23\33\1\u01c4\4\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u01c5\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u01c6\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u01c7\1\u01c8\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u01c9"+
    "\2\33\1\u01ca\15\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\21\33\1\u01cb\4\33\1\u01cc\1\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\25\33\1\u01cd"+
    "\2\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\12\33\1\u01ce\15\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u01cf\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u01d0\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\30\33\1\u01d1\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u01d2\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u01d3\4\33\1\u01d4\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\10\33\1\u01d5\17\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u01d6\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u01d7\3\33\1\u01d8\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u01d9\1\u01da\1\u01db\17\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u01dc"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\4\33\1\u01dd\23\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u01de\1\u01df\22\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u01e0\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u01e1\3\33\1\u01e2\3\33\1\u01e3\5\33\1\u01e4\7\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u01e5\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\23\33\1\u01e6\2\33\1\u01e7\1\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u01e8\25\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u01e9\25\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\2\33\1\u01ea\11\33\1\u01eb\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u01ec\25\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u01ed"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\14\33\1\u01ee\13\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\10\33\1\u01ef\17\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u01f0\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u01f1"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\3\33\1\u01f2\3\33\1\u01f3\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u01f4\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u01f5"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u01f6\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u01f7\1\33\1\u01f8\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\5\33\1\u01f9"+
    "\22\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\12\33\1\u01fa\15\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u01fb\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\5\33\1\u01fc\3\33\1\u01fd"+
    "\16\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u01fe\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\16\33\1\u01ff\11\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0200\1\u0201\17\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u0202\23\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0203\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0204\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u0205\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u0206\6\33"+
    "\1\u0207\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\10\33\1\u0208\17\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\33\1\u0209\26\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u020a\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\23\33\1\u020b"+
    "\4\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\4\33\1\u020c\23\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\10\33\1\u020d\17\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u020e\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\4\33\1\u020f"+
    "\4\33\1\u0210\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\15\33\1\u0211\12\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u0212\6\33\1\u0213\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\21\33"+
    "\1\u0214\6\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u0215\1\33\1\u0216\11\33\1\u0217\5\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\23\33"+
    "\1\u0218\4\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\2\33\1\u0219\25\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\4\33\1\u021a\23\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u021b\5\33"+
    "\1\u021c\10\33\1\u021d\6\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u021e\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u021f\6\33"+
    "\1\u0220\14\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u0221\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\u0222\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\5\33\1\u0223\22\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\3\33\1\u0224"+
    "\24\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\3\33\1\u0225\3\33\1\u0226\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u0227\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u0228"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\16\33\1\u0229\11\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\14\33\1\u022a\13\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u022b\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\13\33\1\u022c"+
    "\14\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\14\33\1\u022d\13\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u022e\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\5\33\1\u022f\22\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\10\33\1\u0230"+
    "\4\33\1\u0231\12\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\24\33\1\u0232\3\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\3\33\1\u0233\24\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\33\1\u0234"+
    "\26\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\12\33\1\u0235\15\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\5\33\1\u0236\22\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u0237\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\10\33\1\u0238"+
    "\17\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u0239\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\11\33\1\u023a\16\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u023b\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\4\33\1\u023c"+
    "\23\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\10\33\1\u023d\17\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\3\33\1\u023e\24\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\10\33\1\u023f\17\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\2\33\1\u0240"+
    "\5\33\1\u0241\12\33\1\u0242\4\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\3\33\1\u0243\6\33\1\u0244"+
    "\5\33\1\u0245\5\33\1\u0246\1\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u0247\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\22\33\1\u0248"+
    "\5\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\16\33\1\u0249\11\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\6\33\1\u024a\21\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u024b\1\33\1\u024c"+
    "\13\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\4\33\1\u024d\23\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\10\33\1\u024e\17\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u024f\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\5\33\1\u0250"+
    "\22\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\21\33\1\u0251\6\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\5\33\1\u0252\22\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\2\33\1\u0253\25\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\12\33\1\u0254"+
    "\15\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u0255\1\u0256\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\u0257\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u0258\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\10\33\1\u0259"+
    "\17\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\10\33\1\u025a\17\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u025b\2\33\1\u025c\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\2\33\1\u025d"+
    "\25\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\26\33\1\u025e\1\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u025f\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u0260\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\32\0\1\u0261\3\0"+
    "\1\u0261\3\0\1\u0261\26\0\45\u0180\1\u0262\66\u0180\1\u0263"+
    "\1\u0181\22\u0180\1\0\4\33\1\u0264\23\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0265\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\10\33"+
    "\1\u0266\17\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u0267\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u0268\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u0269\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\5\33"+
    "\1\u026a\22\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u026b\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\12\33\1\u026c\15\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u026d\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u026e\25\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\22\33\1\u026f\5\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0270\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u0271\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u0272\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\10\33\1\u0273\17\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\2\33\1\u0274\25\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u0275\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u0276\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\11\33\1\u0277\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\12\33\1\u0278\15\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u0279\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\26\33"+
    "\1\u027a\1\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u027b\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\13\33\1\u027c\14\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u027d\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u027e\23\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u027f\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u0280\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u0281\2\33\1\u0282"+
    "\24\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\u0283\27\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u0284\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\5\33\1\u0285\22\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u0286\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u0287\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\u0288\23\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u0289\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\13\33\1\u028a\1\u028b"+
    "\13\33\1\0\1\u028c\1\33\1\u028d\1\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u028e\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\5\33\1\u028f\22\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u0290\23\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u0291\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u0292\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u0293\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u0294\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0295\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\21\33\1\u0296\6\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u0297\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\5\33"+
    "\1\u0298\22\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u0299\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\20\33\1\u029a\7\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u029b\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u029c\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u029d\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\5\33\1\u029e\22\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u029f\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u02a0\25\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\2\33\1\u02a1\14\33\1\u02a2\10\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u02a3\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u02a4\25\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\10\33\1\u02a5\17\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\21\33\1\u02a6\6\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\10\33\1\u02a7\17\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\23\33"+
    "\1\u02a8\4\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\11\0\1\u02a9\60\0\20\33\1\u02aa\7\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u02ab\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u02ac"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\5\33\1\u02ad\22\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\23\33\1\u02ae\4\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u02af\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u02b0\27\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u02b1\23\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\u02b2\2\33\1\u02b3\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u02b4\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\26\33\1\u02b5"+
    "\1\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u02b6\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\6\33\1\u02b7\21\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u02b8\10\33\1\u02b9\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u02ba\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u02bb\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u02bc\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\5\33\1\u02bd\22\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u02be\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u02bf\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u02c0\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u02c1\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u02c2\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\2\33\1\u02c3\25\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u02c4\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u02c5\24\33\1\u02c6"+
    "\2\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\22\33\1\u02c7\5\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u02c8\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\12\33\1\u02c9\1\33\1\u02ca\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u02cb\4\33\1\u02cc\6\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\5\33\1\u02cd\22\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u02ce\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u02cf\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\30\33\1\0\1\u02d0\3\33\2\0\1\33\25\0"+
    "\1\33\2\0\10\33\1\u02d1\17\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u02d2\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u02d3"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\13\33\1\u02d4\14\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\14\33\1\u02d5\13\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\3\33\1\u02d6\24\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\2\33\1\u02d7"+
    "\25\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u02d8\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u02d9\23\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u02da\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\14\33\1\u02db"+
    "\13\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\14\33\1\u02dc\13\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\33\1\u02dd\26\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u02de\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\11\33\1\u02df"+
    "\16\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\4\33\1\u02e0\23\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\14\33\1\u02e1\13\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u02e2\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u02e3\27\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\26\33"+
    "\1\u02e4\1\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\5\33\1\u02e5\22\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u02e6\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u02e7\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\5\33"+
    "\1\u02e8\3\33\1\u02e9\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u02ea\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u02eb\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\33"+
    "\1\u02ec\26\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u02ed\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\5\33\1\u02ee\22\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u02ef\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\3\33"+
    "\1\u02f0\10\33\1\u02f1\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u02f2\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u02f3\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u02f4\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\22\33\1\u02f5\5\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u02f6\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u02f7\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u02f8\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u02f9\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\12\33\1\u02fa\15\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u02fb\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u02fc\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\16\33\1\u02fd\11\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u02fe\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u02ff\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u0300"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\23\33\1\u0301\4\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u0302\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u0303\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u0304\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u0305\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0306\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0307\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u0308\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u0309\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\11\33\1\u030a\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\u030b\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\14\33\1\u030c\13\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u030d"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\11\33\1\u030e\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u030f\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\27\33\1\u0310\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u0311\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u0312"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u0313\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u0314\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0315\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\16\33\1\u0316"+
    "\11\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\16\33\1\u0317\11\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u0318\23\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0319\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u031a"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u031b\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\13\33\1\u031c\14\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\14\33\1\u031d\13\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\11\33\1\u031e"+
    "\16\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u031f\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\6\33\1\u0320\21\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\16\33\1\u0321\11\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\27\33\1\u0322"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u0323\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u0324\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\36\0\1\u0261\32\0\44\u0180\1\u0325\1\u0262"+
    "\22\u0180\1\0\5\33\1\u0326\22\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u0327\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u0328\27\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u0329\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\12\33\1\u032a\15\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\23\33\1\u032b\4\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u032c\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u032d\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u032e\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u032f\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u0330\25\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\3\33"+
    "\1\u0331\24\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u0332\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u0333\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\13\33\1\u0334\14\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u0335\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u0336\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0337\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u0338\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u0339"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\26\33\1\u033a\1\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\3\33\1\u033b\24\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u033c\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u033d\27\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u033e\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\13\33\1\u033f\14\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u0340\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u0341\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\25\33"+
    "\1\u0342\2\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\1\u0343\27\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\12\33\1\u0344\15\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u0345\27\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u0346\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\26\33"+
    "\1\u0347\1\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\5\33\1\u0348\22\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\2\33\1\u0349\25\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u034a\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\12\33\1\u034b"+
    "\15\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\3\33\1\u034c\24\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u034d\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\24\33\1\u034e\3\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\3\33\1\u034f"+
    "\24\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u0350\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\2\33\1\u0351\25\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u0352\27\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0353\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u0354\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u0355\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u0356\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u0357\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u0358"+
    "\3\33\1\u0359\23\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u035a\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u035b\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u035c\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u035d\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\33\0\1\u035e\36\0\4\33\1\u035f\23\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u0360\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\10\33"+
    "\1\u0361\17\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u0362\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0363\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u0364\25\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\13\33"+
    "\1\u0365\14\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u0366\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u0367\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u0368\25\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u0369\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\12\33\1\u036a\15\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u036b\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u036c\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u036d\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\10\33\1\u036e\17\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u036f\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u0370\25\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u0371\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u0372\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u0373\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0374\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u0375\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0376\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\10\33\1\u0377\17\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u0378\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\23\33"+
    "\1\u0379\4\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u037a\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\2\33\1\u037b\25\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u037c\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u037d\15\33\1\u037e\7\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u037f\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\13\33\1\u0380\14\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u0381"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\u0382\27\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\11\33\1\u0383\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u0384\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u0385\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\12\33\1\u0386"+
    "\15\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\10\33\1\u0387\17\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\5\33\1\u0388\22\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\27\33\1\u0389\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u038a\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u038b"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u038c\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\12\33\1\u038d\15\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\3\33\1\u038e\24\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\11\33\1\u038f"+
    "\16\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u0390\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\14\33\1\u0391\13\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u0392\27\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u0393\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u0394\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u0395\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u0396\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u0397\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u0398\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u0399\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\u039a\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\5\33\1\u039b\22\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\11\33\1\u039c"+
    "\16\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u039d\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\14\33\1\u039e\13\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u039f\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\11\33\1\u03a0"+
    "\16\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\12\33\1\u03a1\15\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\27\33\1\u03a2\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u03a3\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u03a4\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\10\33"+
    "\1\u03a5\17\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u03a6\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\21\33\1\u03a7\6\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u03a8\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u03a9\25\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\1\u03aa\27\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\12\33\1\u03ab\15\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u03ac\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\4\33\1\u03ad"+
    "\23\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\u03ae\27\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\11\33\1\u03af\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\10\33\1\u03b0\17\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u03b1\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\13\33"+
    "\1\u03b2\14\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u03b3\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\2\33\1\u03b4\25\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u03b5\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u03b6\23\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u03b7\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u03b8\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u03b9\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u03ba\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\20\33\1\u03bb\7\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u03bc\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u03bd\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u03be"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\21\33\1\u03bf\6\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\11\33\1\u03c0\16\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u03c1\27\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u03c2\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u03c3\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\11\33\1\u03c4\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u03c5\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u03c6\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u03c7\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\12\33\1\u03c8\15\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u03c9\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u03ca\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u03cb\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u03cc\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u03cd\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u03ce\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u03cf\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\25\33\1\u03d0\2\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\24\33\1\u03d1\3\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u03d2\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u03d3\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u03d4\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u03d5\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u03d6\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u03d7\23\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\23\33\1\u03d8\4\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u03d9\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\24\33\1\u03da\3\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u03db\23\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u03dc\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\21\33\1\u03dd\6\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\21\33\1\u03de\6\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u03df\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u03e0\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u03e1\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u03e2\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\4\33\1\u03e3"+
    "\23\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\u03e4\27\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\17\33\1\u03e5\10\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\u03e6\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u03e7\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\12\33\1\u03e8"+
    "\15\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\10\33\1\u03e9\17\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u03ea\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u03eb\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u03ec\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u03ed\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\11\0\1\u03ee\60\0\1\u03ef\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u03f0\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u03f1"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\11\33\1\u03f2\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u03f3\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\21\33\1\u03f4\6\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u03f5"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\10\33\1\u03f6\17\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u03f7\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u03f8\27\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u03f9\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\5\33"+
    "\1\u03fa\22\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u03fb\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u03fc\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\23\33\1\u03fd\4\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u03fe\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u03ff\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0400\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u0401\7\33"+
    "\1\u0402\11\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0403\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u0404\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u0405\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u0406\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0407\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\u0408\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\14\33\1\u0409\13\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u040a"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\4\33\1\u040b\23\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\6\33\1\u040c\21\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u040d\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u040e\27\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u040f\23\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\1\u0410\27\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\22\33\1\u0411\5\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\2\33\1\u0412\25\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\10\33\1\u0413"+
    "\17\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\2\33\1\u0414\25\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\10\33\1\u0415\17\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\33\1\u0416\21\33\1\u0417"+
    "\4\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u0418\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u0419\23\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u041a\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u041b\6\33"+
    "\1\u041c\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\2\33\1\u041d\25\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\33\1\u041e\26\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\10\33\1\u041f\17\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u0420\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u0421\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\10\33\1\u0422\17\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u0423\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\13\33"+
    "\1\u0424\14\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\30\33\1\0\1\u0425\3\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u0426\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\10\33\1\u0427\17\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\20\33\1\u0428"+
    "\7\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\11\33\1\u0429\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u042a\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\12\33\1\u042b\15\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\10\33\1\u042c\17\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u042d\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\21\33\1\u042e\6\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\4\33\1\u042f\23\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u0430\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u0431\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\5\33\1\u0432\22\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\20\33\1\u0433\7\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u0434\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u0435\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0436\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\15\33\1\u0437\12\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0438\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\21\33"+
    "\1\u0439\6\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u043a\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u043b\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u043c\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u043d\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u043e\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\10\33\1\u043f\17\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\30\33\1\0\1\u0440"+
    "\3\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u0441"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\3\33\1\u0442\24\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u0443\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\17\33\1\u0444\10\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\21\33\1\u0445"+
    "\6\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\12\33\1\u0446\15\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\11\33\1\u0447\16\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\25\33\1\u0448\2\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\15\33\1\u0449"+
    "\12\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\10\33\1\u044a\17\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\5\33\1\u044b\22\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u044c\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u044d"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u044e\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\14\33\1\u044f\13\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u0450\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u0451"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\2\33\1\u0452\25\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u0453\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\2\33\1\u0454\25\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0455\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u0456\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0457\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\26\33\1\u0458\1\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0459\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u045a\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\26\33\1\u045b\1\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u045c\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\21\33\1\u045d\6\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u045e\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u045f\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u0460\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\20\33\1\u0461\7\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\12\0\1\u0462"+
    "\57\0\4\33\1\u0463\23\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u0464\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\13\33\1\u0465\14\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u0466\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0467\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u0468\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u0469\25\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u046a\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\11\33\1\u046b\16\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u046c\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u046d\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\25\33"+
    "\1\u046e\2\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u046f\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0470\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u0471\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u0472\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u0473\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0474\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\10\33\1\u0475\17\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\4\33"+
    "\1\u0476\23\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\u0477\23\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u0478\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\15\33\1\u0479\12\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u047a\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\u047b\23\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u047c\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u047d\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u047e"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u047f\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\6\33\1\u0480\21\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\33\1\u0481\26\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\13\33\1\u0482"+
    "\14\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u0483\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u0484\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u0485\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u0486"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\3\33\1\u0487\24\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\22\33\1\u0488\5\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\6\33\1\u0489\21\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\10\33\1\u048a"+
    "\17\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u048b\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\6\33\1\u048c\21\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u048d\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\21\33\1\u048e"+
    "\6\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u048f\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\10\33\1\u0490\17\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\22\33\1\u0491\5\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\12\33\1\u0492"+
    "\15\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\14\33\1\u0493\13\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u0494\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\3\33\1\u0495\24\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\21\33\1\u0496"+
    "\6\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\14\33\1\u0497\13\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\30\33\1\0\1\u0498\3\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u0499\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u049a\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u049b\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u049c\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\12\33\1\u049d\15\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u049e\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u049f"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\21\33\1\u04a0\6\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\10\33\1\u04a1\17\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\5\33\1\u04a2\22\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\1\u04a3\27\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u04a4\17\33\1\u04a5\5\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\2\33\1\u04a6\25\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u04a7\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u04a8\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\2\33\1\u04a9\25\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u04aa\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\15\33\1\u04ab\12\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\30\33"+
    "\1\0\1\u04ac\3\33\2\0\1\33\25\0\1\33\2\0"+
    "\23\33\1\u04ad\4\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\15\33\1\u04ae\12\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\23\33\1\u04af\4\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\25\33\1\u04b0"+
    "\2\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\11\33\1\u04b1\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u04b2\1\33\1\u04b3\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u04b4"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\12\33\1\u04b5\15\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\3\33\1\u04b6\24\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u04b7\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u04b8"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\3\33\1\u04b9\24\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\12\33\1\u04ba\15\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\13\33\1\u04bb\14\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\5\33\1\u04bc"+
    "\1\u04bd\4\33\1\u04be\14\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u04bf\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u04c0\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\21\33"+
    "\1\u04c1\6\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\12\33\1\u04c2\15\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\12\33\1\u04c3\15\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\11\33\1\u04c4\16\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u04c5\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\15\33\1\u04c6\12\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u04c7\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\10\33\1\u04c8\14\33"+
    "\1\u04c9\2\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u04ca\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u04cb\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u04cc\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\3\33"+
    "\1\u04cd\24\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\u04ce\23\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u04cf\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\13\33\1\u04d0\14\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\10\33"+
    "\1\u04d1\17\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u04d2\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u04d3\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\5\33\1\u04d4\22\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u04d5\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u04d6\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u04d7\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\12\33\1\u04d8\15\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u04d9\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u04da\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u04db\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u04dc\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u04dd\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u04de\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\16\33\1\u04df\11\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u04e0\25\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\2\33"+
    "\1\u04e1\25\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\5\33\1\u04e2\22\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\11\33\1\u04e3\16\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\7\33\1\u04e4\20\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u04e5\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\21\33\1\u04e6\6\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\21\33\1\u04e7\6\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u04e8\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u04e9\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u04ea\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\4\33\1\u04eb\23\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\16\33\1\u04ec\7\33"+
    "\1\u04ed\1\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u04ee\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\3\33\1\u04ef\24\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u04f0\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\12\33"+
    "\1\u04f1\15\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u04f2\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\u04f3\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u04f4\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\13\33\1\u04f5"+
    "\14\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\2\33\1\u04f6\25\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\11\33\1\u04f7\16\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\1\u04f8\27\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u04f9\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u04fa\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u04fb\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\20\33\1\u04fc\7\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\3\33\1\u04fd\24\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u04fe\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u04ff\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u0500\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0501\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u0502\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\10\33\1\u0503\17\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0504\21\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u0505\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\14\33"+
    "\1\u0506\13\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\3\33\1\u0507\24\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\2\33\1\u0508\25\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\2\33\1\u0509\25\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\5\33"+
    "\1\u050a\22\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u050b\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\u050c\27\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u050d\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u050e"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\13\33\1\u050f\14\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\26\33\1\u0510\1\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\15\33\1\u0511\12\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\14\33\1\u0512"+
    "\13\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u0513\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\5\33\1\u0514\22\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0515\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\3\33\1\u0516"+
    "\24\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\11\33\1\u0517\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\12\33\1\u0518\15\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u0519\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\6\33\1\u051a"+
    "\21\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\2\33\1\u051b\25\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\33\1\u051c\26\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\11\33\1\u051d\16\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u051e"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\26\33\1\u051f\1\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\6\33\1\u0520\21\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\25\33\1\u0521\2\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\16\33\1\u0522"+
    "\11\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u0523\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u0524\23\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u0525\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u0526"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\2\33\1\u0527\25\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u0528\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\12\33\1\u0529\15\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\23\33\1\u052a"+
    "\4\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\33\1\u052b\26\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\3\33\1\u052c\24\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\14\33\1\u052d\13\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\11\33\1\u052e"+
    "\16\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\11\33\1\u052f\16\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\23\33\1\u0530\4\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\16\33\1\u0531\11\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\14\33\1\u0532"+
    "\13\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\5\33\1\u0533\22\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\12\33\1\u0534\15\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u0535\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\12\33\1\u0536"+
    "\15\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\14\33\1\u0537\13\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u0538\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0539\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\4\33\1\u053a"+
    "\23\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\2\33\1\u053b\25\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\13\33\1\u053c\14\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u053d\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\12\33\1\u053e"+
    "\15\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u053f\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\4\33\1\u0540\23\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\16\33\1\u0541\11\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\10\33\1\u0542"+
    "\17\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\14\33\1\u0543\13\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\5\33\1\u0544\22\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0545\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\21\33\1\u0546"+
    "\6\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\2\33\1\u0547\25\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\7\33\1\u0548\20\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\7\33\1\u0549\20\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u054a"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\u054b\27\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\14\33\1\u054c\13\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\7\33\1\u054d\20\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u054e\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u054f\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\12\33\1\u0550\15\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\14\33\1\u0551\13\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\14\33\1\u0552\13\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u0553"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u0554\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u0555\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\21\33\1\u0556\6\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u0557\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\11\33"+
    "\1\u0558\16\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\2\33\1\u0559\25\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\26\33\1\u055a\1\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\6\33\1\u055b\21\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u055c\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u055d\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\23\33\1\u055e\4\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\16\33\1\u055f\11\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\15\33"+
    "\1\u0560\12\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\6\33\1\u0561\21\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\6\33\1\u0562\4\33\1\u0563\14\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\1\u0564"+
    "\27\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\1\u0565\27\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\7\33\1\u0566\20\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\33\1\u0567\26\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\33\1\u0568\26\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\6\33"+
    "\1\u0569\21\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\2\0\4\33\1\u056a\23\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\4\33\1\u056b\23\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\1\u056c\27\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\7\33\1\u056d"+
    "\20\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\7\33\1\u056e\20\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\11\33\1\u056f\16\33\1\0\4\33\2\0"+
    "\1\33\25\0\1\33\2\0\4\33\1\u0570\23\33\1\0"+
    "\4\33\2\0\1\33\25\0\1\33\2\0\2\33\1\u0571"+
    "\25\33\1\0\4\33\2\0\1\33\25\0\1\33\2\0"+
    "\6\33\1\u0572\21\33\1\0\4\33\2\0\1\33\25\0"+
    "\1\33\2\0\1\u0573\27\33\1\0\4\33\2\0\1\33"+
    "\25\0\1\33\2\0\1\33\1\u0574\26\33\1\0\4\33"+
    "\2\0\1\33\25\0\1\33\2\0\4\33\1\u0575\23\33"+
    "\1\0\4\33\2\0\1\33\25\0\1\33\2\0\7\33"+
    "\1\u0576\20\33\1\0\4\33\2\0\1\33\25\0\1\33"+
    "\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[62104];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\34\1\2\11\3\1\2\11\5\1\2\11"+
    "\1\1\1\11\1\1\1\11\1\1\2\11\172\1\3\11"+
    "\1\0\11\11\305\1\2\0\117\1\1\0\220\1\1\0"+
    "\106\1\1\0\173\1\1\11\70\1\1\0\217\1\1\0"+
    "\163\1\1\11\u0114\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1398];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	public int noToken = 0;	

	/*
    public void nextToken() {

	}
    */


	public void Advertencia(int col, int fil) {
			System.out.println("---- Advertencia: identificador en la linea " + fil + " columna " + col + " excede la longitud permitida, sera truncado. ----");
	;}

	public void ErrorLexico(String token) {
			if(token.equals('\'')){

			}
	;}

	public ArrayList<MyTOKEN> TOKENS = new ArrayList<MyTOKEN>();

	





  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Yylex(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 202) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
    	
	AnalizadorSintactico anal = new AnalizadorSintactico(TOKENS);
	anal.Analizar();
	/*if(anal.errores == 0){
		System.out.println("¡El archivo a sido analizado con exito!");
	}*/
	//AnalizadorSintactico(TOKENS);
	
  yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
          { return new java_cup.runtime.Symbol(Simbolos.EOF); }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { //TOKENS.add(new MyTOKEN(yytext(), "ERROR", yycolumn, yyline));
    return new Symbol(Simbolos.ERROR, yycolumn, yyline, yytext());
	//ArchivoEscribir = ArchivoEscribir + "Error en la col: " + yycolumn + " fila: " + yyline + " Caracter no Reconocido" + "\n";
            } 
            // fall through
          case 353: break;
          case 2: 
            { if(yylength() < 31)
	{
		//TOKENS.add(new MyTOKEN(yytext(), "Identificador", yycolumn, yyline));
        return new Symbol(Simbolos.Identificador, yycolumn, yyline, yytext());
	}else{
		Advertencia(yyline, yycolumn);
		//TOKENS.add(new MyTOKEN(yytext(), "Identificador", yycolumn, yyline)) ;
        return new Symbol(Simbolos.Identificador, yycolumn, yyline, yytext().substring(0, 30));
	}
            } 
            // fall through
          case 354: break;
          case 3: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Boolean", yycolumn, yyline));
    return new Symbol(Simbolos.Boolean, yycolumn, yyline, yytext());
            } 
            // fall through
          case 355: break;
          case 4: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signomenos, yycolumn, yyline, yytext());
            } 
            // fall through
          case 356: break;
          case 5: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Entero", yycolumn, yyline)) ;
    return new Symbol(Simbolos.Entero, yycolumn, yyline, yytext());
            } 
            // fall through
          case 357: break;
          case 6: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Punto, yycolumn, yyline, yytext());
            } 
            // fall through
          case 358: break;
          case 7: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signomas, yycolumn, yyline, yytext());
            } 
            // fall through
          case 359: break;
          case 8: 
            { //ArchivoEscribir = ArchivoEscribir + "Error en la col: " + yycolumn + " fila: " + yyline + " Cadena sin cerrar"+ "\n";
	//TOKENS.add(new MyTOKEN(yytext(), "ERROR", yycolumn, yyline));
    return new Symbol(Simbolos.ERROR, yycolumn, yyline, yytext());
            } 
            // fall through
          case 360: break;
          case 9: 
            { /*Hacer nada equisde*/
            } 
            // fall through
          case 361: break;
          case 10: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signodiv, yycolumn, yyline, yytext());
            } 
            // fall through
          case 362: break;
          case 11: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signomult, yycolumn, yyline, yytext());
            } 
            // fall through
          case 363: break;
          case 12: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signoporcentaje, yycolumn, yyline, yytext());
            } 
            // fall through
          case 364: break;
          case 13: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signomayor, yycolumn, yyline, yytext());
            } 
            // fall through
          case 365: break;
          case 14: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signoigual, yycolumn, yyline, yytext());
            } 
            // fall through
          case 366: break;
          case 15: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signomenor, yycolumn, yyline, yytext());
            } 
            // fall through
          case 367: break;
          case 16: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signoadmiracion, yycolumn, yyline, yytext());
            } 
            // fall through
          case 368: break;
          case 17: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Puntoycoma, yycolumn, yyline, yytext());
            } 
            // fall through
          case 369: break;
          case 18: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Coma, yycolumn, yyline, yytext());
            } 
            // fall through
          case 370: break;
          case 19: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Corcheteapertura, yycolumn, yyline, yytext());
            } 
            // fall through
          case 371: break;
          case 20: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Corchetecerradura, yycolumn, yyline, yytext());
            } 
            // fall through
          case 372: break;
          case 21: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Parentesisapertura, yycolumn, yyline, yytext());
            } 
            // fall through
          case 373: break;
          case 22: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Parentesiscerradura, yycolumn, yyline, yytext());
            } 
            // fall through
          case 374: break;
          case 23: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Llaveapertura, yycolumn, yyline, yytext());
            } 
            // fall through
          case 375: break;
          case 24: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Llavecerradura, yycolumn, yyline, yytext());
            } 
            // fall through
          case 376: break;
          case 25: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Arroba, yycolumn, yyline, yytext());
            } 
            // fall through
          case 377: break;
          case 26: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Sharp, yycolumn, yyline, yytext());
            } 
            // fall through
          case 378: break;
          case 27: 
            { return new Symbol(Simbolos.AS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 379: break;
          case 28: 
            { return new Symbol(Simbolos.AT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 380: break;
          case 29: 
            { return new Symbol(Simbolos.BY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 381: break;
          case 30: 
            { return new Symbol(Simbolos.ON, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 382: break;
          case 31: 
            { return new Symbol(Simbolos.OR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 383: break;
          case 32: 
            { return new Symbol(Simbolos.OF, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 384: break;
          case 33: 
            { return new Symbol(Simbolos.TO, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 385: break;
          case 34: 
            { return new Symbol(Simbolos.IS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 386: break;
          case 35: 
            { return new Symbol(Simbolos.IN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 387: break;
          case 36: 
            { return new Symbol(Simbolos.IF, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 388: break;
          case 37: 
            { return new Symbol(Simbolos.NO, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 389: break;
          case 38: 
            { return new Symbol(Simbolos.GO, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 390: break;
          case 39: 
            { ////TOKENS.add(new MyTOKEN(yytext(), "Comentario.Linea", yycolumn, yyline));
    //return new Symbol(Simbolos.ComentarioLinea, yycolumn, yyline, yytext());
            } 
            // fall through
          case 391: break;
          case 40: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Float", yycolumn, yyline));
    return new Symbol(Simbolos.Float, yycolumn, yyline, yytext());
            } 
            // fall through
          case 392: break;
          case 41: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signoor, yycolumn, yyline, yytext());
            } 
            // fall through
          case 393: break;
          case 42: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Cadena", yycolumn, yyline));
    return new Symbol(Simbolos.Cadena, yycolumn, yyline, yytext());
            } 
            // fall through
          case 394: break;
          case 43: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signomayorigual, yycolumn, yyline, yytext());
            } 
            // fall through
          case 395: break;
          case 44: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signoigualigual, yycolumn, yyline, yytext());
            } 
            // fall through
          case 396: break;
          case 45: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signomenorigual, yycolumn, yyline, yytext());
            } 
            // fall through
          case 397: break;
          case 46: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signonotigual, yycolumn, yyline, yytext());
            } 
            // fall through
          case 398: break;
          case 47: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Operador", yycolumn, yyline));
    return new Symbol(Simbolos.Signoyy, yycolumn, yyline, yytext());
            } 
            // fall through
          case 399: break;
          case 48: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Corchetes, yycolumn, yyline, yytext());
            } 
            // fall through
          case 400: break;
          case 49: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Parentesis, yycolumn, yyline, yytext());
            } 
            // fall through
          case 401: break;
          case 50: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Llaves, yycolumn, yyline, yytext());
            } 
            // fall through
          case 402: break;
          case 51: 
            { //TOKENS.add(new MyTOKEN(yytext(), "Simbolo", yycolumn, yyline));
    return new Symbol(Simbolos.Sharpsharp, yycolumn, yyline, yytext());
            } 
            // fall through
          case 403: break;
          case 52: 
            { return new Symbol(Simbolos.ASC, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 404: break;
          case 53: 
            { return new Symbol(Simbolos.ALL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 405: break;
          case 54: 
            { return new Symbol(Simbolos.AND, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 406: break;
          case 55: 
            { return new Symbol(Simbolos.ANY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 407: break;
          case 56: 
            { return new Symbol(Simbolos.ADA, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 408: break;
          case 57: 
            { return new Symbol(Simbolos.ADD, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 409: break;
          case 58: 
            { return new Symbol(Simbolos.ARE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 410: break;
          case 59: 
            { return new Symbol(Simbolos.AVG, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 411: break;
          case 60: 
            { return new Symbol(Simbolos.BIT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 412: break;
          case 61: 
            { return new Symbol(Simbolos.SUM, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 413: break;
          case 62: 
            { return new Symbol(Simbolos.SET, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 414: break;
          case 63: 
            { return new Symbol(Simbolos.SQL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 415: break;
          case 64: 
            { return new Symbol(Simbolos.OFF, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 416: break;
          case 65: 
            { return new Symbol(Simbolos.USE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 417: break;
          case 66: 
            { return new Symbol(Simbolos.TOP, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 418: break;
          case 67: 
            { return new Symbol(Simbolos.END, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 419: break;
          case 68: 
            { return new Symbol(Simbolos.INT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 420: break;
          case 69: 
            { return new Symbol(Simbolos.NOT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 421: break;
          case 70: 
            { return new Symbol(Simbolos.DAY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 422: break;
          case 71: 
            { return new Symbol(Simbolos.DEC, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 423: break;
          case 72: 
            { return new Symbol(Simbolos.GET, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 424: break;
          case 73: 
            { return new Symbol(Simbolos.KEY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 425: break;
          case 74: 
            { return new Symbol(Simbolos.PAD, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 426: break;
          case 75: 
            { return new Symbol(Simbolos.MAX, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 427: break;
          case 76: 
            { return new Symbol(Simbolos.MIN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 428: break;
          case 77: 
            { return new Symbol(Simbolos.FOR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 429: break;
          case 78: 
            { return new Symbol(Simbolos.BOTH, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 430: break;
          case 79: 
            { return new Symbol(Simbolos.BULK, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 431: break;
          case 80: 
            { return new Symbol(Simbolos.SAVE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 432: break;
          case 81: 
            { return new Symbol(Simbolos.SOME, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 433: break;
          case 82: 
            { return new Symbol(Simbolos.SIZE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 434: break;
          case 83: 
            { return new Symbol(Simbolos.ONLY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 435: break;
          case 84: 
            { return new Symbol(Simbolos.OVER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 436: break;
          case 85: 
            { return new Symbol(Simbolos.OPEN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 437: break;
          case 86: 
            { return new Symbol(Simbolos.LAST, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 438: break;
          case 87: 
            { return new Symbol(Simbolos.LOAD, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 439: break;
          case 88: 
            { return new Symbol(Simbolos.LEFT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 440: break;
          case 89: 
            { return new Symbol(Simbolos.LIKE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 441: break;
          case 90: 
            { return new Symbol(Simbolos.USER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 442: break;
          case 91: 
            { return new Symbol(Simbolos.TIME, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 443: break;
          case 92: 
            { return new Symbol(Simbolos.TRAN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 444: break;
          case 93: 
            { return new Symbol(Simbolos.TRUE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 445: break;
          case 94: 
            { return new Symbol(Simbolos.TRIM, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 446: break;
          case 95: 
            { return new Symbol(Simbolos.THEN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 447: break;
          case 96: 
            { return new Symbol(Simbolos.ELSE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 448: break;
          case 97: 
            { return new Symbol(Simbolos.EXEC, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 449: break;
          case 98: 
            { return new Symbol(Simbolos.EXIT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 450: break;
          case 99: 
            { return new Symbol(Simbolos.CAST, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 451: break;
          case 100: 
            { return new Symbol(Simbolos.CASE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 452: break;
          case 101: 
            { return new Symbol(Simbolos.CHAR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 453: break;
          case 102: 
            { return new Symbol(Simbolos.INTO, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 454: break;
          case 103: 
            { return new Symbol(Simbolos.NONE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 455: break;
          case 104: 
            { return new Symbol(Simbolos.NULL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 456: break;
          case 105: 
            { return new Symbol(Simbolos.NEXT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 457: break;
          case 106: 
            { return new Symbol(Simbolos.DATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 458: break;
          case 107: 
            { return new Symbol(Simbolos.DBCC, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 459: break;
          case 108: 
            { return new Symbol(Simbolos.DUMP, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 460: break;
          case 109: 
            { return new Symbol(Simbolos.DESC, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 461: break;
          case 110: 
            { return new Symbol(Simbolos.DENY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 462: break;
          case 111: 
            { return new Symbol(Simbolos.DISK, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 463: break;
          case 112: 
            { return new Symbol(Simbolos.DROP, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 464: break;
          case 113: 
            { return new Symbol(Simbolos.ROWS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 465: break;
          case 114: 
            { return new Symbol(Simbolos.RULE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 466: break;
          case 115: 
            { return new Symbol(Simbolos.REAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 467: break;
          case 116: 
            { return new Symbol(Simbolos.READ, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 468: break;
          case 117: 
            { return new Symbol(Simbolos.YEAR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 469: break;
          case 118: 
            { return new Symbol(Simbolos.HOUR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 470: break;
          case 119: 
            { return new Symbol(Simbolos.ZONE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 471: break;
          case 120: 
            { return new Symbol(Simbolos.VIEW, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 472: break;
          case 121: 
            { return new Symbol(Simbolos.GOTO, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 473: break;
          case 122: 
            { return new Symbol(Simbolos.KILL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 474: break;
          case 123: 
            { return new Symbol(Simbolos.PLAN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 475: break;
          case 124: 
            { return new Symbol(Simbolos.PROC, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 476: break;
          case 125: 
            { return new Symbol(Simbolos.WORK, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 477: break;
          case 126: 
            { return new Symbol(Simbolos.WITH, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 478: break;
          case 127: 
            { return new Symbol(Simbolos.WHEN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 479: break;
          case 128: 
            { return new Symbol(Simbolos.FULL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 480: break;
          case 129: 
            { return new Symbol(Simbolos.FILE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 481: break;
          case 130: 
            { return new Symbol(Simbolos.FROM, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 482: break;
          case 131: 
            { return new Symbol(Simbolos.JOIN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 483: break;
          case 132: 
            { ////TOKENS.add(new MyTOKEN(yytext(), "Comentario.Multilinea", yycolumn, yyline));
    //return new Symbol(Simbolos.ComentarioMultiliena, yycolumn, yyline, yytext());
	//System.out.println(yytext());
            } 
            // fall through
          case 484: break;
          case 133: 
            { return new Symbol(Simbolos.ALTER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 485: break;
          case 134: 
            { return new Symbol(Simbolos.BEGIN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 486: break;
          case 135: 
            { return new Symbol(Simbolos.BREAK, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 487: break;
          case 136: 
            { return new Symbol(Simbolos.SPACE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 488: break;
          case 137: 
            { return new Symbol(Simbolos.SQLCA, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 489: break;
          case 138: 
            { return new Symbol(Simbolos.OUTER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 490: break;
          case 139: 
            { return new Symbol(Simbolos.ORDER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 491: break;
          case 140: 
            { return new Symbol(Simbolos.LOCAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 492: break;
          case 141: 
            { return new Symbol(Simbolos.LOWER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 493: break;
          case 142: 
            { return new Symbol(Simbolos.LEVEL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 494: break;
          case 143: 
            { return new Symbol(Simbolos.USAGE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 495: break;
          case 144: 
            { return new Symbol(Simbolos.USING, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 496: break;
          case 145: 
            { return new Symbol(Simbolos.UNION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 497: break;
          case 146: 
            { return new Symbol(Simbolos.UPPER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 498: break;
          case 147: 
            { return new Symbol(Simbolos.TABLE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 499: break;
          case 148: 
            { return new Symbol(Simbolos.COUNT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 500: break;
          case 149: 
            { return new Symbol(Simbolos.CLOSE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 501: break;
          case 150: 
            { return new Symbol(Simbolos.CROSS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 502: break;
          case 151: 
            { return new Symbol(Simbolos.CHECK, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 503: break;
          case 152: 
            { return new Symbol(Simbolos.INNER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 504: break;
          case 153: 
            { return new Symbol(Simbolos.INDEX, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 505: break;
          case 154: 
            { return new Symbol(Simbolos.INPUT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 506: break;
          case 155: 
            { return new Symbol(Simbolos.NAMES, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 507: break;
          case 156: 
            { return new Symbol(Simbolos.NCHAR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 508: break;
          case 157: 
            { return new Symbol(Simbolos.RIGHT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 509: break;
          case 158: 
            { return new Symbol(Simbolos.VALUE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 510: break;
          case 159: 
            { return new Symbol(Simbolos.GRANT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 511: break;
          case 160: 
            { return new Symbol(Simbolos.GROUP, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 512: break;
          case 161: 
            { return new Symbol(Simbolos.PIVOT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 513: break;
          case 162: 
            { return new Symbol(Simbolos.PRIOR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 514: break;
          case 163: 
            { return new Symbol(Simbolos.PRINT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 515: break;
          case 164: 
            { return new Symbol(Simbolos.WRITE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 516: break;
          case 165: 
            { return new Symbol(Simbolos.WHERE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 517: break;
          case 166: 
            { return new Symbol(Simbolos.WHILE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 518: break;
          case 167: 
            { return new Symbol(Simbolos.MATCH, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 519: break;
          case 168: 
            { return new Symbol(Simbolos.MONTH, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 520: break;
          case 169: 
            { return new Symbol(Simbolos.MERGE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 521: break;
          case 170: 
            { return new Symbol(Simbolos.FALSE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 522: break;
          case 171: 
            { return new Symbol(Simbolos.FOUND, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 523: break;
          case 172: 
            { return new Symbol(Simbolos.FLOAT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 524: break;
          case 173: 
            { return new Symbol(Simbolos.FETCH, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 525: break;
          case 174: 
            { return new Symbol(Simbolos.FIRST, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 526: break;
          case 175: 
            { return new Symbol(Simbolos.ACTION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 527: break;
          case 176: 
            { return new Symbol(Simbolos.BACKUP, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 528: break;
          case 177: 
            { return new Symbol(Simbolos.BROWSE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 529: break;
          case 178: 
            { return new Symbol(Simbolos.SELECT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 530: break;
          case 179: 
            { return new Symbol(Simbolos.SECOND, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 531: break;
          case 180: 
            { return new Symbol(Simbolos.SCROLL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 532: break;
          case 181: 
            { return new Symbol(Simbolos.SCHEMA, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 533: break;
          case 182: 
            { return new Symbol(Simbolos.OUTPUT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 534: break;
          case 183: 
            { return new Symbol(Simbolos.OPTION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 535: break;
          case 184: 
            { return new Symbol(Simbolos.OFFSES, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 536: break;
          case 185: 
            { return new Symbol(Simbolos.LINENO, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 537: break;
          case 186: 
            { return new Symbol(Simbolos.UNIQUE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 538: break;
          case 187: 
            { return new Symbol(Simbolos.UPDATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 539: break;
          case 188: 
            { return new Symbol(Simbolos.ESCAPE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 540: break;
          case 189: 
            { return new Symbol(Simbolos.ERRLVL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 541: break;
          case 190: 
            { return new Symbol(Simbolos.EXCEPT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 542: break;
          case 191: 
            { return new Symbol(Simbolos.EXISTS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 543: break;
          case 192: 
            { return new Symbol(Simbolos.COLUMN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 544: break;
          case 193: 
            { return new Symbol(Simbolos.COMMIT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 545: break;
          case 194: 
            { return new Symbol(Simbolos.CURSOR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 546: break;
          case 195: 
            { return new Symbol(Simbolos.CREATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 547: break;
          case 196: 
            { return new Symbol(Simbolos.INSERT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 548: break;
          case 197: 
            { return new Symbol(Simbolos.NULLIF, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 549: break;
          case 198: 
            { return new Symbol(Simbolos.DOUBLE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 550: break;
          case 199: 
            { return new Symbol(Simbolos.DOMAIN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 551: break;
          case 200: 
            { return new Symbol(Simbolos.DELETE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 552: break;
          case 201: 
            { return new Symbol(Simbolos.RETURN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 553: break;
          case 202: 
            { return new Symbol(Simbolos.REVOKE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 554: break;
          case 203: 
            { return new Symbol(Simbolos.REVERT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 555: break;
          case 204: 
            { return new Symbol(Simbolos.HAVING, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 556: break;
          case 205: 
            { return new Symbol(Simbolos.VALUES, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 557: break;
          case 206: 
            { return new Symbol(Simbolos.GLOBAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 558: break;
          case 207: 
            { return new Symbol(Simbolos.PASCAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 559: break;
          case 208: 
            { return new Symbol(Simbolos.PUBLIC, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 560: break;
          case 209: 
            { return new Symbol(Simbolos.MODULE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 561: break;
          case 210: 
            { return new Symbol(Simbolos.MINUTE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 562: break;
          case 211: 
            { return new Symbol(Simbolos.BETWEEN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 563: break;
          case 212: 
            { return new Symbol(Simbolos.SESSION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 564: break;
          case 213: 
            { return new Symbol(Simbolos.SETUSER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 565: break;
          case 214: 
            { return new Symbol(Simbolos.SECTION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 566: break;
          case 215: 
            { return new Symbol(Simbolos.SQLCODE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 567: break;
          case 216: 
            { return new Symbol(Simbolos.OPENXML, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 568: break;
          case 217: 
            { return new Symbol(Simbolos.LEADING, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 569: break;
          case 218: 
            { return new Symbol(Simbolos.UNKNOWN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 570: break;
          case 219: 
            { return new Symbol(Simbolos.UNPIVOT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 571: break;
          case 220: 
            { return new Symbol(Simbolos.TSEQUAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 572: break;
          case 221: 
            { return new Symbol(Simbolos.TRIGGER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 573: break;
          case 222: 
            { return new Symbol(Simbolos.EXTRACT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 574: break;
          case 223: 
            { return new Symbol(Simbolos.EXECUTE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 575: break;
          case 224: 
            { return new Symbol(Simbolos.CASCADE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 576: break;
          case 225: 
            { return new Symbol(Simbolos.CATALOG, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 577: break;
          case 226: 
            { return new Symbol(Simbolos.COLLATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 578: break;
          case 227: 
            { return new Symbol(Simbolos.CONNECT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 579: break;
          case 228: 
            { return new Symbol(Simbolos.CONVERT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 580: break;
          case 229: 
            { return new Symbol(Simbolos.COMPUTE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 581: break;
          case 230: 
            { return new Symbol(Simbolos.CURRENT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 582: break;
          case 231: 
            { return new Symbol(Simbolos.INTEGER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 583: break;
          case 232: 
            { return new Symbol(Simbolos.INCLUDE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 584: break;
          case 233: 
            { return new Symbol(Simbolos.NATURAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 585: break;
          case 234: 
            { return new Symbol(Simbolos.NOCHECK, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 586: break;
          case 235: 
            { return new Symbol(Simbolos.NUMERIC, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 587: break;
          case 236: 
            { return new Symbol(Simbolos.DECLARE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 588: break;
          case 237: 
            { return new Symbol(Simbolos.DECIMAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 589: break;
          case 238: 
            { return new Symbol(Simbolos.DEFAULT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 590: break;
          case 239: 
            { return new Symbol(Simbolos.RESTORE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 591: break;
          case 240: 
            { return new Symbol(Simbolos.VARCHAR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 592: break;
          case 241: 
            { return new Symbol(Simbolos.VARYING, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 593: break;
          case 242: 
            { return new Symbol(Simbolos.PARTIAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 594: break;
          case 243: 
            { return new Symbol(Simbolos.PERCENT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 595: break;
          case 244: 
            { return new Symbol(Simbolos.PREPARE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 596: break;
          case 245: 
            { return new Symbol(Simbolos.PRIMARY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 597: break;
          case 246: 
            { return new Symbol(Simbolos.WAITFOR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 598: break;
          case 247: 
            { return new Symbol(Simbolos.FORTRAN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 599: break;
          case 248: 
            { return new Symbol(Simbolos.FOREIGN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 600: break;
          case 249: 
            { return new Symbol(Simbolos.ABSOLUTE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 601: break;
          case 250: 
            { return new Symbol(Simbolos.ALLOCATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 602: break;
          case 251: 
            { return new Symbol(Simbolos.SHUTDOWN, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 603: break;
          case 252: 
            { return new Symbol(Simbolos.SMALLINT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 604: break;
          case 253: 
            { return new Symbol(Simbolos.SQLSTATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 605: break;
          case 254: 
            { return new Symbol(Simbolos.SQLERROR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 606: break;
          case 255: 
            { return new Symbol(Simbolos.OVERLAPS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 607: break;
          case 256: 
            { return new Symbol(Simbolos.LANGUAGE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 608: break;
          case 257: 
            { return new Symbol(Simbolos.TEXTSIZE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 609: break;
          case 258: 
            { return new Symbol(Simbolos.TRAILING, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 610: break;
          case 259: 
            { return new Symbol(Simbolos.TRUNCATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 611: break;
          case 260: 
            { return new Symbol(Simbolos.END-EXEC, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 612: break;
          case 261: 
            { return new Symbol(Simbolos.EXTERNAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 613: break;
          case 262: 
            { return new Symbol(Simbolos.CASCADED, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 614: break;
          case 263: 
            { return new Symbol(Simbolos.COALESCE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 615: break;
          case 264: 
            { return new Symbol(Simbolos.CONTAINS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 616: break;
          case 265: 
            { return new Symbol(Simbolos.CONTINUE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 617: break;
          case 266: 
            { return new Symbol(Simbolos.INTERVAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 618: break;
          case 267: 
            { return new Symbol(Simbolos.IDENTITY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 619: break;
          case 268: 
            { return new Symbol(Simbolos.NATIONAL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 620: break;
          case 269: 
            { return new Symbol(Simbolos.DATABASE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 621: break;
          case 270: 
            { return new Symbol(Simbolos.DESCRIBE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 622: break;
          case 271: 
            { return new Symbol(Simbolos.DEFERRED, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 623: break;
          case 272: 
            { return new Symbol(Simbolos.DISTINCT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 624: break;
          case 273: 
            { return new Symbol(Simbolos.ROLLBACK, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 625: break;
          case 274: 
            { return new Symbol(Simbolos.ROWCOUNT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 626: break;
          case 275: 
            { return new Symbol(Simbolos.READTEXT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 627: break;
          case 276: 
            { return new Symbol(Simbolos.RESTRICT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 628: break;
          case 277: 
            { return new Symbol(Simbolos.RELATIVE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 629: break;
          case 278: 
            { return new Symbol(Simbolos.HOLDLOCK, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 630: break;
          case 279: 
            { return new Symbol(Simbolos.POSITION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 631: break;
          case 280: 
            { return new Symbol(Simbolos.PRESERVE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 632: break;
          case 281: 
            { return new Symbol(Simbolos.WHENEVER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 633: break;
          case 282: 
            { return new Symbol(Simbolos.FUNCTION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 634: break;
          case 283: 
            { return new Symbol(Simbolos.FREETEXT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 635: break;
          case 284: 
            { return new Symbol(Simbolos.ASSERTION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 636: break;
          case 285: 
            { return new Symbol(Simbolos.SUBSTRING, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 637: break;
          case 286: 
            { return new Symbol(Simbolos.OPENQUERY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 638: break;
          case 287: 
            { return new Symbol(Simbolos.TEMPORARY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 639: break;
          case 288: 
            { return new Symbol(Simbolos.TIMESTAMP, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 640: break;
          case 289: 
            { return new Symbol(Simbolos.TRANSLATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 641: break;
          case 290: 
            { return new Symbol(Simbolos.EXCEPTION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 642: break;
          case 291: 
            { return new Symbol(Simbolos.CLUSTERED, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 643: break;
          case 292: 
            { return new Symbol(Simbolos.CHARACTER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 644: break;
          case 293: 
            { return new Symbol(Simbolos.ISOLATION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 645: break;
          case 294: 
            { return new Symbol(Simbolos.INTERSECT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 646: break;
          case 295: 
            { return new Symbol(Simbolos.INITIALLY, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 647: break;
          case 296: 
            { return new Symbol(Simbolos.INDICATOR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 648: break;
          case 297: 
            { return new Symbol(Simbolos.IMMEDIATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 649: break;
          case 298: 
            { return new Symbol(Simbolos.DISTURBED, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 650: break;
          case 299: 
            { return new Symbol(Simbolos.RAISERROR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 651: break;
          case 300: 
            { return new Symbol(Simbolos.PROCEDURE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 652: break;
          case 301: 
            { return new Symbol(Simbolos.PRECISION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 653: break;
          case 302: 
            { return new Symbol(Simbolos.WRITETEXT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 654: break;
          case 303: 
            { return new Symbol(Simbolos.BIT_LENGTH, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 655: break;
          case 304: 
            { return new Symbol(Simbolos.STATISTICS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 656: break;
          case 305: 
            { return new Symbol(Simbolos.SQLWARNING, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 657: break;
          case 306: 
            { return new Symbol(Simbolos.OPENROWSET, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 658: break;
          case 307: 
            { return new Symbol(Simbolos.UPDATETEXT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 659: break;
          case 308: 
            { return new Symbol(Simbolos.COALLITION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 660: break;
          case 309: 
            { return new Symbol(Simbolos.CONSTRAINT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 661: break;
          case 310: 
            { return new Symbol(Simbolos.CONNECTION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 662: break;
          case 311: 
            { return new Symbol(Simbolos.CHECKPOINT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 663: break;
          case 312: 
            { return new Symbol(Simbolos.DEALLOCATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 664: break;
          case 313: 
            { return new Symbol(Simbolos.DESCRIPTOR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 665: break;
          case 314: 
            { return new Symbol(Simbolos.DEFERRABLE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 666: break;
          case 315: 
            { return new Symbol(Simbolos.DISCONNECT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 667: break;
          case 316: 
            { return new Symbol(Simbolos.ROWGUIDCOL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 668: break;
          case 317: 
            { return new Symbol(Simbolos.REFERENCES, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 669: break;
          case 318: 
            { return new Symbol(Simbolos.PRIVILEGES, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 670: break;
          case 319: 
            { return new Symbol(Simbolos.FILLFACTOR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 671: break;
          case 320: 
            { return new Symbol(Simbolos.SYSTEM_USER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 672: break;
          case 321: 
            { return new Symbol(Simbolos.TABLESAMPLE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 673: break;
          case 322: 
            { return new Symbol(Simbolos.TRANSACTION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 674: break;
          case 323: 
            { return new Symbol(Simbolos.TRANSLATION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 675: break;
          case 324: 
            { return new Symbol(Simbolos.TRY_CONVERT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 676: break;
          case 325: 
            { return new Symbol(Simbolos.CONSTRAINTS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 677: break;
          case 326: 
            { return new Symbol(Simbolos.CHAR_LENGTH, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 678: break;
          case 327: 
            { return new Symbol(Simbolos.INSENSITIVE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 679: break;
          case 328: 
            { return new Symbol(Simbolos.IDENTITYCOL, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 680: break;
          case 329: 
            { return new Symbol(Simbolos.DIAGNOSTICS, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 681: break;
          case 330: 
            { return new Symbol(Simbolos.RECONFIGURE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 682: break;
          case 331: 
            { return new Symbol(Simbolos.REPLICATION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 683: break;
          case 332: 
            { return new Symbol(Simbolos.WITHINGROUP, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 684: break;
          case 333: 
            { return new Symbol(Simbolos.SESSION_USER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 685: break;
          case 334: 
            { return new Symbol(Simbolos.OCTET_LENGTH, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 686: break;
          case 335: 
            { return new Symbol(Simbolos.CURRENT_USER, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 687: break;
          case 336: 
            { return new Symbol(Simbolos.CURRENT_TIME, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 688: break;
          case 337: 
            { return new Symbol(Simbolos.CURRENT_DATE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 689: break;
          case 338: 
            { return new Symbol(Simbolos.NONCLUSTERED, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 690: break;
          case 339: 
            { return new Symbol(Simbolos.AUTHORIZATION, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 691: break;
          case 340: 
            { return new Symbol(Simbolos.SECURITYAUDIT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 692: break;
          case 341: 
            { return new Symbol(Simbolos.TIMEZONE_HOUR, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 693: break;
          case 342: 
            { return new Symbol(Simbolos.CONTAINSTABLE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 694: break;
          case 343: 
            { return new Symbol(Simbolos.CORRESPONDING, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 695: break;
          case 344: 
            { return new Symbol(Simbolos.FREETEXTTABLE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 696: break;
          case 345: 
            { return new Symbol(Simbolos.OPENDATASOURCE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 697: break;
          case 346: 
            { return new Symbol(Simbolos.TIMEZONE_MINUTE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 698: break;
          case 347: 
            { return new Symbol(Simbolos.IDENTITY_INSERT, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 699: break;
          case 348: 
            { return new Symbol(Simbolos.CURRENT_TIMESTAMP, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 700: break;
          case 349: 
            { return new Symbol(Simbolos.CHARACHTER_LENGTH, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 701: break;
          case 350: 
            { return new Symbol(Simbolos.SEMANTICKEYPHRASETABLE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 702: break;
          case 351: 
            { return new Symbol(Simbolos.SEMANTICSIMILARITYTABLE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 703: break;
          case 352: 
            { return new Symbol(Simbolos.SEMANTICSIMILARITYDETAILSTABLE, yycolumn, yyline, yytext() );
            } 
            // fall through
          case 704: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
