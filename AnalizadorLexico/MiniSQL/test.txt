CREATE DATABASE Botanik;
GO
CREATE TABLE Empleado(
    dpi VARCHAR(13) NOT NULL PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    telefono VARCHAR(14) NOT NULL,
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE Tienda(
    codigo INT NOT NULL PRIMARY KEY IDENTITY,
    telefono VARCHAR(14) NOT NULL,
    direccion VARCHAR(MAX) NOT NULL,
    responsable VARCHAR(13) NOT NULL REFERENCES Empleado(dpi),
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE EmpleadoTienda(
    dpi_empleado VARCHAR(13) NOT NULL REFERENCES Empleado(dpi)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    codigo_tienda INT NOT NULL REFERENCES Tienda(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    fecha_asignacion DATE NOT NULL,
    CONSTRAINT [PK_EmpleadoTienda] PRIMARY KEY (dpi_empleado, codigo_tienda)
);

CREATE TABLE HistorialEmpleado(
    dpi_empleado VARCHAR(13) NOT NULL,
    codigo_tienda INT NOT NULL,
    fecha_inicio DATE NOT NULL,
    fecha_fin DATE NOT NULL,
    FOREIGN KEY (dpi_empleado, codigo_tienda) REFERENCES EmpleadoTienda(dpi_empleado, codigo_tienda),
    CONSTRAINT [PK_HistorialEmpleado] PRIMARY KEY (dpi_empleado, codigo_tienda)
);

CREATE TABLE Proveedores(
    codigo INT NOT NULL PRIMARY KEY IDENTITY,
    nombre VARCHAR(50) NOT NULL,
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE HistorialResponsable(
    codigo_tienda INT NOT NULL REFERENCES Tienda(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    dpi_empleado VARCHAR(13) NOT NULL REFERENCES Empleado(dpi)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    fecha_inicio DATETIME NOT NULL,
    fecha_fin DATETIME NOT NULL,
    activo BIT NOT NULL DEFAULT 1,
    CONSTRAINT [PK_HistorialResponsable] PRIMARY KEY (
        codigo_tienda, dpi_empleado, fecha_inicio, fecha_fin
    )
);

CREATE TABLE Zonas(
    codigo_tienda INT NOT NULL REFERENCES Tienda(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    nombre VARCHAR(50) NOT NULL,
    temperatura VARCHAR(50) NOT NULL,
    humedad VARCHAR(50) NOT NULL,
    hora DATETIME NOT NULL,
    activo BIT NOT NULL DEFAULT 1,
    CONSTRAINT [PK_Zonas] PRIMARY KEY (
        codigo_tienda, nombre
    )
);

CREATE TABLE Producto(
    codigo VARCHAR(50) NOT NULL PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    precio NUMERIC(10,2) NOT NULL,
    descripcion VARCHAR(MAX),
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE Semillas(
    codigo_producto VARCHAR(50) NOT NULL PRIMARY KEY REFERENCES Producto(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    cuidados VARCHAR(MAX) NOT NULL,
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE SemillasProveedor(
    codigo_proveedor INT NOT NULL REFERENCES Proveedores(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    codigo_semilla VARCHAR(50) NOT NULL REFERENCES Semillas(codigo_producto)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    activo BIT NOT NULL DEFAULT 1,
    CONSTRAINT [PK_SemillasProveedor] PRIMARY KEY (
        codigo_proveedor, codigo_semilla
    )
);

CREATE TABLE Accesorios(
    codigo_producto VARCHAR(50) NOT NULL PRIMARY KEY REFERENCES Producto(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE AccesoriosProveedor(
    codigo_proveedor INT NOT NULL REFERENCES Proveedores(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    codigo_accesorios VARCHAR(50) NOT NULL REFERENCES Accesorios(codigo_producto)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    activo BIT NOT NULL DEFAULT 1,
    CONSTRAINT [PK_AccesoriosProveedor] PRIMARY KEY (
        codigo_proveedor, codigo_accesorios
    )
);

CREATE TABLE Decoracion(
    codigo_producto VARCHAR(50) NOT NULL PRIMARY KEY REFERENCES Producto(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE DecoracionProveedor(
    codigo_proveedor INT NOT NULL REFERENCES Proveedores(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    codigo_decoracion VARCHAR(50) NOT NULL REFERENCES Decoracion(codigo_producto)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    activo BIT NOT NULL DEFAULT 1,
    CONSTRAINT [PK_DecoracionProveedor] PRIMARY KEY (
        codigo_proveedor, codigo_decoracion
    )
);

CREATE TABLE Stock(
    codigo_producto VARCHAR(50) NOT NULL REFERENCES Producto(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    codigo_tienda INT NOT NULL,
    nombre_zona VARCHAR(50) NOT NULL,
    cantidad_disponible INT NOT NULL,
    activo BIT NOT NULL DEFAULT 1,
	FOREIGN KEY (codigo_tienda, nombre_zona) REFERENCES Zonas(codigo_tienda, nombre),
    CONSTRAINT [PK_Stock] PRIMARY KEY (
        codigo_producto, codigo_tienda, nombre_zona
    )
);

CREATE TABLE HistorialEstado(
    codigo_tienda INT NOT NULL,
    nombre_zona VARCHAR(50) NOT NULL,
    temperatura VARCHAR(50) NOT NULL,
    humedad VARCHAR(50) NOT NULL,
    fecha DATE NOT NULL,
    hora TIME NOT NULL,
    activo BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (codigo_tienda, nombre_zona) REFERENCES Zonas(codigo_tienda, nombre),
    CONSTRAINT [PK_HistorialEstado] PRIMARY KEY (
        codigo_tienda, nombre_zona, fecha, hora
    )
);

CREATE TABLE Riegos(
    codigo_tienda INT NOT NULL,
    nombre_zona VARCHAR(50) NOT NULL,
    fecha DATE NOT NULL,
    hora TIME NOT NULL,
    cantidad NUMERIC(10,2) NOT NULL,
    programado BIT NOT NULL DEFAULT 0,
    realizado BIT NOT NULL DEFAULT 0,
    activo BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (codigo_tienda, nombre_zona) REFERENCES Zonas(codigo_tienda, nombre),
    CONSTRAINT [PK_Riegos] PRIMARY KEY (
        codigo_tienda, nombre_zona, fecha, hora
    )
);

CREATE TABLE ProductosTratamientos(
    codigo VARCHAR(50) NOT NULL PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    cantidad INT NOT NULL,
    unidad VARCHAR(10) NOT NULL,
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE Plagas(
    codigo_producto VARCHAR(50) NOT NULL REFERENCES ProductosTratamientos(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    plaga VARCHAR(50) NOT NULL,
    activo BIT NOT NULL DEFAULT 1,
    CONSTRAINT [PK_Plaga] PRIMARY KEY (
        codigo_producto, plaga
    )
);

CREATE TABLE Tratamientos(
    codigo_tienda INT NOT NULL,
    nombre_zona VARCHAR(50) NOT NULL,
    fecha DATE NOT NULL,
    codigo_producto VARCHAR(50) NOT NULL REFERENCES ProductosTratamientos(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    programado BIT NOT NULL DEFAULT 0,
    realizado BIT NOT NULL DEFAULT 0,
    activo BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (codigo_tienda, nombre_zona) REFERENCES Zonas(codigo_tienda, nombre),
    CONSTRAINT [PK_Tratamientos] PRIMARY KEY (
        codigo_tienda, nombre_zona, fecha
    )
);

CREATE TABLE Fertilizantes(
    codigo VARCHAR(50) NOT NULL PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL,
    cantidad INT NOT NULL,
    unidad VARCHAR(10) NOT NULL,
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE Abonos(
    codigo_tienda INT NOT NULL,
    nombre_zona VARCHAR(50) NOT NULL,
    fecha DATE NOT NULL,
    codigo_fertilizante VARCHAR(50) NOT NULL REFERENCES Fertilizantes(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    cantidad INT NOT NULL,
    activo BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (codigo_tienda, nombre_zona) REFERENCES Zonas(codigo_tienda, nombre),
    CONSTRAINT [PK_Abonos] PRIMARY KEY (
        codigo_tienda, nombre_zona, codigo_fertilizante, fecha
    )
);

CREATE TABLE Plantas(
    codigo_semilla VARCHAR(50) NOT NULL PRIMARY KEY REFERENCES Semillas(codigo_producto)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    medida INT NOT NULL,
    precio NUMERIC(10,2) NOT NULL,
    activo BIT NOT NULL DEFAULT 1
);

CREATE TABLE UbicacionPlanta(
    codigo_tienda INT NOT NULL,
    nombre_zona VARCHAR(50) NOT NULL,
    codigo_planta VARCHAR(50) NOT NULL REFERENCES Plantas(codigo_semilla)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    fecha_entrada DATE NOT NULL,
    fecha_salida DATE DEFAULT NULL,
    actual BIT NOT NULL DEFAULT 0,
    activo BIT NOT NULL DEFAULT 1,
    FOREIGN KEY (codigo_tienda, nombre_zona) REFERENCES Zonas(codigo_tienda, nombre),
    CONSTRAINT [PK_UbicacionPlanta] PRIMARY KEY (
        codigo_tienda, nombre_zona, codigo_planta, fecha_entrada
    )
);

CREATE TABLE Cliente(
    nit VARCHAR(15) NOT NULL PRIMARY KEY,
    nombre VARCHAR(50) NOT NULL
);

CREATE TABLE Pedidos(
    codigo INT PRIMARY KEY,
    nit_cliente VARCHAR(15) NOT NULL REFERENCES Cliente(nit)
    ON UPDATE CASCADE
    ON DELETE CASCADE,
    codigo_producto VARCHAR(50) NOT NULL REFERENCES Producto(codigo)
    ON UPDATE CASCADE
    ON DELETE CASCADE 
);

INSERT INTO Abonos(codigo_tienda,nombre_zona,fecha,codigo_fertilizante,cantidad,activo) VALUES
 (4,'fluocinolone acetonide','2018-12-10 05:49:48','fert-842',53.56,1)
,(5,'Azathioprine','2018-12-11 14:18:49','fert-793',29.3,1)
,(5,'Clemastine Fumarate','2019-03-13 19:57:05','fert-200',32.02,1)
,(5,'colesevelam hydrochloride','2019-03-26 19:43:01','fert-109',30.21,1)
,(5,'eltrombopag olamine','2019-02-23 19:45:41','fert-638',64.68,1)
,(5,'FLUOROURACIL','2018-12-13 02:15:09','fert-638',43.95,1)
,(6,'benzocaine','2019-04-14 03:57:38','fert-793',71.9,1)
,(6,'Levothyroxine Sodium','2019-01-07 08:55:09','fert-842',18.8,1)
,(6,'nitrofurantoin','2019-04-01 11:41:57','fert-200',86.77,1)
,(6,'ONOSMODIUM VIRGINIANUM ROOT','2019-03-29 03:18:53','fert-267',33.07,1)
,(6,'Oxygen','2019-01-30 12:00:04','fert-200',51.69,1)
,(7,'Olanzapine','2019-02-25 06:13:10','fert-829',46.37,1)
,(8,'Nortriptyline Hydrochloride','2018-12-11 01:52:45','fert-267',68.97,1)
,(9,'Acetaminophen and Codeine Phosphate','2018-12-07 08:29:15','fert-435',2.01,1)
,(9,'Acetaminophen and Diphenhydramine HCl','2019-02-19 22:13:12','fert-267',82.28,1)
,(9,'Alcohol','2019-03-22 13:44:02','fert-842',25.51,1)
,(9,'BUPROPION HYDROCHLORIDE','2019-03-01 18:32:37','fert-200',5.86,1)
,(4,'fluocinolone acetonide','2019-02-12 10:45:39','fert-567',62.48,1)
,(5,'Azathioprine','2019-01-21 07:40:59','fert-567',89.23,1)
,(5,'Clemastine Fumarate','2019-02-09 23:18:56','fert-435',14.83,1)
,(5,'colesevelam hydrochloride','2018-12-05 02:55:38','fert-842',98.15,1)
,(5,'eltrombopag olamine','2019-02-25 15:13:03','fert-267',49.47,1)
,(5,'FLUOROURACIL','2019-01-01 18:32:17','fert-793',78.49,1);


SELECT producto.codigo, producto.nombre, producto.precio, producto.descripcion, stock.cantidad_disponible, stock.codigo_tienda 
FROM Producto INNER JOIN Stock ON stock.codigo_producto=producto.codigo;

SELECT nombre FROM (SELECT Empleado.nombre, COUNT(HistorialEmpleado.codigo_tienda) AS Movimientos FROM Empleado INNER JOIN HistorialEmpleado ON Empleado.dpi = HistorialEmpleado.dpi_empleado
GROUP BY Empleado.nombre) Hist WHERE Movimientos > 1;