package Analizadores;

import java_cup.runtime.*;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
//import Lexer;

/*
init with 
{:

:};
*/
/*
scan with 
{:
        return Lexer.next_token();
:};
*/

parser code 
{:
    /* Reporte de error encontrado. */
    public void report_error(String message, Object info) {
        StringBuilder m = new StringBuilder("Error");
        if (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
            m.append(" " + s.value.toString());
            if (s.left >= 0) {                
                m.append(" in line "+(s.left));
                if (s.right >= 0)
                    m.append(", column "+(s.right));
            }
        }
        m.append(" : "+message);
        System.err.println(m);
    }
   
    /* Cuando se encuentra un error de donde el sistema no puede
        recuperarse, se lanza un error fatal. Se despliega el mensaje
        de error y se finaliza la ejecucion. */
    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }

    /* Metodo main para garantizar la ejecucion del analizador
       lexico y sintactico, ademas que se pase como parametro la tabla
       de simbolos correspondiente. */
    public static void main(String[] args){
        try {
             MiniSQL asin = new MiniSQL(
                    new Lexer( new FileReader(args[0])));
            Object result = asin.parse().value;
            System.out.println("\n*** Resultados finales ***");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
:};

terminal ABSOLUTE, ACTION, ADA, ADD, ALL, ALLOCATE, ALTER, AND, ANY, ARE, AS, ASC, ASSERTION, AT, AUTHORIZATION, AVG, BACKUP, BEGIN, BETWEEN, BIT, BIT_LENGTH, BOTH, BREAK, BROWSE, BULK, BY, CASCADE, CASCADED, CASE, CAST, CATALOG, CHAR, CHAR_LENGTH, CHARACTER, CHARACHTER_LENGTH, CHECK, CHECKPOINT, CLOSE, CLUSTERED, COALESCE, COLLATE, COALLITION, COLUMN, COMMIT, COMPUTE, CONNECT, CONNECTION, CONSTRAINT, CONSTRAINTS, CONTAINS, CONTAINSTABLE, CONTINUE, CONVERT, CORRESPONDING, COUNT, CREATE, CROSS, CURRENT, CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP, CURRENT_USER, CURSOR, DATABASE, DATE, DAY, DBCC, DEALLOCATE, DEC, DECIMAL, DECLARE, DEFAULT, DEFERRABLE, DEFERRED, DELETE, DENY, DESC, DESCRIBE, DESCRIPTOR, DIAGNOSTICS, DISCONNECT, DISK, DISTINCT, DISTURBED, DOMAIN, DOUBLE, DROP, DUMP, ELSE, END, END_EXEC, ERRLVL, ESCAPE, EXCEPT, EXCEPTION, EXEC, EXECUTE, EXISTS, EXIT, EXTERNAL, FETCH, EXTRACT, FALSE, FILE, FILLFACTOR, FIRST, FOR, FLOAT, FOREIGN, FREETEXT, FORTRAN, FOUND, FROM, FREETEXTTABLE, FULL, GET, GLOBAL, FUNCTION, GO, GOTO, GRANT, GROUP, HAVING, HOLDLOCK, HOUR, IDENTITY, IMMEDIATE, IN, INCLUDE, INDEX, INDICATOR, INITIALLY, INNER, IDENTITY_INSERT, INPUT, IDENTITYCOL, IF, INSENSITIVE, INSERT, INT, INTEGER, INTERSECT, INTERVAL, INTO, IS, ISOLATION, JOIN, KEY, KILL, LEFT, LANGUAGE, LAST, LEADING, LIKE, LINENO, LEVEL, LOAD, MERGE, LOCAL, NATIONAL, LOWER, NOCHECK, MATCH, NONCLUSTERED, MAX, NOT, MIN, NULL, MINUTE, MODULE, NULLIF, OF, MONTH, NAMES, OFF, NATURAL, OFFSES, NCHAR, NEXT, NO, ON, NONE, OPEN, OPENDATASOURCE, NUMERIC, OCTET_LENGTH, OPENQUERY, OPENROWSET, OPENXML, OPTION, ONLY, OR, ORDER, OUTER, OVER, PERCENT, PIVOT, PLAN, OUTPUT, PRECISION, PRIMARY, PRINT, PROC, OVERLAPS, PAD, PARTIAL, PROCEDURE, PASCAL, PUBLIC, POSITION, RAISERROR, PREPARE, READ, PRESERVE, READTEXT, PRIOR, RECONFIGURE, PRIVILEGES, REFERENCES, REPLICATION, REAL, RESTORE, RESTRICT, RELATIVE, RETURN, RETURNS, REVOKE, RIGHT, ROLLBACK, REVERT, ROWS, ROWCOUNT, SCHEMA, SCROLL, ROWGUIDCOL, SECOND, SECTION, SELECT, SESSION, SESSION_USER, SET, SIZE, RULE, SMALLINT, SAVE, SOME, SECURITYAUDIT, SPACE, SEMANTICKEYPHRASETABLE, SQL, SQLCA, SEMANTICSIMILARITYDETAILSTABLE, SQLCODE, SEMANTICSIMILARITYTABLE, SQLERROR, SQLSTATE, SQLWARNING, SUBSTRING, SUM, SETUSER, SHUTDOWN, SYSTEM_USER, STATISTICS, TABLE, TEMPORARY, THEN, TIME, TIMESTAMP, TABLESAMPLE, TIMEZONE_HOUR, TEXTSIZE, TIMEZONE_MINUTE, TO, TRAILING, TOP, TRANSACTION, TRAN, TRANSLATE, TRANSLATION, TRIM, TRIGGER, TRUNCATE, TRUE, UNION, UNIQUE, TRY_CONVERT, UNKNOWN, TSEQUAL, UPDATE, UPPER, USAGE, USER, UNPIVOT, USING, VALUE, VALUES, VARCHAR, VARYING, UPDATETEXT, VIEW, USE, WHEN, WHENEVER, WHERE, WITH, WAITFOR, WORK, WRITE, YEAR, WHILE, ZONE, WITHINGROUP, WRITETEXT, Entero, Boolean, Float, Cadena, ComentarioLinea, ComentarioMultiliena, Signomas, Signomenos, Signomult, Signodiv, Signoporcentaje, Signomayor, Signomayorigual, Signomenor, Signomenorigual, Signoigual, Signoigualigual, Signonotigual, Signoyy, Signoor, Signoadmiracion, Puntoycoma, Coma, Punto, Corcheteapertura, Corchetecerradura, Corchetes, Parentesisapertura, Parentesiscerradura, Parentesis, Llaveapertura, Llavecerradura, Llaves, Arroba, Sharp, Sharpsharp, Identificador, ERROR;

non terminal TRUNCATEP, TRUNCATE1, TRUNCATE2, OBJECT,OBJECT1,OBJECT2,OBJECT3,SEXP,SEXP2,SEXP3,SEXP4,SEXP5,CONV,CONV1,CONV2,CONV3,CONV4,CONV5,AGG_FN,SEL_AVG,SEL_AVG1,SEL_AVG2,SEL_AVG3,SEL_COUNT,SEL_COUNT1,SEL_COUNT2,SEL_COUNT3,SEL_AGR,SEL_AGR1,SEL_AGR2,SEL_AGR3,EXPRESSION,EXPRESSION1,EXPRESSION2,EXPRESSION3,EXPRESSION4,AR_OPR,SUM_OPR,ASIG_OPR,BIT_OPR,NOT_OPR,COMPARE_OPR,LOGIC_OPR,CASEW,CASEW1,CASEW2,CASEW3,CONST_EXP,DATATYPE,DATATYPE1,DATATYPE2,DATATYPE3,DATATYPE4,DATATYPE5,SH_COND,SH_COND1,SH_COND2,PREDICATE,PREDICATE1,PREDICATE2,PREDICATE3,PREDICATE4,PREDICATE5,PREDICATE6,PREDICATE7,PREDICATE8,PREDICATE9,SH_CONDWM,SH_CONDWM1,SH_CONDWM2,SH_CONDWM3,GSP,GSP1,DT_FN,DT_FN1,DT_FN2,STR_FN,STR_FN1,STR_FN2,OTH_FN,OTH_FN1,OTH_FN2,OTH_FN3,ROWSET,SAM_CL,SAM_CL1,SAM_CL2,JOIN_TYPE,JOIN_TYPE1,JOIN_TYPE2,JOIN_TYPE3,JOINTB,JOINTB1,JOINTB2,JOINTB3,JOINTB4,TB_SOURCE,TB_SOURCE1,TB_SOURCE2,ORDERB,ORDERB1,ORDERB2,ORDERB3,ORDERB4,SELIST,SELIST1,SELIST2,SELIST3,SELIST4,SELIST5,SELIST7,DML,DML2,DML3,DML4,OUTCL,OUTCL1,OUTCL2,OUTCL3,COLST,COLST1,COLST2,EXPR_INSERT,COL_CST,COL_CST1,COL_CST2,COL_CST3,COL_CST4,COL_CST5,COL_CST6,COL_CST7,COL_CST8,COL_CST9,COL_CST10,COL_CST11,COL_CST12,COL_CST13,COL_CST14,COL_CST15,COL_CST16,COL_DEF,COL_DEF1,COL_DEF2,COL_DEF3,COL_DEF4,COL_DEF5,COL_DEF6,COL_DEF7,COL_DEF8,COL_DEF9,COL_DEF10,TB_CST,TB_CST1,TB_CST2,TB_CST3,TB_CST4,TB_CST5,TB_CST6,TB_CST7,TB_CST8,TB_CST9,TB_CST10,TB_CST11,TB_CST12,TB_CST13,TB_CST14,TB_CST15,TB_CST16,TB_CST17,TB_CST18,TB_CST19,TB_CST20,TB_CST21,TB_CST22,TB_CST23,SELECT1,SELECT2,SELECT3,SELECT4,SELECT5,SELECT6,SELECT7,SELECT8,SELECT9,SELECT11,SELECT12,SELECT13,SELECT14,SELECT15,SELECT17,SELECT18,SELECT19,INSERT0,INSERT1,INSERT2,INSERT3,INSERT4,INSERT5,INSERT6,INSERT7,INSERT8,INSERT9,INSERT10,INSERT11,INSERT12,UPDATE0,UPDATE1,UPDATE2,UPDATE3,UPDATE4,UPDATE5,UPDATE6,UPDATE7,UPDATE8,UPDATE9,UPDATE10,UPDATE11,UPDATE12,UPDATE13,UPDATE14,UPDATE15,UPDATE16,UPDATE17,DEL1,DEL2,DEL3,DEL4,DEL5,DEL6,DEL7,DEL8,DEL9,DEL10,BEGIN_T, DROP1, DROP2, DROP3, DROP4, DROP5, DROP6, DROP7, DROP8, DROP9, DROP10, DROP11, DROP12;

start with DROP1;

    TRUNCATEP ::= TRUNCATE TABLE OBJECT TRUNCATE1 TRUNCATE2
                ;
    TRUNCATE1 ::= Coma OBJECT
                |/* VACIO */
                ;
    TRUNCATE2 ::= Puntoycoma
                | GO
                ;

    OBJECT ::= Identificador OBJECT1
                ;
    OBJECT1 ::= Punto Identificador OBJECT2
                |/* VACIO */
                ;
    OBJECT2 ::= Punto Identificador OBJECT3
                |/* VACIO */
                ;
    OBJECT3 ::= Punto Identificador
                |/* VACIO */
                ;
    
    DROP1::= DROP DROP3 DROP2 
            ;
    DROP2  ::= TABLE DROP4 
                | DATABASE DROP6
                | USER Identificador
                | VIEW DROP4
                | INDEX DROP8
                ;
    DROP3 ::= IF EXISTS
                | /* VACIO */
                ;
    DROP4 ::= OBJECT DROP5
                ;
    DROP5 ::= Coma DROP4
                | DROP11
                ;
    DROP6 ::= Identificador DROP7
                ;
    DROP7 ::= Coma DROP6
                | DROP11
                ;
    DROP8 ::= OBJECT DROP9
                ;
    DROP9 ::= ON OBJECT DROP12
                | DROP12
                ;
    DROP11 ::= Puntoycoma
                | GO    
                ;
    DROP12 ::= Coma DROP8
                | DROP11
                ;