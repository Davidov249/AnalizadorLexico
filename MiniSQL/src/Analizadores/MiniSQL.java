
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizadores;

import java_cup.runtime.*;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import java.lang.*;
import java.text.*;
import java.util.LinkedList;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class MiniSQL extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public MiniSQL() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public MiniSQL(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public MiniSQL(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u028e\000\002\002\004\000\002\002\003\000\002\002" +
    "\003\000\002\002\004\000\002\002\003\000\002\002\003" +
    "\000\002\002\004\000\002\002\003\000\002\002\003\000" +
    "\002\002\004\000\002\002\003\000\002\003\007\000\002" +
    "\004\004\000\002\004\002\000\002\005\003\000\002\005" +
    "\003\000\002\006\004\000\002\007\005\000\002\007\002" +
    "\000\002\010\005\000\002\010\002\000\002\011\004\000" +
    "\002\011\002\000\002\360\005\000\002\361\004\000\002" +
    "\361\004\000\002\361\004\000\002\361\004\000\002\361" +
    "\004\000\002\362\004\000\002\362\002\000\002\363\004" +
    "\000\002\364\004\000\002\364\003\000\002\365\004\000" +
    "\002\366\004\000\002\366\003\000\002\367\004\000\002" +
    "\370\005\000\002\370\003\000\002\372\003\000\002\372" +
    "\003\000\002\373\004\000\002\373\003\000\002\374\004" +
    "\000\002\375\004\000\002\375\005\000\002\375\005\000" +
    "\002\375\005\000\002\376\004\000\002\377\005\000\002" +
    "\377\003\000\002\u0100\005\000\002\u0100\005\000\002\u0101" +
    "\005\000\002\u0101\006\000\002\u0102\006\000\002\u0102\004" +
    "\000\002\u0102\004\000\002\u0103\005\000\002\u0103\004\000" +
    "\002\u0103\004\000\002\u0104\004\000\002\u0104\002\000\002" +
    "\u0105\007\000\002\u0106\004\000\002\u0106\002\000\002\u0107" +
    "\005\000\002\u0107\003\000\002\u0108\003\000\002\u0108\002" +
    "\000\002\u0109\003\000\002\u0109\004\000\002\u010a\003\000" +
    "\002\u010a\005\000\002\u010b\004\000\002\u010b\004\000\002" +
    "\u010c\004\000\002\u010c\003\000\002\u010d\003\000\002\u010d" +
    "\003\000\002\u010e\004\000\002\u010e\004\000\002\u010e\003" +
    "\000\002\u010f\005\000\002\u010f\003\000\002\u0110\004\000" +
    "\002\u0111\004\000\002\u0111\003\000\002\u0112\003\000\002" +
    "\u0112\003\000\002\u0113\005\000\002\u0114\005\000\002\u0114" +
    "\002\000\002\071\004\000\002\072\006\000\002\072\003" +
    "\000\002\073\004\000\002\073\002\000\002\074\004\000" +
    "\002\074\010\000\002\074\010\000\002\075\003\000\002" +
    "\075\003\000\002\075\003\000\002\075\003\000\002\075" +
    "\003\000\002\075\003\000\002\075\003\000\002\075\003" +
    "\000\002\076\004\000\002\076\004\000\002\076\005\000" +
    "\002\076\006\000\002\076\005\000\002\076\005\000\002" +
    "\077\005\000\002\077\006\000\002\077\005\000\002\100" +
    "\003\000\002\100\002\000\002\101\005\000\002\101\002" +
    "\000\002\102\004\000\002\102\002\000\002\103\003\000" +
    "\002\103\003\000\002\104\003\000\002\105\003\000\002" +
    "\105\004\000\002\106\005\000\002\106\006\000\002\107" +
    "\004\000\002\107\002\000\002\110\004\000\002\110\003" +
    "\000\002\111\004\000\002\111\006\000\002\112\003\000" +
    "\002\112\002\000\002\113\005\000\002\114\010\000\002" +
    "\114\010\000\002\025\006\000\002\025\006\000\002\025" +
    "\006\000\002\025\006\000\002\025\006\000\002\026\004" +
    "\000\002\027\003\000\002\027\003\000\002\027\002\000" +
    "\002\030\003\000\002\030\004\000\002\031\004\000\002" +
    "\031\002\000\002\032\004\000\002\033\003\000\002\033" +
    "\003\000\002\033\002\000\002\034\003\000\002\034\004" +
    "\000\002\034\003\000\002\035\004\000\002\035\002\000" +
    "\002\036\004\000\002\037\003\000\002\037\003\000\002" +
    "\037\002\000\002\040\004\000\002\040\003\000\002\041" +
    "\004\000\002\041\002\000\002\042\005\000\002\042\005" +
    "\000\002\042\005\000\002\043\003\000\002\043\003\000" +
    "\002\043\003\000\002\044\003\000\002\044\003\000\002" +
    "\045\003\000\002\045\003\000\002\045\003\000\002\046" +
    "\003\000\002\046\003\000\002\012\004\000\002\013\005" +
    "\000\002\013\005\000\002\013\002\000\002\014\004\000" +
    "\002\015\005\000\002\015\005\000\002\015\002\000\002" +
    "\016\005\000\002\016\003\000\002\016\003\000\002\016" +
    "\004\000\002\016\003\000\002\017\005\000\002\017\005" +
    "\000\002\020\007\000\002\021\005\000\002\022\005\000" +
    "\002\022\002\000\002\023\004\000\002\024\004\000\002" +
    "\024\003\000\002\063\004\000\002\063\003\000\002\065" +
    "\004\000\002\066\004\000\002\066\004\000\002\066\004" +
    "\000\002\066\004\000\002\066\004\000\002\066\004\000" +
    "\002\066\004\000\002\066\004\000\002\066\004\000\002" +
    "\066\004\000\002\066\004\000\002\066\004\000\002\066" +
    "\004\000\002\067\005\000\002\067\002\000\002\070\005" +
    "\000\002\070\003\000\002\234\004\000\002\235\004\000" +
    "\002\235\002\000\002\236\005\000\002\236\004\000\002" +
    "\236\003\000\002\236\004\000\002\236\004\000\002\236" +
    "\004\000\002\237\004\000\002\237\003\000\002\240\005" +
    "\000\002\240\003\000\002\241\010\000\002\241\011\000" +
    "\002\242\007\000\002\243\006\000\002\244\004\000\002" +
    "\244\002\000\002\245\005\000\002\245\003\000\002\246" +
    "\006\000\002\247\005\000\002\247\005\000\002\247\002" +
    "\000\002\250\003\000\002\250\003\000\002\251\004\000" +
    "\002\251\003\000\002\251\004\000\002\252\003\000\002" +
    "\252\003\000\002\253\006\000\002\253\003\000\002\254" +
    "\006\000\002\255\005\000\002\256\006\000\002\257\006" +
    "\000\002\260\004\000\002\260\002\000\002\261\005\000" +
    "\002\261\002\000\002\262\004\000\002\262\003\000\002" +
    "\263\004\000\002\263\002\000\002\221\005\000\002\222" +
    "\005\000\002\222\003\000\002\223\004\000\002\223\005" +
    "\000\002\223\003\000\002\223\004\000\002\224\005\000" +
    "\002\224\003\000\002\224\003\000\002\225\005\000\002" +
    "\226\005\000\002\226\003\000\002\227\010\000\002\227" +
    "\003\000\002\230\006\000\002\230\003\000\002\231\004" +
    "\000\002\231\003\000\002\233\003\000\002\233\003\000" +
    "\002\062\004\000\002\062\003\000\002\062\003\000\002" +
    "\062\003\000\002\062\003\000\002\174\004\000\002\175" +
    "\004\000\002\176\004\000\002\176\003\000\002\177\003" +
    "\000\002\177\003\000\002\177\003\000\002\170\005\000" +
    "\002\170\002\000\002\171\004\000\002\171\002\000\002" +
    "\172\005\000\002\172\004\000\002\173\003\000\002\173" +
    "\002\000\002\164\004\000\002\165\003\000\002\165\003" +
    "\000\002\166\005\000\002\166\002\000\002\167\004\000" +
    "\002\167\002\000\002\u0115\005\000\002\u0116\003\000\002" +
    "\u0116\003\000\002\154\003\000\002\155\003\000\002\155" +
    "\004\000\002\155\004\000\002\155\004\000\002\155\004" +
    "\000\002\155\004\000\002\155\004\000\002\155\004\000" +
    "\002\156\004\000\002\156\004\000\002\156\002\000\002" +
    "\157\003\000\002\157\004\000\002\161\004\000\002\161" +
    "\003\000\002\161\002\000\002\162\003\000\002\147\004" +
    "\000\002\150\003\000\002\150\004\000\002\151\004\000" +
    "\002\151\003\000\002\152\004\000\002\153\003\000\002" +
    "\153\003\000\002\144\005\000\002\144\004\000\002\144" +
    "\005\000\002\145\004\000\002\145\003\000\002\145\002" +
    "\000\002\146\003\000\002\146\002\000\002\137\004\000" +
    "\002\137\005\000\002\140\004\000\002\140\005\000\002" +
    "\140\002\000\002\141\004\000\002\141\005\000\002\142" +
    "\006\000\002\143\003\000\002\143\002\000\002\133\004" +
    "\000\002\134\003\000\002\134\003\000\002\135\004\000" +
    "\002\135\004\000\002\135\004\000\002\135\003\000\002" +
    "\136\004\000\002\136\003\000\002\130\006\000\002\131" +
    "\004\000\002\132\003\000\002\132\003\000\002\132\002" +
    "\000\002\127\010\000\002\127\010\000\002\056\004\000" +
    "\002\057\004\000\002\057\003\000\002\060\007\000\002" +
    "\061\005\000\002\061\003\000\002\061\003\000\002\047" +
    "\003\000\002\047\003\000\002\047\003\000\002\047\003" +
    "\000\002\050\003\000\002\051\003\000\002\052\003\000" +
    "\002\052\003\000\002\053\003\000\002\054\003\000\002" +
    "\054\003\000\002\054\003\000\002\054\003\000\002\054" +
    "\003\000\002\055\003\000\002\055\003\000\002\055\003" +
    "\000\002\u0117\003\000\002\u0117\003\000\002\u0117\003\000" +
    "\002\u0117\003\000\002\u0117\003\000\002\123\007\000\002" +
    "\123\003\000\002\123\003\000\002\123\010\000\002\124" +
    "\005\000\002\124\003\000\002\125\005\000\002\125\003" +
    "\000\002\126\006\000\002\120\006\000\002\120\012\000" +
    "\002\120\006\000\002\120\006\000\002\120\010\000\002" +
    "\120\007\000\002\120\006\000\002\120\010\000\002\120" +
    "\006\000\002\120\012\000\002\121\004\000\002\121\003" +
    "\000\002\121\003\000\002\122\004\000\002\122\002\000" +
    "\002\115\003\000\002\115\006\000\002\115\006\000\002" +
    "\115\006\000\002\115\005\000\002\116\003\000\002\116" +
    "\004\000\002\117\004\000\002\117\003\000\002\323\005" +
    "\000\002\324\010\000\002\324\003\000\002\325\003\000" +
    "\002\325\002\000\002\326\004\000\002\326\005\000\002" +
    "\327\004\000\002\330\004\000\002\331\004\000\002\331" +
    "\006\000\002\332\004\000\002\334\003\000\002\334\003" +
    "\000\002\334\003\000\002\334\003\000\002\335\003\000" +
    "\002\336\004\000\002\336\003\000\002\337\004\000\002" +
    "\337\003\000\002\343\005\000\002\343\003\000\002\344" +
    "\004\000\002\344\002\000\002\342\003\000\002\342\003" +
    "\000\002\u0118\012\000\002\u0119\004\000\002\u0119\002\000" +
    "\002\u011a\010\000\002\u011a\002\000\002\u011b\003\000\002" +
    "\u011b\002\000\002\u011c\004\000\002\u011c\002\000\002\u011d" +
    "\011\000\002\u011d\003\000\002\u011e\010\000\002\u011f\004" +
    "\000\002\u011f\003\000\002\u011f\003\000\002\u011f\003\000" +
    "\002\u0120\004\000\002\u0120\002\000\002\u0122\012\000\002" +
    "\u0123\003\000\002\u0123\003\000\002\u0123\003\000\002\u0124" +
    "\005\000\002\u0124\002\000\002\u0125\004\000\002\u0125\002" +
    "\000\002\u0126\006\000\002\u0126\003\000\002\u0121\003\000" +
    "\002\u0121\003\000\002\u0127\003\000\002\u0127\003\000\002" +
    "\u0127\003\000\002\u0127\003\000\002\u0127\003\000\002\345" +
    "\004\000\002\346\007\000\002\346\003\000\002\347\004" +
    "\000\002\347\003\000\002\350\004\000\002\350\003\000" +
    "\002\351\004\000\002\351\005\000\002\352\004\000\002" +
    "\352\003\000\002\353\005\000\002\353\003\000\002\354" +
    "\005\000\002\354\003\000\002\355\005\000\002\355\003" +
    "\000\002\356\003\000\002\356\003\000\002\306\004\000" +
    "\002\307\007\000\002\307\003\000\002\310\004\000\002" +
    "\310\003\000\002\311\004\000\002\311\003\000\002\312" +
    "\004\000\002\313\004\000\002\313\003\000\002\314\004" +
    "\000\002\314\003\000\002\315\005\000\002\315\004\000" +
    "\002\315\005\000\002\316\004\000\002\320\003\000\002" +
    "\320\003\000\002\320\003\000\002\321\004\000\002\321" +
    "\004\000\002\322\006\000\002\322\003\000\002\317\003" +
    "\000\002\317\003\000\002\264\004\000\002\265\004\000" +
    "\002\266\003\000\002\266\003\000\002\266\002\000\002" +
    "\267\004\000\002\267\003\000\002\270\006\000\002\271" +
    "\004\000\002\271\003\000\002\272\004\000\002\305\004" +
    "\000\002\305\003\000\002\273\004\000\002\273\003\000" +
    "\002\274\004\000\002\275\005\000\002\275\003\000\002" +
    "\276\005\000\002\276\003\000\002\277\007\000\002\277" +
    "\003\000\002\300\005\000\002\300\003\000\002\301\005" +
    "\000\002\301\002\000\002\303\005\000\002\303\002\000" +
    "\002\u0128\010\000\002\u0129\005\000\002\u012a\003\000\002" +
    "\u012a\003\000\002\u012a\002\000\002\u012b\004\000\002\u012b" +
    "\002\000\002\u012c\006\000\002\u012c\002\000\002\u012d\004" +
    "\000\002\u012e\007\000\002\u012e\006\000\002\u012e\004\000" +
    "\002\u012e\006\000\002\u012e\004\000\002\u012f\004\000\002" +
    "\u012f\004\000\002\u012f\004\000\002\u012f\004\000\002\u0130" +
    "\005\000\002\u0130\002\000\002\u0131\004\000\002\u0132\004" +
    "\000\002\u0132\002\000\002\u0133\005\000\002\u0133\002\000" +
    "\002\u0134\014\000\002\u0135\006\000\002\u0135\002\000\002" +
    "\u0147\005\000\002\u0148\004\000\002\u0148\002\000\002\u0149" +
    "\010\000\002\u0149\005\000\002\u014a\004\000\002\u014a\002" +
    "\000\002\u014b\005\000\002\u014b\002\000\002\u014c\006\000" +
    "\002\u014c\003\000\002\u0136\004\000\002\u0137\005\000\002" +
    "\u0137\003\000\002\u0138\005\000\002\u0138\003\000\002\u0139" +
    "\007\000\002\u013a\003\000\002\u013a\002\000\002\u013b\004" +
    "\000\002\u013b\003\000\002\u013c\005\000\002\u013c\003\000" +
    "\002\u013d\004\000\002\u013d\003\000\002\u013e\004\000\002" +
    "\u013e\003\000\002\u013f\007\000\002\u013f\003\000\002\u0140" +
    "\003\000\002\u0140\003\000\002\u0141\003\000\002\u0142\005" +
    "\000\002\u0142\003\000\002\u0143\007\000\002\u0144\003\000" +
    "\002\u0144\002\000\002\u0145\004\000\002\u0145\003\000\002" +
    "\u0145\003\000\002\u0145\003\000\002\u0146\004\000\002\u0146" +
    "\003\000\002\u0146\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u04a7\000\024\003\021\012\016\073\014\116\023\132" +
    "\017\216\015\361\007\u011d\011\u0124\024\001\002\000\004" +
    "\002\ufff9\001\002\000\024\003\021\012\016\073\014\116" +
    "\023\132\017\216\015\361\007\u011d\011\u0124\024\001\002" +
    "\000\004\002\uffff\001\002\000\106\010\u047b\023\ufdd4\040" +
    "\ufdd4\041\ufdd4\043\ufdd4\070\ufdd4\072\ufdd4\100\ufdd4\105\ufdd4" +
    "\126\u0478\231\ufdd4\244\ufdd4\250\ufdd4\251\ufdd4\252\ufdd4\260" +
    "\ufdd4\265\ufdd4\347\ufdd4\364\ufdd4\373\ufdd4\u0105\ufdd4\u0106\ufdd4" +
    "\u0116\ufdd4\u0119\ufdd4\u011b\ufdd4\u0125\ufdd4\u0138\ufdd4\u013d\ufdd4\u013f" +
    "\ufdd4\u0140\ufdd4\u0145\ufdd4\u0158\ufdd4\u015e\ufdd4\u0161\ufdd4\001\002" +
    "\000\004\002\ufffc\001\002\000\004\u010b\u0470\001\002\000" +
    "\004\002\ufffd\001\002\000\024\003\021\012\016\073\014" +
    "\116\023\132\017\216\015\361\007\u011d\011\u0124\024\001" +
    "\002\000\022\103\u03ac\171\u03b2\303\u03b4\316\u03af\322\u03ae" +
    "\u010b\u03b1\u0127\u03ad\u012f\u03b0\001\002\000\010\223\u0382\u0116" +
    "\u0381\u0161\034\001\002\000\012\103\u029d\u010b\u029f\u0127\u02a0" +
    "\u012f\u029e\001\002\000\016\103\uffe3\205\uffe3\214\u027b\u010b" +
    "\uffe3\u0127\uffe3\u012f\uffe3\001\002\000\004\002\000\001\002" +
    "\000\026\002\ufff7\003\021\012\016\073\014\116\023\132" +
    "\017\216\015\361\007\u011d\011\u0124\024\001\002\000\004" +
    "\002\ufffa\001\002\000\012\164\u0259\u0116\u025a\u015e\u025c\u0161" +
    "\034\001\002\000\010\u0116\031\u015e\033\u0161\034\001\002" +
    "\000\004\002\026\001\002\000\004\002\001\001\002\000" +
    "\004\364\050\001\002\000\006\172\ufe40\u0152\ufe40\001\002" +
    "\000\004\u0158\u024f\001\002\000\006\172\u024d\u0152\u024c\001" +
    "\002\000\004\u0161\046\001\002\000\102\002\uffef\007\uffef" +
    "\012\uffef\016\uffef\074\uffef\113\uffef\132\uffef\164\uffef\166" +
    "\uffef\172\uffef\175\uffef\176\uffef\210\uffef\226\uffef\231\uffef" +
    "\270\uffef\304\uffef\306\uffef\312\uffef\347\uffef\361\uffef\364" +
    "\uffef\u0110\uffef\u012b\uffef\u0133\uffef\u0134\uffef\u014c\uffef\u0152\uffef" +
    "\u0153\uffef\u0154\036\u0158\uffef\u0161\uffef\001\002\000\134\002" +
    "\ufff1\007\ufff1\012\ufff1\013\ufff1\016\ufff1\026\ufff1\074\ufff1" +
    "\113\ufff1\132\ufff1\140\ufff1\164\ufff1\166\ufff1\172\ufff1\175" +
    "\ufff1\176\ufff1\203\ufff1\210\ufff1\224\ufff1\226\ufff1\231\ufff1" +
    "\235\ufff1\251\ufff1\270\ufff1\303\ufff1\304\ufff1\306\ufff1\312" +
    "\ufff1\347\ufff1\361\ufff1\364\ufff1\u0110\ufff1\u012b\ufff1\u0133\ufff1" +
    "\u0134\ufff1\u0148\ufff1\u0149\ufff1\u014a\ufff1\u014b\ufff1\u014c\ufff1\u014e" +
    "\ufff1\u0152\ufff1\u0153\ufff1\u0158\ufff1\u0159\ufff1\u0161\ufff1\001\002" +
    "\000\004\u0161\037\001\002\000\136\002\uffed\007\uffed\012" +
    "\uffed\013\uffed\016\uffed\026\uffed\074\uffed\113\uffed\132\uffed" +
    "\140\uffed\164\uffed\166\uffed\172\uffed\175\uffed\176\uffed\203" +
    "\uffed\210\uffed\224\uffed\226\uffed\231\uffed\235\uffed\251\uffed" +
    "\270\uffed\303\uffed\304\uffed\306\uffed\312\uffed\347\uffed\361" +
    "\uffed\364\uffed\u0110\uffed\u012b\uffed\u0133\uffed\u0134\uffed\u0148\uffed" +
    "\u0149\uffed\u014a\uffed\u014b\uffed\u014c\uffed\u014e\uffed\u0152\uffed\u0153" +
    "\uffed\u0154\041\u0158\uffed\u0159\uffed\u0161\uffed\001\002\000\134" +
    "\002\ufff0\007\ufff0\012\ufff0\013\ufff0\016\ufff0\026\ufff0\074" +
    "\ufff0\113\ufff0\132\ufff0\140\ufff0\164\ufff0\166\ufff0\172\ufff0" +
    "\175\ufff0\176\ufff0\203\ufff0\210\ufff0\224\ufff0\226\ufff0\231" +
    "\ufff0\235\ufff0\251\ufff0\270\ufff0\303\ufff0\304\ufff0\306\ufff0" +
    "\312\ufff0\347\ufff0\361\ufff0\364\ufff0\u0110\ufff0\u012b\ufff0\u0133" +
    "\ufff0\u0134\ufff0\u0148\ufff0\u0149\ufff0\u014a\ufff0\u014b\ufff0\u014c\ufff0" +
    "\u014e\ufff0\u0152\ufff0\u0153\ufff0\u0158\ufff0\u0159\ufff0\u0161\ufff0\001" +
    "\002\000\004\u0161\042\001\002\000\136\002\uffeb\007\uffeb" +
    "\012\uffeb\013\uffeb\016\uffeb\026\uffeb\074\uffeb\113\uffeb\132" +
    "\uffeb\140\uffeb\164\uffeb\166\uffeb\172\uffeb\175\uffeb\176\uffeb" +
    "\203\uffeb\210\uffeb\224\uffeb\226\uffeb\231\uffeb\235\uffeb\251" +
    "\uffeb\270\uffeb\303\uffeb\304\uffeb\306\uffeb\312\uffeb\347\uffeb" +
    "\361\uffeb\364\uffeb\u0110\uffeb\u012b\uffeb\u0133\uffeb\u0134\uffeb\u0148" +
    "\uffeb\u0149\uffeb\u014a\uffeb\u014b\uffeb\u014c\uffeb\u014e\uffeb\u0152\uffeb" +
    "\u0153\uffeb\u0154\044\u0158\uffeb\u0159\uffeb\u0161\uffeb\001\002\000" +
    "\134\002\uffee\007\uffee\012\uffee\013\uffee\016\uffee\026\uffee" +
    "\074\uffee\113\uffee\132\uffee\140\uffee\164\uffee\166\uffee\172" +
    "\uffee\175\uffee\176\uffee\203\uffee\210\uffee\224\uffee\226\uffee" +
    "\231\uffee\235\uffee\251\uffee\270\uffee\303\uffee\304\uffee\306" +
    "\uffee\312\uffee\347\uffee\361\uffee\364\uffee\u0110\uffee\u012b\uffee" +
    "\u0133\uffee\u0134\uffee\u0148\uffee\u0149\uffee\u014a\uffee\u014b\uffee\u014c" +
    "\uffee\u014e\uffee\u0152\uffee\u0153\uffee\u0158\uffee\u0159\uffee\u0161\uffee" +
    "\001\002\000\004\u0161\045\001\002\000\134\002\uffec\007" +
    "\uffec\012\uffec\013\uffec\016\uffec\026\uffec\074\uffec\113\uffec" +
    "\132\uffec\140\uffec\164\uffec\166\uffec\172\uffec\175\uffec\176" +
    "\uffec\203\uffec\210\uffec\224\uffec\226\uffec\231\uffec\235\uffec" +
    "\251\uffec\270\uffec\303\uffec\304\uffec\306\uffec\312\uffec\347" +
    "\uffec\361\uffec\364\uffec\u0110\uffec\u012b\uffec\u0133\uffec\u0134\uffec" +
    "\u0148\uffec\u0149\uffec\u014a\uffec\u014b\uffec\u014c\uffec\u014e\uffec\u0152" +
    "\uffec\u0153\uffec\u0158\uffec\u0159\uffec\u0161\uffec\001\002\000\004" +
    "\364\050\001\002\000\006\172\ufe3c\u0152\ufe3c\001\002\000" +
    "\006\u015e\054\u0161\034\001\002\000\016\164\247\172\ufecd" +
    "\312\244\u0133\243\u0152\ufecd\u0153\245\001\002\000\006\172" +
    "\ufe3b\u0152\ufe3b\001\002\000\004\u014c\233\001\002\000\004" +
    "\u0161\055\001\002\000\004\u014c\056\001\002\000\032\023" +
    "\075\072\101\250\100\251\062\252\077\u0106\057\u013d\063" +
    "\u013f\060\u0140\072\u0158\061\u015e\065\u0161\067\001\002\000" +
    "\004\u0158\227\001\002\000\150\002\uff3d\013\uff3d\016\uff3d" +
    "\017\uff3d\026\uff3d\054\uff3d\074\uff3d\113\uff3d\120\uff3d\134" +
    "\uff3d\135\uff3d\140\uff3d\164\uff3d\166\uff3d\172\uff3d\175\uff3d" +
    "\176\uff3d\203\uff3d\210\uff3d\223\uff3d\224\uff3d\226\uff3d\231" +
    "\uff3d\235\uff3d\251\uff3d\303\uff3d\304\uff3d\307\uff3d\312\uff3d" +
    "\347\uff3d\352\uff3d\361\uff3d\u010d\uff3d\u012b\uff3d\u0131\uff3d\u0133" +
    "\uff3d\u0134\uff3d\u0143\uff3d\u0144\uff3d\u0145\uff3d\u0146\uff3d\u0147\uff3d" +
    "\u0148\uff3d\u0149\uff3d\u014a\uff3d\u014b\uff3d\u014e\uff3d\u0152\uff3d\u0153" +
    "\uff3d\u0159\uff3d\u0161\uff3d\001\002\000\024\023\075\072\101" +
    "\250\100\252\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e" +
    "\065\001\002\000\032\023\ufe71\072\ufe71\250\ufe71\251\ufe71" +
    "\252\ufe71\u0106\ufe71\u013d\ufe71\u013f\ufe71\u0140\ufe71\u0158\ufe71\u015e" +
    "\ufe71\u0161\ufe71\001\002\000\150\002\uff3e\013\uff3e\016\uff3e" +
    "\017\uff3e\026\uff3e\054\uff3e\074\uff3e\113\uff3e\120\uff3e\134" +
    "\uff3e\135\uff3e\140\uff3e\164\uff3e\166\uff3e\172\uff3e\175\uff3e" +
    "\176\uff3e\203\uff3e\210\uff3e\223\uff3e\224\uff3e\226\uff3e\231" +
    "\uff3e\235\uff3e\251\uff3e\303\uff3e\304\uff3e\307\uff3e\312\uff3e" +
    "\347\uff3e\352\uff3e\361\uff3e\u010d\uff3e\u012b\uff3e\u0131\uff3e\u0133" +
    "\uff3e\u0134\uff3e\u0143\uff3e\u0144\uff3e\u0145\uff3e\u0146\uff3e\u0147\uff3e" +
    "\u0148\uff3e\u0149\uff3e\u014a\uff3e\u014b\uff3e\u014e\uff3e\u0152\uff3e\u0153" +
    "\uff3e\u0159\uff3e\u0161\uff3e\001\002\000\150\002\uff40\013\uff40" +
    "\016\uff40\017\uff40\026\uff40\054\uff40\074\uff40\113\uff40\120" +
    "\uff40\134\uff40\135\uff40\140\uff40\164\uff40\166\uff40\172\uff40" +
    "\175\uff40\176\uff40\203\uff40\210\uff40\223\uff40\224\uff40\226" +
    "\uff40\231\uff40\235\uff40\251\uff40\303\uff40\304\uff40\307\uff40" +
    "\312\uff40\347\uff40\352\uff40\361\uff40\u010d\uff40\u012b\uff40\u0131" +
    "\uff40\u0133\uff40\u0134\uff40\u0143\uff40\u0144\uff40\u0145\217\u0146\220" +
    "\u0147\uff40\u0148\uff40\u0149\uff40\u014a\uff40\u014b\uff40\u014e\uff40\u0152" +
    "\uff40\u0153\uff40\u0159\uff40\u0161\uff40\001\002\000\004\u0161\215" +
    "\001\002\000\150\002\uff44\013\uff44\016\uff44\017\uff44\026" +
    "\uff44\054\uff44\074\uff44\113\uff44\120\uff44\134\uff44\135\uff44" +
    "\140\uff44\164\uff44\166\uff44\172\uff44\175\uff44\176\uff44\203" +
    "\uff44\210\uff44\223\uff44\224\uff44\226\uff44\231\uff44\235\uff44" +
    "\251\uff44\303\uff44\304\uff44\307\uff44\312\uff44\347\uff44\352" +
    "\uff44\361\uff44\u010d\uff44\u012b\uff44\u0131\uff44\u0133\uff44\u0134\uff44" +
    "\u0143\207\u0144\206\u0145\uff44\u0146\uff44\u0147\uff44\u0148\uff44\u0149" +
    "\uff44\u014a\uff44\u014b\uff44\u014e\uff44\u0152\uff44\u0153\uff44\u0159\uff44" +
    "\u0161\uff44\001\002\000\100\002\uff4d\016\uff4d\017\uff4d\026" +
    "\uff4d\054\uff4d\120\uff4d\134\uff4d\135\uff4d\164\uff4d\172\uff4d" +
    "\175\uff4d\176\uff4d\203\uff4d\223\uff4d\235\uff4d\304\uff4d\312" +
    "\uff4d\u010d\uff4d\u0131\uff4d\u0133\uff4d\u0134\uff4d\u0143\uff4d\u0148\uff4d" +
    "\u0149\uff4d\u014a\uff4d\u014b\uff4d\u014e\uff4d\u0152\uff4d\u0153\uff4d\u0159" +
    "\uff4d\u0161\uff4d\001\002\000\150\002\uff3b\013\uff3b\016\uff3b" +
    "\017\uff3b\026\uff3b\054\uff3b\074\uff3b\113\uff3b\120\uff3b\134" +
    "\uff3b\135\uff3b\140\uff3b\164\uff3b\166\uff3b\172\uff3b\175\uff3b" +
    "\176\uff3b\203\uff3b\210\uff3b\223\uff3b\224\uff3b\226\uff3b\231" +
    "\uff3b\235\uff3b\251\uff3b\303\uff3b\304\uff3b\307\uff3b\312\uff3b" +
    "\347\uff3b\352\uff3b\361\uff3b\u010d\uff3b\u012b\uff3b\u0131\uff3b\u0133" +
    "\uff3b\u0134\uff3b\u0143\uff3b\u0144\uff3b\u0145\uff3b\u0146\uff3b\u0147\uff3b" +
    "\u0148\uff3b\u0149\uff3b\u014a\uff3b\u014b\uff3b\u014e\uff3b\u0152\uff3b\u0153" +
    "\uff3b\u0159\uff3b\u0161\uff3b\001\002\000\004\u0143\142\001\002" +
    "\000\100\002\uff4e\016\uff4e\017\uff4e\026\uff4e\054\uff4e\120" +
    "\uff4e\134\uff4e\135\uff4e\164\uff4e\172\uff4e\175\uff4e\176\uff4e" +
    "\203\uff4e\223\uff4e\235\uff4e\304\uff4e\312\uff4e\u010d\uff4e\u0131" +
    "\uff4e\u0133\uff4e\u0134\uff4e\u0143\uff4e\u0148\uff4e\u0149\uff4e\u014a\uff4e" +
    "\u014b\uff4e\u014e\uff4e\u0152\uff4e\u0153\uff4e\u0159\uff4e\u0161\uff4e\001" +
    "\002\000\016\164\ufe32\172\ufe32\312\ufe32\u0133\ufe32\u0152\ufe32" +
    "\u0153\ufe32\001\002\000\032\023\075\072\101\250\100\251" +
    "\062\252\077\u0106\057\u013d\063\u013f\060\u0140\072\u0158\061" +
    "\u015e\065\u0161\067\001\002\000\004\u0158\161\001\002\000" +
    "\026\u0143\142\u0144\143\u0145\147\u0146\145\u0147\151\u0148\154" +
    "\u0149\150\u014a\144\u014b\137\u014e\140\001\002\000\004\u0158" +
    "\134\001\002\000\004\u0158\120\001\002\000\004\u0158\103" +
    "\001\002\000\016\164\ufe38\172\ufe38\312\ufe38\u0133\ufe38\u0152" +
    "\ufe38\u0153\ufe38\001\002\000\034\010\107\023\uff62\072\uff62" +
    "\126\104\250\uff62\252\uff62\u0106\uff62\u013d\uff62\u013f\uff62\u0145" +
    "\uff62\u0158\uff62\u015e\uff62\u0161\uff62\001\002\000\030\023\uff63" +
    "\072\uff63\250\uff63\252\uff63\u0106\uff63\u013d\uff63\u013f\uff63\u0145" +
    "\uff63\u0158\uff63\u015e\uff63\u0161\uff63\001\002\000\004\u0159\117" +
    "\001\002\000\030\023\075\072\101\250\100\252\077\u0106" +
    "\057\u013d\063\u013f\060\u0145\111\u0158\061\u015e\065\u0161\112" +
    "\001\002\000\030\023\uff64\072\uff64\250\uff64\252\uff64\u0106" +
    "\uff64\u013d\uff64\u013f\uff64\u0145\uff64\u0158\uff64\u015e\uff64\u0161\uff64" +
    "\001\002\000\004\u0159\uff5f\001\002\000\004\u0159\uff61\001" +
    "\002\000\006\u0154\114\u0159\uff5d\001\002\000\004\u0159\uff65" +
    "\001\002\000\004\u0161\116\001\002\000\004\u0159\uff60\001" +
    "\002\000\004\u0159\uff5e\001\002\000\150\002\uff71\013\uff71" +
    "\016\uff71\017\uff71\026\uff71\054\uff71\074\uff71\113\uff71\120" +
    "\uff71\134\uff71\135\uff71\140\uff71\164\uff71\166\uff71\172\uff71" +
    "\175\uff71\176\uff71\203\uff71\210\uff71\223\uff71\224\uff71\226" +
    "\uff71\231\uff71\235\uff71\251\uff71\303\uff71\304\uff71\307\uff71" +
    "\312\uff71\347\uff71\352\uff71\361\uff71\u010d\uff71\u012b\uff71\u0131" +
    "\uff71\u0133\uff71\u0134\uff71\u0143\uff71\u0144\uff71\u0145\uff71\u0146\uff71" +
    "\u0147\uff71\u0148\uff71\u0149\uff71\u014a\uff71\u014b\uff71\u014e\uff71\u0152" +
    "\uff71\u0153\uff71\u0159\uff71\u0161\uff71\001\002\000\032\010\122" +
    "\023\uff59\072\uff59\126\121\250\uff59\252\uff59\u0106\uff59\u013d" +
    "\uff59\u013f\uff59\u0158\uff59\u015e\uff59\u0161\uff59\001\002\000\026" +
    "\023\uff5a\072\uff5a\250\uff5a\252\uff5a\u0106\uff5a\u013d\uff5a\u013f" +
    "\uff5a\u0158\uff5a\u015e\uff5a\u0161\uff5a\001\002\000\026\023\uff5b" +
    "\072\uff5b\250\uff5b\252\uff5b\u0106\uff5b\u013d\uff5b\u013f\uff5b\u0158" +
    "\uff5b\u015e\uff5b\u0161\uff5b\001\002\000\004\u0159\133\001\002" +
    "\000\026\023\075\072\101\250\100\252\077\u0106\057\u013d" +
    "\063\u013f\060\u0158\061\u015e\065\u0161\127\001\002\000\004" +
    "\u0159\uff5c\001\002\000\004\u0159\uff57\001\002\000\006\u0154" +
    "\131\u0159\uff55\001\002\000\004\u0159\uff58\001\002\000\004" +
    "\u0161\132\001\002\000\004\u0159\uff56\001\002\000\150\002" +
    "\uff70\013\uff70\016\uff70\017\uff70\026\uff70\054\uff70\074\uff70" +
    "\113\uff70\120\uff70\134\uff70\135\uff70\140\uff70\164\uff70\166" +
    "\uff70\172\uff70\175\uff70\176\uff70\203\uff70\210\uff70\223\uff70" +
    "\224\uff70\226\uff70\231\uff70\235\uff70\251\uff70\303\uff70\304" +
    "\uff70\307\uff70\312\uff70\347\uff70\352\uff70\361\uff70\u010d\uff70" +
    "\u012b\uff70\u0131\uff70\u0133\uff70\u0134\uff70\u0143\uff70\u0144\uff70\u0145" +
    "\uff70\u0146\uff70\u0147\uff70\u0148\uff70\u0149\uff70\u014a\uff70\u014b\uff70" +
    "\u014e\uff70\u0152\uff70\u0153\uff70\u0159\uff70\u0161\uff70\001\002\000" +
    "\032\010\122\023\uff59\072\uff59\126\121\250\uff59\252\uff59" +
    "\u0106\uff59\u013d\uff59\u013f\uff59\u0158\uff59\u015e\uff59\u0161\uff59\001" +
    "\002\000\004\u0159\136\001\002\000\150\002\uff6f\013\uff6f" +
    "\016\uff6f\017\uff6f\026\uff6f\054\uff6f\074\uff6f\113\uff6f\120" +
    "\uff6f\134\uff6f\135\uff6f\140\uff6f\164\uff6f\166\uff6f\172\uff6f" +
    "\175\uff6f\176\uff6f\203\uff6f\210\uff6f\223\uff6f\224\uff6f\226" +
    "\uff6f\231\uff6f\235\uff6f\251\uff6f\303\uff6f\304\uff6f\307\uff6f" +
    "\312\uff6f\347\uff6f\352\uff6f\361\uff6f\u010d\uff6f\u012b\uff6f\u0131" +
    "\uff6f\u0133\uff6f\u0134\uff6f\u0143\uff6f\u0144\uff6f\u0145\uff6f\u0146\uff6f" +
    "\u0147\uff6f\u0148\uff6f\u0149\uff6f\u014a\uff6f\u014b\uff6f\u014e\uff6f\u0152" +
    "\uff6f\u0153\uff6f\u0159\uff6f\u0161\uff6f\001\002\000\176\002\ufe6d" +
    "\016\ufe6d\017\ufe6d\023\ufe6d\026\ufe6d\040\ufe6d\041\ufe6d\043" +
    "\ufe6d\054\ufe6d\070\ufe6d\072\ufe6d\100\ufe6d\105\ufe6d\120\ufe6d" +
    "\134\ufe6d\135\ufe6d\164\ufe6d\172\ufe6d\175\ufe6d\176\ufe6d\203" +
    "\ufe6d\223\ufe6d\231\ufe6d\235\ufe6d\244\ufe6d\250\ufe6d\252\ufe6d" +
    "\256\ufe6d\260\ufe6d\265\ufe6d\266\ufe6d\304\ufe6d\312\ufe6d\347" +
    "\ufe6d\363\ufe6d\364\ufe6d\373\ufe6d\u0105\ufe6d\u0106\ufe6d\u0109\ufe6d" +
    "\u010d\ufe6d\u0119\ufe6d\u011b\ufe6d\u0125\ufe6d\u0131\ufe6d\u0133\ufe6d\u0134" +
    "\ufe6d\u0138\ufe6d\u013d\ufe6d\u013f\ufe6d\u0140\ufe6d\u0148\ufe6d\u0149\ufe6d" +
    "\u014a\ufe6d\u014b\ufe6d\u014e\ufe6d\u0152\ufe6d\u0153\ufe6d\u0158\ufe6d\u0159" +
    "\ufe6d\u015e\ufe6d\u0161\ufe6d\001\002\000\176\002\ufe6c\016\ufe6c" +
    "\017\ufe6c\023\ufe6c\026\ufe6c\040\ufe6c\041\ufe6c\043\ufe6c\054" +
    "\ufe6c\070\ufe6c\072\ufe6c\100\ufe6c\105\ufe6c\120\ufe6c\134\ufe6c" +
    "\135\ufe6c\164\ufe6c\172\ufe6c\175\ufe6c\176\ufe6c\203\ufe6c\223" +
    "\ufe6c\231\ufe6c\235\ufe6c\244\ufe6c\250\ufe6c\252\ufe6c\256\ufe6c" +
    "\260\ufe6c\265\ufe6c\266\ufe6c\304\ufe6c\312\ufe6c\347\ufe6c\363" +
    "\ufe6c\364\ufe6c\373\ufe6c\u0105\ufe6c\u0106\ufe6c\u0109\ufe6c\u010d\ufe6c" +
    "\u0119\ufe6c\u011b\ufe6c\u0125\ufe6c\u0131\ufe6c\u0133\ufe6c\u0134\ufe6c\u0138" +
    "\ufe6c\u013d\ufe6c\u013f\ufe6c\u0140\ufe6c\u0148\ufe6c\u0149\ufe6c\u014a\ufe6c" +
    "\u014b\ufe6c\u014e\ufe6c\u0152\ufe6c\u0153\ufe6c\u0158\ufe6c\u0159\ufe6c\u015e" +
    "\ufe6c\u0161\ufe6c\001\002\000\030\023\uff50\072\uff50\250\uff50" +
    "\252\uff50\u0106\uff50\u013d\uff50\u013f\uff50\u0140\uff50\u0158\uff50\u015e" +
    "\uff50\u0161\uff50\001\002\000\030\023\ufe75\072\ufe75\250\ufe75" +
    "\252\ufe75\u0106\ufe75\u013d\ufe75\u013f\ufe75\u0140\ufe75\u0158\ufe75\u015e" +
    "\ufe75\u0161\ufe75\001\002\000\030\023\ufe79\072\ufe79\250\ufe79" +
    "\252\ufe79\u0106\ufe79\u013d\ufe79\u013f\ufe79\u0140\ufe79\u0158\ufe79\u015e" +
    "\ufe79\u0161\ufe79\001\002\000\176\002\ufe6f\016\ufe6f\017\ufe6f" +
    "\023\ufe6f\026\ufe6f\040\ufe6f\041\ufe6f\043\ufe6f\054\ufe6f\070" +
    "\ufe6f\072\ufe6f\100\ufe6f\105\ufe6f\120\ufe6f\134\ufe6f\135\ufe6f" +
    "\164\ufe6f\172\ufe6f\175\ufe6f\176\ufe6f\203\ufe6f\223\ufe6f\231" +
    "\ufe6f\235\ufe6f\244\ufe6f\250\ufe6f\252\ufe6f\256\ufe6f\260\ufe6f" +
    "\265\ufe6f\266\ufe6f\304\ufe6f\312\ufe6f\347\ufe6f\363\ufe6f\364" +
    "\ufe6f\373\ufe6f\u0105\ufe6f\u0106\ufe6f\u0109\ufe6f\u010d\ufe6f\u0119\ufe6f" +
    "\u011b\ufe6f\u0125\ufe6f\u0131\ufe6f\u0133\ufe6f\u0134\ufe6f\u0138\ufe6f\u013d" +
    "\ufe6f\u013f\ufe6f\u0140\ufe6f\u0148\ufe6f\u0149\ufe6f\u014a\ufe6f\u014b\ufe6f" +
    "\u014e\ufe6f\u0152\ufe6f\u0153\ufe6f\u0158\ufe6f\u0159\ufe6f\u015e\ufe6f\u0161" +
    "\ufe6f\001\002\000\030\023\ufe77\072\ufe77\250\ufe77\252\ufe77" +
    "\u0106\ufe77\u013d\ufe77\u013f\ufe77\u0140\ufe77\u0158\ufe77\u015e\ufe77\u0161" +
    "\ufe77\001\002\000\030\023\uff4f\072\uff4f\250\uff4f\252\uff4f" +
    "\u0106\uff4f\u013d\uff4f\u013f\uff4f\u0140\uff4f\u0158\uff4f\u015e\uff4f\u0161" +
    "\uff4f\001\002\000\030\023\ufe78\072\ufe78\250\ufe78\252\ufe78" +
    "\u0106\ufe78\u013d\ufe78\u013f\ufe78\u0140\ufe78\u0158\ufe78\u015e\ufe78\u0161" +
    "\ufe78\001\002\000\176\002\ufe6e\016\ufe6e\017\ufe6e\023\ufe6e" +
    "\026\ufe6e\040\ufe6e\041\ufe6e\043\ufe6e\054\ufe6e\070\ufe6e\072" +
    "\ufe6e\100\ufe6e\105\ufe6e\120\ufe6e\134\ufe6e\135\ufe6e\164\ufe6e" +
    "\172\ufe6e\175\ufe6e\176\ufe6e\203\ufe6e\223\ufe6e\231\ufe6e\235" +
    "\ufe6e\244\ufe6e\250\ufe6e\252\ufe6e\256\ufe6e\260\ufe6e\265\ufe6e" +
    "\266\ufe6e\304\ufe6e\312\ufe6e\347\ufe6e\363\ufe6e\364\ufe6e\373" +
    "\ufe6e\u0105\ufe6e\u0106\ufe6e\u0109\ufe6e\u010d\ufe6e\u0119\ufe6e\u011b\ufe6e" +
    "\u0125\ufe6e\u0131\ufe6e\u0133\ufe6e\u0134\ufe6e\u0138\ufe6e\u013d\ufe6e\u013f" +
    "\ufe6e\u0140\ufe6e\u0148\ufe6e\u0149\ufe6e\u014a\ufe6e\u014b\ufe6e\u014e\ufe6e" +
    "\u0152\ufe6e\u0153\ufe6e\u0158\ufe6e\u0159\ufe6e\u015e\ufe6e\u0161\ufe6e\001" +
    "\002\000\030\023\ufe76\072\ufe76\250\ufe76\252\ufe76\u0106\ufe76" +
    "\u013d\ufe76\u013f\ufe76\u0140\ufe76\u0158\ufe76\u015e\ufe76\u0161\ufe76\001" +
    "\002\000\030\023\075\072\101\250\100\252\077\u0106\057" +
    "\u013d\063\u013f\060\u0140\156\u0158\061\u015e\065\u0161\160\001" +
    "\002\000\030\023\uff51\072\uff51\250\uff51\252\uff51\u0106\uff51" +
    "\u013d\uff51\u013f\uff51\u0140\uff51\u0158\uff51\u015e\uff51\u0161\uff51\001" +
    "\002\000\176\002\ufe70\016\ufe70\017\ufe70\023\ufe70\026\ufe70" +
    "\040\ufe70\041\ufe70\043\ufe70\054\ufe70\070\ufe70\072\ufe70\100" +
    "\ufe70\105\ufe70\120\ufe70\134\ufe70\135\ufe70\164\ufe70\172\ufe70" +
    "\175\ufe70\176\ufe70\203\ufe70\223\ufe70\231\ufe70\235\ufe70\244" +
    "\ufe70\250\ufe70\252\ufe70\256\ufe70\260\ufe70\265\ufe70\266\ufe70" +
    "\304\ufe70\312\ufe70\347\ufe70\363\ufe70\364\ufe70\373\ufe70\u0105" +
    "\ufe70\u0106\ufe70\u0109\ufe70\u010d\ufe70\u0119\ufe70\u011b\ufe70\u0125\ufe70" +
    "\u0131\ufe70\u0133\ufe70\u0134\ufe70\u0138\ufe70\u013d\ufe70\u013f\ufe70\u0140" +
    "\ufe70\u0148\ufe70\u0149\ufe70\u014a\ufe70\u014b\ufe70\u014e\ufe70\u0152\ufe70" +
    "\u0153\ufe70\u0158\ufe70\u0159\ufe70\u015e\ufe70\u0161\ufe70\001\002\000" +
    "\076\002\uff4c\016\uff4c\017\uff4c\026\uff4c\054\uff4c\120\uff4c" +
    "\134\uff4c\135\uff4c\164\uff4c\172\uff4c\175\uff4c\176\uff4c\203" +
    "\uff4c\223\uff4c\235\uff4c\304\uff4c\312\uff4c\u010d\uff4c\u0131\uff4c" +
    "\u0133\uff4c\u0134\uff4c\u0148\uff4c\u0149\uff4c\u014a\uff4c\u014b\uff4c\u014e" +
    "\uff4c\u0152\uff4c\u0153\uff4c\u0159\uff4c\u0161\uff4c\001\002\000\076" +
    "\002\uff4a\016\uff4a\017\uff4a\026\uff4a\054\uff4a\120\uff4a\134" +
    "\uff4a\135\uff4a\164\uff4a\172\uff4a\175\uff4a\176\uff4a\203\uff4a" +
    "\223\uff4a\235\uff4a\304\uff4a\312\uff4a\u010d\uff4a\u0131\uff4a\u0133" +
    "\uff4a\u0134\uff4a\u0148\uff4a\u0149\uff4a\u014a\uff4a\u014b\uff4a\u014e\uff4a" +
    "\u0152\uff4a\u0153\uff4a\u0159\uff4a\u0161\uff4a\001\002\000\076\002" +
    "\uff54\016\uff54\017\uff54\026\uff54\054\uff54\120\uff54\134\uff54" +
    "\135\uff54\164\uff54\172\uff54\175\uff54\176\uff54\203\uff54\223" +
    "\uff54\235\uff54\304\uff54\312\uff54\u010d\uff54\u0131\uff54\u0133\uff54" +
    "\u0134\uff54\u0148\uff54\u0149\uff54\u014a\uff54\u014b\uff54\u014e\uff54\u0152" +
    "\uff54\u0153\uff54\u0159\uff54\u0161\uff54\001\002\000\076\002\uff4b" +
    "\016\uff4b\017\uff4b\026\uff4b\054\uff4b\120\uff4b\134\uff4b\135" +
    "\uff4b\164\uff4b\172\uff4b\175\uff4b\176\uff4b\203\uff4b\223\uff4b" +
    "\235\uff4b\304\uff4b\312\uff4b\u010d\uff4b\u0131\uff4b\u0133\uff4b\u0134" +
    "\uff4b\u0148\uff4b\u0149\uff4b\u014a\uff4b\u014b\uff4b\u014e\uff4b\u0152\uff4b" +
    "\u0153\uff4b\u0159\uff4b\u0161\uff4b\001\002\000\032\010\164\023" +
    "\uff6a\072\uff6a\126\162\250\uff6a\252\uff6a\u0106\uff6a\u013d\uff6a" +
    "\u013f\uff6a\u0158\uff6a\u015e\uff6a\u0161\uff6a\001\002\000\026\023" +
    "\uff6b\072\uff6b\250\uff6b\252\uff6b\u0106\uff6b\u013d\uff6b\u013f\uff6b" +
    "\u0158\uff6b\u015e\uff6b\u0161\uff6b\001\002\000\004\u0159\174\001" +
    "\002\000\026\023\uff6c\072\uff6c\250\uff6c\252\uff6c\u0106\uff6c" +
    "\u013d\uff6c\u013f\uff6c\u0158\uff6c\u015e\uff6c\u0161\uff6c\001\002\000" +
    "\026\023\075\072\101\250\100\252\077\u0106\057\u013d\063" +
    "\u013f\060\u0158\061\u015e\065\u0161\170\001\002\000\004\u0159" +
    "\uff69\001\002\000\004\u0159\uff6d\001\002\000\006\u0154\172" +
    "\u0159\uff66\001\002\000\004\u0159\uff68\001\002\000\004\u0161" +
    "\173\001\002\000\004\u0159\uff67\001\002\000\150\002\uff72" +
    "\013\uff72\016\uff72\017\uff72\026\uff72\054\uff72\074\uff72\113" +
    "\uff72\120\uff72\134\uff72\135\uff72\140\uff72\164\uff72\166\uff72" +
    "\172\uff72\175\uff72\176\uff72\203\uff72\210\uff72\223\uff72\224" +
    "\uff72\226\uff72\231\uff72\235\uff72\251\uff72\303\uff72\304\uff72" +
    "\307\uff72\312\uff72\347\uff72\352\uff72\361\uff72\u010d\uff72\u012b" +
    "\uff72\u0131\uff72\u0133\uff72\u0134\uff72\u0143\uff72\u0144\uff72\u0145\uff72" +
    "\u0146\uff72\u0147\uff72\u0148\uff72\u0149\uff72\u014a\uff72\u014b\uff72\u014e" +
    "\uff72\u0152\uff72\u0153\uff72\u0159\uff72\u0161\uff72\001\002\000\022" +
    "\026\201\203\177\235\203\u0148\154\u0149\150\u014a\144\u014b" +
    "\137\u014e\140\001\002\000\076\002\uff49\016\uff49\017\uff49" +
    "\026\uff49\054\uff49\120\uff49\134\uff49\135\uff49\164\uff49\172" +
    "\uff49\175\uff49\176\uff49\203\uff49\223\uff49\235\uff49\304\uff49" +
    "\312\uff49\u010d\uff49\u0131\uff49\u0133\uff49\u0134\uff49\u0148\uff49\u0149" +
    "\uff49\u014a\uff49\u014b\uff49\u014e\uff49\u0152\uff49\u0153\uff49\u0159\uff49" +
    "\u0161\uff49\001\002\000\076\002\ufe6a\016\ufe6a\017\ufe6a\026" +
    "\ufe6a\054\ufe6a\120\ufe6a\134\ufe6a\135\ufe6a\164\ufe6a\172\ufe6a" +
    "\175\ufe6a\176\ufe6a\203\ufe6a\223\ufe6a\235\ufe6a\304\ufe6a\312" +
    "\ufe6a\u010d\ufe6a\u0131\ufe6a\u0133\ufe6a\u0134\ufe6a\u0148\ufe6a\u0149\ufe6a" +
    "\u014a\ufe6a\u014b\ufe6a\u014e\ufe6a\u0152\ufe6a\u0153\ufe6a\u0159\ufe6a\u0161" +
    "\ufe6a\001\002\000\076\002\uff52\016\uff52\017\uff52\026\uff52" +
    "\054\uff52\120\uff52\134\uff52\135\uff52\164\uff52\172\uff52\175" +
    "\uff52\176\uff52\203\uff52\223\uff52\235\uff52\304\uff52\312\uff52" +
    "\u010d\uff52\u0131\uff52\u0133\uff52\u0134\uff52\u0148\uff52\u0149\uff52\u014a" +
    "\uff52\u014b\uff52\u014e\uff52\u0152\uff52\u0153\uff52\u0159\uff52\u0161\uff52" +
    "\001\002\000\076\002\ufe6b\016\ufe6b\017\ufe6b\026\ufe6b\054" +
    "\ufe6b\120\ufe6b\134\ufe6b\135\ufe6b\164\ufe6b\172\ufe6b\175\ufe6b" +
    "\176\ufe6b\203\ufe6b\223\ufe6b\235\ufe6b\304\ufe6b\312\ufe6b\u010d" +
    "\ufe6b\u0131\ufe6b\u0133\ufe6b\u0134\ufe6b\u0148\ufe6b\u0149\ufe6b\u014a\ufe6b" +
    "\u014b\ufe6b\u014e\ufe6b\u0152\ufe6b\u0153\ufe6b\u0159\ufe6b\u0161\ufe6b\001" +
    "\002\000\076\002\uff48\016\uff48\017\uff48\026\uff48\054\uff48" +
    "\120\uff48\134\uff48\135\uff48\164\uff48\172\uff48\175\uff48\176" +
    "\uff48\203\uff48\223\uff48\235\uff48\304\uff48\312\uff48\u010d\uff48" +
    "\u0131\uff48\u0133\uff48\u0134\uff48\u0148\uff48\u0149\uff48\u014a\uff48\u014b" +
    "\uff48\u014e\uff48\u0152\uff48\u0153\uff48\u0159\uff48\u0161\uff48\001\002" +
    "\000\076\002\ufe69\016\ufe69\017\ufe69\026\ufe69\054\ufe69\120" +
    "\ufe69\134\ufe69\135\ufe69\164\ufe69\172\ufe69\175\ufe69\176\ufe69" +
    "\203\ufe69\223\ufe69\235\ufe69\304\ufe69\312\ufe69\u010d\ufe69\u0131" +
    "\ufe69\u0133\ufe69\u0134\ufe69\u0148\ufe69\u0149\ufe69\u014a\ufe69\u014b\ufe69" +
    "\u014e\ufe69\u0152\ufe69\u0153\ufe69\u0159\ufe69\u0161\ufe69\001\002\000" +
    "\006\u0140\072\u0161\067\001\002\000\076\002\uff53\016\uff53" +
    "\017\uff53\026\uff53\054\uff53\120\uff53\134\uff53\135\uff53\164" +
    "\uff53\172\uff53\175\uff53\176\uff53\203\uff53\223\uff53\235\uff53" +
    "\304\uff53\312\uff53\u010d\uff53\u0131\uff53\u0133\uff53\u0134\uff53\u0148" +
    "\uff53\u0149\uff53\u014a\uff53\u014b\uff53\u014e\uff53\u0152\uff53\u0153\uff53" +
    "\u0159\uff53\u0161\uff53\001\002\000\024\023\075\072\101\250" +
    "\100\252\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e\065" +
    "\001\002\000\024\023\075\072\101\250\100\252\077\u0106" +
    "\057\u013d\063\u013f\060\u0158\061\u015e\065\001\002\000\150" +
    "\002\uff47\013\uff47\016\uff47\017\uff47\026\uff47\054\uff47\074" +
    "\uff47\113\uff47\120\uff47\134\uff47\135\uff47\140\uff47\164\uff47" +
    "\166\uff47\172\uff47\175\uff47\176\uff47\203\uff47\210\uff47\223" +
    "\uff47\224\uff47\226\uff47\231\uff47\235\uff47\251\uff47\303\uff47" +
    "\304\uff47\307\uff47\312\uff47\347\uff47\352\uff47\361\uff47\u010d" +
    "\uff47\u012b\uff47\u0131\uff47\u0133\uff47\u0134\uff47\u0143\uff47\u0144\uff47" +
    "\u0145\uff47\u0146\uff47\u0147\uff47\u0148\uff47\u0149\uff47\u014a\uff47\u014b" +
    "\uff47\u014e\uff47\u0152\uff47\u0153\uff47\u0159\uff47\u0161\uff47\001\002" +
    "\000\150\002\uff44\013\uff44\016\uff44\017\uff44\026\uff44\054" +
    "\uff44\074\uff44\113\uff44\120\uff44\134\uff44\135\uff44\140\uff44" +
    "\164\uff44\166\uff44\172\uff44\175\uff44\176\uff44\203\uff44\210" +
    "\uff44\223\uff44\224\uff44\226\uff44\231\uff44\235\uff44\251\uff44" +
    "\303\uff44\304\uff44\307\uff44\312\uff44\347\uff44\352\uff44\361" +
    "\uff44\u010d\uff44\u012b\uff44\u0131\uff44\u0133\uff44\u0134\uff44\u0143\207" +
    "\u0144\206\u0145\uff44\u0146\uff44\u0147\uff44\u0148\uff44\u0149\uff44\u014a" +
    "\uff44\u014b\uff44\u014e\uff44\u0152\uff44\u0153\uff44\u0159\uff44\u0161\uff44" +
    "\001\002\000\150\002\uff46\013\uff46\016\uff46\017\uff46\026" +
    "\uff46\054\uff46\074\uff46\113\uff46\120\uff46\134\uff46\135\uff46" +
    "\140\uff46\164\uff46\166\uff46\172\uff46\175\uff46\176\uff46\203" +
    "\uff46\210\uff46\223\uff46\224\uff46\226\uff46\231\uff46\235\uff46" +
    "\251\uff46\303\uff46\304\uff46\307\uff46\312\uff46\347\uff46\352" +
    "\uff46\361\uff46\u010d\uff46\u012b\uff46\u0131\uff46\u0133\uff46\u0134\uff46" +
    "\u0143\uff46\u0144\uff46\u0145\uff46\u0146\uff46\u0147\uff46\u0148\uff46\u0149" +
    "\uff46\u014a\uff46\u014b\uff46\u014e\uff46\u0152\uff46\u0153\uff46\u0159\uff46" +
    "\u0161\uff46\001\002\000\150\002\uff44\013\uff44\016\uff44\017" +
    "\uff44\026\uff44\054\uff44\074\uff44\113\uff44\120\uff44\134\uff44" +
    "\135\uff44\140\uff44\164\uff44\166\uff44\172\uff44\175\uff44\176" +
    "\uff44\203\uff44\210\uff44\223\uff44\224\uff44\226\uff44\231\uff44" +
    "\235\uff44\251\uff44\303\uff44\304\uff44\307\uff44\312\uff44\347" +
    "\uff44\352\uff44\361\uff44\u010d\uff44\u012b\uff44\u0131\uff44\u0133\uff44" +
    "\u0134\uff44\u0143\207\u0144\206\u0145\uff44\u0146\uff44\u0147\uff44\u0148" +
    "\uff44\u0149\uff44\u014a\uff44\u014b\uff44\u014e\uff44\u0152\uff44\u0153\uff44" +
    "\u0159\uff44\u0161\uff44\001\002\000\150\002\uff45\013\uff45\016" +
    "\uff45\017\uff45\026\uff45\054\uff45\074\uff45\113\uff45\120\uff45" +
    "\134\uff45\135\uff45\140\uff45\164\uff45\166\uff45\172\uff45\175" +
    "\uff45\176\uff45\203\uff45\210\uff45\223\uff45\224\uff45\226\uff45" +
    "\231\uff45\235\uff45\251\uff45\303\uff45\304\uff45\307\uff45\312" +
    "\uff45\347\uff45\352\uff45\361\uff45\u010d\uff45\u012b\uff45\u0131\uff45" +
    "\u0133\uff45\u0134\uff45\u0143\uff45\u0144\uff45\u0145\uff45\u0146\uff45\u0147" +
    "\uff45\u0148\uff45\u0149\uff45\u014a\uff45\u014b\uff45\u014e\uff45\u0152\uff45" +
    "\u0153\uff45\u0159\uff45\u0161\uff45\001\002\000\150\002\uff3c\013" +
    "\uff3c\016\uff3c\017\uff3c\026\uff3c\054\uff3c\074\uff3c\113\uff3c" +
    "\120\uff3c\134\uff3c\135\uff3c\140\uff3c\164\uff3c\166\uff3c\172" +
    "\uff3c\175\uff3c\176\uff3c\203\uff3c\210\uff3c\223\uff3c\224\uff3c" +
    "\226\uff3c\231\uff3c\235\uff3c\251\uff3c\303\uff3c\304\uff3c\307" +
    "\uff3c\312\uff3c\347\uff3c\352\uff3c\361\uff3c\u010d\uff3c\u012b\uff3c" +
    "\u0131\uff3c\u0133\uff3c\u0134\uff3c\u0143\uff3c\u0144\uff3c\u0145\uff3c\u0146" +
    "\uff3c\u0147\uff3c\u0148\uff3c\u0149\uff3c\u014a\uff3c\u014b\uff3c\u014e\uff3c" +
    "\u0152\uff3c\u0153\uff3c\u0159\uff3c\u0161\uff3c\001\002\000\150\002" +
    "\uff43\013\uff43\016\uff43\017\uff43\026\uff43\054\uff43\074\uff43" +
    "\113\uff43\120\uff43\134\uff43\135\uff43\140\uff43\164\uff43\166" +
    "\uff43\172\uff43\175\uff43\176\uff43\203\uff43\210\uff43\223\uff43" +
    "\224\uff43\226\uff43\231\uff43\235\uff43\251\uff43\303\uff43\304" +
    "\uff43\307\uff43\312\uff43\347\uff43\352\uff43\361\uff43\u010d\uff43" +
    "\u012b\uff43\u0131\uff43\u0133\uff43\u0134\uff43\u0143\uff43\u0144\uff43\u0145" +
    "\uff43\u0146\uff43\u0147\uff43\u0148\uff43\u0149\uff43\u014a\uff43\u014b\uff43" +
    "\u014e\uff43\u0152\uff43\u0153\uff43\u0159\uff43\u0161\uff43\001\002\000" +
    "\024\023\075\072\101\250\100\252\077\u0106\057\u013d\063" +
    "\u013f\060\u0158\061\u015e\065\001\002\000\024\023\075\072" +
    "\101\250\100\252\077\u0106\057\u013d\063\u013f\060\u0158\061" +
    "\u015e\065\001\002\000\150\002\uff40\013\uff40\016\uff40\017" +
    "\uff40\026\uff40\054\uff40\074\uff40\113\uff40\120\uff40\134\uff40" +
    "\135\uff40\140\uff40\164\uff40\166\uff40\172\uff40\175\uff40\176" +
    "\uff40\203\uff40\210\uff40\223\uff40\224\uff40\226\uff40\231\uff40" +
    "\235\uff40\251\uff40\303\uff40\304\uff40\307\uff40\312\uff40\347" +
    "\uff40\352\uff40\361\uff40\u010d\uff40\u012b\uff40\u0131\uff40\u0133\uff40" +
    "\u0134\uff40\u0143\uff40\u0144\uff40\u0145\217\u0146\220\u0147\uff40\u0148" +
    "\uff40\u0149\uff40\u014a\uff40\u014b\uff40\u014e\uff40\u0152\uff40\u0153\uff40" +
    "\u0159\uff40\u0161\uff40\001\002\000\150\002\uff41\013\uff41\016" +
    "\uff41\017\uff41\026\uff41\054\uff41\074\uff41\113\uff41\120\uff41" +
    "\134\uff41\135\uff41\140\uff41\164\uff41\166\uff41\172\uff41\175" +
    "\uff41\176\uff41\203\uff41\210\uff41\223\uff41\224\uff41\226\uff41" +
    "\231\uff41\235\uff41\251\uff41\303\uff41\304\uff41\307\uff41\312" +
    "\uff41\347\uff41\352\uff41\361\uff41\u010d\uff41\u012b\uff41\u0131\uff41" +
    "\u0133\uff41\u0134\uff41\u0143\uff41\u0144\uff41\u0145\uff41\u0146\uff41\u0147" +
    "\uff41\u0148\uff41\u0149\uff41\u014a\uff41\u014b\uff41\u014e\uff41\u0152\uff41" +
    "\u0153\uff41\u0159\uff41\u0161\uff41\001\002\000\150\002\uff40\013" +
    "\uff40\016\uff40\017\uff40\026\uff40\054\uff40\074\uff40\113\uff40" +
    "\120\uff40\134\uff40\135\uff40\140\uff40\164\uff40\166\uff40\172" +
    "\uff40\175\uff40\176\uff40\203\uff40\210\uff40\223\uff40\224\uff40" +
    "\226\uff40\231\uff40\235\uff40\251\uff40\303\uff40\304\uff40\307" +
    "\uff40\312\uff40\347\uff40\352\uff40\361\uff40\u010d\uff40\u012b\uff40" +
    "\u0131\uff40\u0133\uff40\u0134\uff40\u0143\uff40\u0144\uff40\u0145\217\u0146" +
    "\220\u0147\uff40\u0148\uff40\u0149\uff40\u014a\uff40\u014b\uff40\u014e\uff40" +
    "\u0152\uff40\u0153\uff40\u0159\uff40\u0161\uff40\001\002\000\150\002" +
    "\uff42\013\uff42\016\uff42\017\uff42\026\uff42\054\uff42\074\uff42" +
    "\113\uff42\120\uff42\134\uff42\135\uff42\140\uff42\164\uff42\166" +
    "\uff42\172\uff42\175\uff42\176\uff42\203\uff42\210\uff42\223\uff42" +
    "\224\uff42\226\uff42\231\uff42\235\uff42\251\uff42\303\uff42\304" +
    "\uff42\307\uff42\312\uff42\347\uff42\352\uff42\361\uff42\u010d\uff42" +
    "\u012b\uff42\u0131\uff42\u0133\uff42\u0134\uff42\u0143\uff42\u0144\uff42\u0145" +
    "\uff42\u0146\uff42\u0147\uff42\u0148\uff42\u0149\uff42\u014a\uff42\u014b\uff42" +
    "\u014e\uff42\u0152\uff42\u0153\uff42\u0159\uff42\u0161\uff42\001\002\000" +
    "\004\u0159\226\001\002\000\150\002\uff3f\013\uff3f\016\uff3f" +
    "\017\uff3f\026\uff3f\054\uff3f\074\uff3f\113\uff3f\120\uff3f\134" +
    "\uff3f\135\uff3f\140\uff3f\164\uff3f\166\uff3f\172\uff3f\175\uff3f" +
    "\176\uff3f\203\uff3f\210\uff3f\223\uff3f\224\uff3f\226\uff3f\231" +
    "\uff3f\235\uff3f\251\uff3f\303\uff3f\304\uff3f\307\uff3f\312\uff3f" +
    "\347\uff3f\352\uff3f\361\uff3f\u010d\uff3f\u012b\uff3f\u0131\uff3f\u0133" +
    "\uff3f\u0134\uff3f\u0143\uff3f\u0144\uff3f\u0145\uff3f\u0146\uff3f\u0147\uff3f" +
    "\u0148\uff3f\u0149\uff3f\u014a\uff3f\u014b\uff3f\u014e\uff3f\u0152\uff3f\u0153" +
    "\uff3f\u0159\uff3f\u0161\uff3f\001\002\000\032\010\122\023\uff59" +
    "\072\uff59\126\121\250\uff59\252\uff59\u0106\uff59\u013d\uff59\u013f" +
    "\uff59\u0158\uff59\u015e\uff59\u0161\uff59\001\002\000\004\u0159\231" +
    "\001\002\000\150\002\uff6e\013\uff6e\016\uff6e\017\uff6e\026" +
    "\uff6e\054\uff6e\074\uff6e\113\uff6e\120\uff6e\134\uff6e\135\uff6e" +
    "\140\uff6e\164\uff6e\166\uff6e\172\uff6e\175\uff6e\176\uff6e\203" +
    "\uff6e\210\uff6e\223\uff6e\224\uff6e\226\uff6e\231\uff6e\235\uff6e" +
    "\251\uff6e\303\uff6e\304\uff6e\307\uff6e\312\uff6e\347\uff6e\352" +
    "\uff6e\361\uff6e\u010d\uff6e\u012b\uff6e\u0131\uff6e\u0133\uff6e\u0134\uff6e" +
    "\u0143\uff6e\u0144\uff6e\u0145\uff6e\u0146\uff6e\u0147\uff6e\u0148\uff6e\u0149" +
    "\uff6e\u014a\uff6e\u014b\uff6e\u014e\uff6e\u0152\uff6e\u0153\uff6e\u0159\uff6e" +
    "\u0161\uff6e\001\002\000\016\164\ufe39\172\ufe39\312\ufe39\u0133" +
    "\ufe39\u0152\ufe39\u0153\ufe39\001\002\000\036\023\075\072\101" +
    "\113\237\250\100\251\062\252\077\253\240\u0106\057\u013d" +
    "\063\u013f\060\u0140\072\u0158\061\u015e\065\u0161\067\001\002" +
    "\000\016\164\ufe37\172\ufe37\312\ufe37\u0133\ufe37\u0152\ufe37\u0153" +
    "\ufe37\001\002\000\016\164\ufe36\172\ufe36\312\ufe36\u0133\ufe36" +
    "\u0152\ufe36\u0153\ufe36\001\002\000\042\164\ufe35\172\ufe35\312" +
    "\ufe35\u0133\ufe35\u0143\142\u0144\143\u0145\147\u0146\145\u0147\151" +
    "\u0148\154\u0149\150\u014a\144\u014b\137\u014e\140\u0152\ufe35\u0153" +
    "\ufe35\001\002\000\016\164\ufe34\172\ufe34\312\ufe34\u0133\ufe34" +
    "\u0152\ufe34\u0153\ufe34\001\002\000\016\164\ufe33\172\ufe33\312" +
    "\ufe33\u0133\ufe33\u0152\ufe33\u0153\ufe33\001\002\000\006\172\ufe30" +
    "\u0152\ufe30\001\002\000\006\172\ufe3a\u0152\ufe3a\001\002\000" +
    "\104\023\uff76\040\uff76\041\uff76\043\uff76\065\uff76\070\uff76" +
    "\072\uff76\100\uff76\105\uff76\161\uff76\231\uff76\244\uff76\246" +
    "\301\250\uff76\251\300\252\uff76\256\uff76\260\uff76\265\uff76" +
    "\266\uff76\347\uff76\363\uff76\364\uff76\373\uff76\u0105\uff76\u0106" +
    "\uff76\u0109\uff76\u0119\uff76\u011b\uff76\u0125\uff76\u0138\uff76\u0158\305" +
    "\u0161\uff76\001\002\000\026\023\075\072\101\250\100\252" +
    "\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e\065\u0161\u022f" +
    "\001\002\000\006\u015e\054\u0161\034\001\002\000\012\164" +
    "\247\172\ufe2a\u0133\243\u0152\ufe2a\001\002\000\014\273\253" +
    "\276\255\u0158\257\u015e\260\u0161\034\001\002\000\006\172" +
    "\ufe2c\u0152\ufe2c\001\002\000\006\172\ufe2e\u0152\ufe2e\001\002" +
    "\000\046\002\ufe9d\016\u020d\074\ufe9d\166\ufe9d\172\ufe9d\175" +
    "\ufe9d\176\ufe9d\210\ufe9d\226\ufe9d\231\ufe9d\270\ufe9d\304\ufe9d" +
    "\347\ufe9d\u0133\ufe9d\u0134\ufe9d\u0152\ufe9d\u0153\ufe9d\u0161\u020e\001" +
    "\002\000\004\u0158\u0224\001\002\000\050\002\ufe9d\016\u020d" +
    "\074\ufe9d\166\ufe9d\172\ufe9d\175\ufe9d\176\ufe9d\210\ufe9d\226" +
    "\ufe9d\231\ufe9d\270\ufe9d\304\ufe9d\347\ufe9d\u0110\ufe9d\u0133\ufe9d" +
    "\u0134\ufe9d\u0152\ufe9d\u0153\ufe9d\u0161\u020e\001\002\000\004\u0158" +
    "\u0214\001\002\000\010\172\ufe2a\u0133\243\u0152\ufe2a\001\002" +
    "\000\004\226\u0211\001\002\000\004\u0161\u020c\001\002\000" +
    "\040\002\ufe96\074\265\166\264\172\ufe96\175\ufe96\176\ufe96" +
    "\210\271\226\262\231\263\304\ufe96\347\266\u0133\ufe96\u0134" +
    "\ufe96\u0152\ufe96\u0153\ufe96\001\002\000\004\226\ufe8a\001\002" +
    "\000\006\226\u0204\305\u0205\001\002\000\006\226\u0204\305" +
    "\u0205\001\002\000\004\226\u0208\001\002\000\006\226\u0204" +
    "\305\u0205\001\002\000\004\226\ufe8e\001\002\000\004\226" +
    "\u0203\001\002\000\004\226\ufe8f\001\002\000\024\002\ufe9a" +
    "\172\ufe9a\175\ufe9a\176\ufe9a\304\ufe9a\u0133\ufe9a\u0134\ufe9a\u0152" +
    "\ufe9a\u0153\ufe9a\001\002\000\012\273\253\276\255\u015e\260" +
    "\u0161\034\001\002\000\024\002\ufe98\172\ufe98\175\ufe98\176" +
    "\ufe98\304\ufe98\u0133\ufe98\u0134\ufe98\u0152\ufe98\u0153\ufe98\001\002" +
    "\000\004\270\276\001\002\000\104\023\uff76\040\uff76\041" +
    "\uff76\043\uff76\065\uff76\070\uff76\072\uff76\100\uff76\105\uff76" +
    "\161\uff76\231\uff76\244\uff76\246\301\250\uff76\251\300\252" +
    "\uff76\256\uff76\260\uff76\265\uff76\266\uff76\347\uff76\363\uff76" +
    "\364\uff76\373\uff76\u0105\uff76\u0106\uff76\u0109\uff76\u0119\uff76\u011b" +
    "\uff76\u0125\uff76\u0138\uff76\u0158\305\u0161\uff76\001\002\000\076" +
    "\023\075\040\321\041\312\043\315\065\344\070\324\072" +
    "\101\100\350\105\355\161\325\231\340\244\322\250\100" +
    "\252\077\256\351\260\320\265\346\266\333\347\353\363" +
    "\341\364\356\373\313\u0105\314\u0106\057\u0109\337\u0119\334" +
    "\u011b\331\u0125\354\u0138\336\u0161\347\001\002\000\076\023" +
    "\uff77\040\uff77\041\uff77\043\uff77\065\uff77\070\uff77\072\uff77" +
    "\100\uff77\105\uff77\161\uff77\231\uff77\244\uff77\250\uff77\252" +
    "\uff77\256\uff77\260\uff77\265\uff77\266\uff77\347\uff77\363\uff77" +
    "\364\uff77\373\uff77\u0105\uff77\u0106\uff77\u0109\uff77\u0119\uff77\u011b" +
    "\uff77\u0125\uff77\u0138\uff77\u0161\uff77\001\002\000\004\u0158\u01ef" +
    "\001\002\000\044\002\uffa1\013\uffa1\074\uffa1\166\uffa1\172" +
    "\uffa1\175\uffa1\176\uffa1\210\uffa1\226\uffa1\231\uffa1\304\uffa1" +
    "\347\uffa1\u0133\uffa1\u0134\uffa1\u0152\uffa1\u0153\uffa1\u0159\uffa1\001" +
    "\002\000\044\002\uff9f\013\u01ec\074\uff9f\166\uff9f\172\uff9f" +
    "\175\uff9f\176\uff9f\210\uff9f\226\uff9f\231\uff9f\304\uff9f\347" +
    "\uff9f\u0133\uff9f\u0134\uff9f\u0152\uff9f\u0153\uff9f\u0159\uff9f\001\002" +
    "\000\040\002\ufe91\074\u01e5\166\264\172\ufe91\175\ufe91\176" +
    "\ufe91\210\271\226\262\231\263\304\ufe91\347\266\u0133\ufe91" +
    "\u0134\ufe91\u0152\ufe91\u0153\ufe91\001\002\000\102\023\uff76\040" +
    "\uff76\041\uff76\043\uff76\065\uff76\070\uff76\072\uff76\100\uff76" +
    "\105\uff76\161\uff76\231\uff76\244\uff76\250\uff76\251\300\252" +
    "\uff76\256\uff76\260\uff76\265\uff76\266\uff76\347\uff76\363\uff76" +
    "\364\uff76\373\uff76\u0105\uff76\u0106\uff76\u0109\uff76\u0119\uff76\u011b" +
    "\uff76\u0125\uff76\u0138\uff76\u0158\305\u0161\uff76\001\002\000\004" +
    "\u0159\307\001\002\000\046\002\uff7c\013\uff7c\074\uff7c\166" +
    "\uff7c\172\uff7c\175\uff7c\176\uff7c\210\uff7c\226\uff7c\231\uff7c" +
    "\303\311\304\uff7c\347\uff7c\u0133\uff7c\u0134\uff7c\u0152\uff7c\u0153" +
    "\uff7c\u0159\uff7c\001\002\000\044\002\uff7e\013\uff7e\074\uff7e" +
    "\166\uff7e\172\uff7e\175\uff7e\176\uff7e\210\uff7e\226\uff7e\231" +
    "\uff7e\304\uff7e\347\uff7e\u0133\uff7e\u0134\uff7e\u0152\uff7e\u0153\uff7e" +
    "\u0159\uff7e\001\002\000\102\023\075\040\321\041\312\043" +
    "\315\065\344\070\324\072\101\100\350\105\355\161\325" +
    "\231\340\244\322\250\100\251\327\252\077\256\351\260" +
    "\320\265\346\266\333\347\353\363\341\364\356\373\313" +
    "\u0105\314\u0106\057\u0109\337\u0119\334\u011b\331\u0125\354\u0138" +
    "\336\u0158\335\u0161\347\001\002\000\004\u0158\u01de\001\002" +
    "\000\004\u0158\u01db\001\002\000\004\u0158\u01d4\001\002\000" +
    "\004\u0158\u01d1\001\002\000\044\002\uff7a\013\uff7a\074\uff7a" +
    "\166\uff7a\172\uff7a\175\uff7a\176\uff7a\210\uff7a\226\uff7a\231" +
    "\uff7a\304\uff7a\347\uff7a\u0133\uff7a\u0134\uff7a\u0152\uff7a\u0153\uff7a" +
    "\u0159\uff7a\001\002\000\044\002\uff7d\013\uff7d\074\uff7d\166" +
    "\uff7d\172\uff7d\175\uff7d\176\uff7d\210\uff7d\226\uff7d\231\uff7d" +
    "\304\uff7d\347\uff7d\u0133\uff7d\u0134\uff7d\u0152\uff7d\u0153\uff7d\u0159" +
    "\uff7d\001\002\000\004\u0158\u01ce\001\002\000\034\023\075" +
    "\072\101\250\100\251\062\252\077\u0106\057\u0131\u01c0\u013d" +
    "\063\u013f\060\u0140\072\u0158\061\u015e\065\u0161\067\001\002" +
    "\000\004\u0158\u01bd\001\002\000\074\002\uff96\013\uff96\026" +
    "\uff96\074\uff96\140\uff96\166\uff96\172\uff96\175\uff96\176\uff96" +
    "\203\uff96\210\uff96\224\uff96\226\uff96\231\uff96\235\uff96\251" +
    "\uff96\303\uff96\304\uff96\347\uff96\u0133\uff96\u0134\uff96\u0148\uff96" +
    "\u0149\uff96\u014a\uff96\u014b\uff96\u014e\uff96\u0152\uff96\u0153\uff96\u0159" +
    "\uff96\001\002\000\004\u0158\u018a\001\002\000\004\u0158\u0182" +
    "\001\002\000\074\002\uff99\013\uff99\026\uff99\074\uff99\140" +
    "\uff99\166\uff99\172\uff99\175\uff99\176\uff99\203\uff99\210\uff99" +
    "\224\uff99\226\uff99\231\uff99\235\uff99\251\uff99\303\uff99\304" +
    "\uff99\347\uff99\u0133\uff99\u0134\uff99\u0148\uff99\u0149\uff99\u014a\uff99" +
    "\u014b\uff99\u014e\uff99\u0152\uff99\u0153\uff99\u0159\uff99\001\002\000" +
    "\100\023\075\040\321\041\312\043\315\065\344\070\324" +
    "\072\101\100\350\105\355\161\325\231\340\244\322\250" +
    "\100\252\077\256\351\260\320\265\346\266\333\347\353" +
    "\363\341\364\356\373\313\u0105\314\u0106\057\u0109\337\u0119" +
    "\334\u011b\331\u0125\354\u0138\336\u0158\335\u0161\347\001\002" +
    "\000\074\002\uff9a\013\uff9a\026\uff9a\074\uff9a\140\uff9a\166" +
    "\uff9a\172\uff9a\175\uff9a\176\uff9a\203\uff9a\210\uff9a\224\uff9a" +
    "\226\uff9a\231\uff9a\235\uff9a\251\uff9a\303\uff9a\304\uff9a\347" +
    "\uff9a\u0133\uff9a\u0134\uff9a\u0148\uff9a\u0149\uff9a\u014a\uff9a\u014b\uff9a" +
    "\u014e\uff9a\u0152\uff9a\u0153\uff9a\u0159\uff9a\001\002\000\004\u0158" +
    "\u017b\001\002\000\026\026\u015c\203\u015a\224\u015f\235\u015e" +
    "\251\u015d\u0148\154\u0149\150\u014a\144\u014b\137\u014e\140\001" +
    "\002\000\004\u012a\u012a\001\002\000\004\u0158\u0123\001\002" +
    "\000\102\023\uff76\040\uff76\041\uff76\043\uff76\065\uff76\070" +
    "\uff76\072\uff76\100\uff76\105\uff76\161\uff76\231\uff76\244\uff76" +
    "\250\uff76\251\300\252\uff76\256\uff76\260\uff76\265\uff76\266" +
    "\uff76\347\uff76\363\uff76\364\uff76\373\uff76\u0105\uff76\u0106\uff76" +
    "\u0109\uff76\u0119\uff76\u011b\uff76\u0125\uff76\u0138\uff76\u0158\305\u0161" +
    "\uff76\001\002\000\004\u0158\u011d\001\002\000\074\002\ufe62" +
    "\013\ufe62\026\ufe62\074\ufe62\140\ufe62\166\ufe62\172\ufe62\175" +
    "\ufe62\176\ufe62\203\ufe62\210\ufe62\224\ufe62\226\ufe62\231\ufe62" +
    "\235\ufe62\251\ufe62\303\ufe62\304\ufe62\347\ufe62\u0133\ufe62\u0134" +
    "\ufe62\u0148\ufe62\u0149\ufe62\u014a\ufe62\u014b\ufe62\u014e\ufe62\u0152\ufe62" +
    "\u0153\ufe62\u0159\ufe62\001\002\000\004\u0158\u0118\001\002\000" +
    "\074\002\ufe61\013\ufe61\026\ufe61\074\ufe61\140\ufe61\166\ufe61" +
    "\172\ufe61\175\ufe61\176\ufe61\203\ufe61\210\ufe61\224\ufe61\226" +
    "\ufe61\231\ufe61\235\ufe61\251\ufe61\303\ufe61\304\ufe61\347\ufe61" +
    "\u0133\ufe61\u0134\ufe61\u0148\ufe61\u0149\ufe61\u014a\ufe61\u014b\ufe61\u014e" +
    "\ufe61\u0152\ufe61\u0153\ufe61\u0159\ufe61\001\002\000\074\002\uff98" +
    "\013\uff98\026\uff98\074\uff98\140\uff98\166\uff98\172\uff98\175" +
    "\uff98\176\uff98\203\uff98\210\uff98\224\uff98\226\uff98\231\uff98" +
    "\235\uff98\251\uff98\303\uff98\304\uff98\347\uff98\u0133\uff98\u0134" +
    "\uff98\u0148\uff98\u0149\uff98\u014a\uff98\u014b\uff98\u014e\uff98\u0152\uff98" +
    "\u0153\uff98\u0159\uff98\001\002\000\046\002\uff7c\013\uff7c\074" +
    "\uff7c\166\uff7c\172\uff7c\175\uff7c\176\uff7c\210\uff7c\226\uff7c" +
    "\231\uff7c\303\311\304\uff7c\347\uff7c\u0133\uff7c\u0134\uff7c\u0152" +
    "\uff7c\u0153\uff7c\u0159\uff7c\001\002\000\004\u0158\u010f\001\002" +
    "\000\074\002\uff94\013\uff94\026\uff94\074\uff94\140\uff94\166" +
    "\uff94\172\uff94\175\uff94\176\uff94\203\uff94\210\uff94\224\uff94" +
    "\226\uff94\231\uff94\235\uff94\251\uff94\303\uff94\304\uff94\347" +
    "\uff94\u0133\uff94\u0134\uff94\u0148\uff94\u0149\uff94\u014a\uff94\u014b\uff94" +
    "\u014e\uff94\u0152\uff94\u0153\uff94\u0159\uff94\001\002\000\004\u0158" +
    "\u010c\001\002\000\076\002\uffef\013\uffef\026\uffef\074\uffef" +
    "\140\uffef\166\uffef\172\uffef\175\uffef\176\uffef\203\uffef\210" +
    "\uffef\224\uffef\226\uffef\231\uffef\235\uffef\251\uffef\303\uffef" +
    "\304\uffef\347\uffef\u0133\uffef\u0134\uffef\u0148\uffef\u0149\uffef\u014a" +
    "\uffef\u014b\uffef\u014e\uffef\u0152\uffef\u0153\uffef\u0154\036\u0159\uffef" +
    "\001\002\000\112\002\ufe4b\013\ufe4b\016\ufe4b\017\ufe4b\026" +
    "\ufe4b\054\ufe4b\074\ufe4b\120\ufe4b\140\ufe4b\164\ufe4b\166\ufe4b" +
    "\172\ufe4b\175\ufe4b\176\ufe4b\203\ufe4b\210\ufe4b\223\ufe4b\224" +
    "\ufe4b\226\ufe4b\231\ufe4b\235\ufe4b\251\ufe4b\303\ufe4b\304\ufe4b" +
    "\347\ufe4b\u0133\ufe4b\u0134\ufe4b\u0148\ufe4b\u0149\ufe4b\u014a\ufe4b\u014b" +
    "\ufe4b\u014e\ufe4b\u0152\ufe4b\u0153\ufe4b\u0159\ufe4b\u0161\ufe4b\001\002" +
    "\000\004\u0158\u0107\001\002\000\074\002\uff97\013\uff97\026" +
    "\uff97\074\uff97\140\uff97\166\uff97\172\uff97\175\uff97\176\uff97" +
    "\203\uff97\210\uff97\224\uff97\226\uff97\231\uff97\235\uff97\251" +
    "\uff97\303\uff97\304\uff97\347\uff97\u0133\uff97\u0134\uff97\u0148\uff97" +
    "\u0149\uff97\u014a\uff97\u014b\uff97\u014e\uff97\u0152\uff97\u0153\uff97\u0159" +
    "\uff97\001\002\000\004\u0158\u0102\001\002\000\004\u0158\373" +
    "\001\002\000\004\u0158\365\001\002\000\004\232\360\001" +
    "\002\000\074\002\uff95\013\uff95\026\uff95\074\uff95\140\uff95" +
    "\166\uff95\172\uff95\175\uff95\176\uff95\203\uff95\210\uff95\224" +
    "\uff95\226\uff95\231\uff95\235\uff95\251\uff95\303\uff95\304\uff95" +
    "\347\uff95\u0133\uff95\u0134\uff95\u0148\uff95\u0149\uff95\u014a\uff95\u014b" +
    "\uff95\u014e\uff95\u0152\uff95\u0153\uff95\u0159\uff95\001\002\000\006" +
    "\u015e\362\u0161\361\001\002\000\112\002\ufe43\013\ufe43\016" +
    "\ufe43\017\ufe43\026\ufe43\054\ufe43\074\ufe43\120\ufe43\140\ufe43" +
    "\164\ufe43\166\ufe43\172\ufe43\175\ufe43\176\ufe43\203\ufe43\210" +
    "\ufe43\223\ufe43\224\ufe43\226\ufe43\231\ufe43\235\ufe43\251\ufe43" +
    "\303\ufe43\304\ufe43\347\ufe43\u0133\ufe43\u0134\ufe43\u0148\ufe43\u0149" +
    "\ufe43\u014a\ufe43\u014b\ufe43\u014e\ufe43\u0152\ufe43\u0153\ufe43\u0159\ufe43" +
    "\u0161\ufe43\001\002\000\004\u0161\364\001\002\000\112\002" +
    "\ufe47\013\ufe47\016\ufe47\017\ufe47\026\ufe47\054\ufe47\074\ufe47" +
    "\120\ufe47\140\ufe47\164\ufe47\166\ufe47\172\ufe47\175\ufe47\176" +
    "\ufe47\203\ufe47\210\ufe47\223\ufe47\224\ufe47\226\ufe47\231\ufe47" +
    "\235\ufe47\251\ufe47\303\ufe47\304\ufe47\347\ufe47\u0133\ufe47\u0134" +
    "\ufe47\u0148\ufe47\u0149\ufe47\u014a\ufe47\u014b\ufe47\u014e\ufe47\u0152\ufe47" +
    "\u0153\ufe47\u0159\ufe47\u0161\ufe47\001\002\000\112\002\ufe44\013" +
    "\ufe44\016\ufe44\017\ufe44\026\ufe44\054\ufe44\074\ufe44\120\ufe44" +
    "\140\ufe44\164\ufe44\166\ufe44\172\ufe44\175\ufe44\176\ufe44\203" +
    "\ufe44\210\ufe44\223\ufe44\224\ufe44\226\ufe44\231\ufe44\235\ufe44" +
    "\251\ufe44\303\ufe44\304\ufe44\347\ufe44\u0133\ufe44\u0134\ufe44\u0148" +
    "\ufe44\u0149\ufe44\u014a\ufe44\u014b\ufe44\u014e\ufe44\u0152\ufe44\u0153\ufe44" +
    "\u0159\ufe44\u0161\ufe44\001\002\000\006\u0140\367\u015e\366\001" +
    "\002\000\004\u0161\372\001\002\000\004\u0159\ufe46\001\002" +
    "\000\004\u0159\371\001\002\000\112\002\ufe4a\013\ufe4a\016" +
    "\ufe4a\017\ufe4a\026\ufe4a\054\ufe4a\074\ufe4a\120\ufe4a\140\ufe4a" +
    "\164\ufe4a\166\ufe4a\172\ufe4a\175\ufe4a\176\ufe4a\203\ufe4a\210" +
    "\ufe4a\223\ufe4a\224\ufe4a\226\ufe4a\231\ufe4a\235\ufe4a\251\ufe4a" +
    "\303\ufe4a\304\ufe4a\347\ufe4a\u0133\ufe4a\u0134\ufe4a\u0148\ufe4a\u0149" +
    "\ufe4a\u014a\ufe4a\u014b\ufe4a\u014e\ufe4a\u0152\ufe4a\u0153\ufe4a\u0159\ufe4a" +
    "\u0161\ufe4a\001\002\000\004\u0159\ufe45\001\002\000\010\u0140" +
    "\377\u015e\375\u0161\374\001\002\000\010\164\ufe4e\u0153\ufe4e" +
    "\u0159\ufe4e\001\002\000\004\u0161\u0101\001\002\000\004\u0159" +
    "\u0100\001\002\000\010\164\ufe4f\u0153\ufe4f\u0159\ufe4f\001\002" +
    "\000\112\002\ufe58\013\ufe58\016\ufe58\017\ufe58\026\ufe58\054" +
    "\ufe58\074\ufe58\120\ufe58\140\ufe58\164\ufe58\166\ufe58\172\ufe58" +
    "\175\ufe58\176\ufe58\203\ufe58\210\ufe58\223\ufe58\224\ufe58\226" +
    "\ufe58\231\ufe58\235\ufe58\251\ufe58\303\ufe58\304\ufe58\347\ufe58" +
    "\u0133\ufe58\u0134\ufe58\u0148\ufe58\u0149\ufe58\u014a\ufe58\u014b\ufe58\u014e" +
    "\ufe58\u0152\ufe58\u0153\ufe58\u0159\ufe58\u0161\ufe58\001\002\000\010" +
    "\164\ufe50\u0153\ufe50\u0159\ufe50\001\002\000\010\u0140\377\u015e" +
    "\375\u0161\374\001\002\000\004\u0153\u0104\001\002\000\024" +
    "\023\075\072\101\250\100\252\077\u0106\057\u013d\063\u013f" +
    "\060\u0158\061\u015e\065\001\002\000\004\u0159\u0106\001\002" +
    "\000\112\002\ufe53\013\ufe53\016\ufe53\017\ufe53\026\ufe53\054" +
    "\ufe53\074\ufe53\120\ufe53\140\ufe53\164\ufe53\166\ufe53\172\ufe53" +
    "\175\ufe53\176\ufe53\203\ufe53\210\ufe53\223\ufe53\224\ufe53\226" +
    "\ufe53\231\ufe53\235\ufe53\251\ufe53\303\ufe53\304\ufe53\347\ufe53" +
    "\u0133\ufe53\u0134\ufe53\u0148\ufe53\u0149\ufe53\u014a\ufe53\u014b\ufe53\u014e" +
    "\ufe53\u0152\ufe53\u0153\ufe53\u0159\ufe53\u0161\ufe53\001\002\000\032" +
    "\023\075\072\101\250\100\251\062\252\077\u0106\057\u013d" +
    "\063\u013f\060\u0140\072\u0158\061\u015e\065\u0161\067\001\002" +
    "\000\004\u0153\u0109\001\002\000\032\023\075\072\101\250" +
    "\100\251\062\252\077\u0106\057\u013d\063\u013f\060\u0140\072" +
    "\u0158\061\u015e\065\u0161\067\001\002\000\004\u0159\u010b\001" +
    "\002\000\074\002\ufe60\013\ufe60\026\ufe60\074\ufe60\140\ufe60" +
    "\166\ufe60\172\ufe60\175\ufe60\176\ufe60\203\ufe60\210\ufe60\224" +
    "\ufe60\226\ufe60\231\ufe60\235\ufe60\251\ufe60\303\ufe60\304\ufe60" +
    "\347\ufe60\u0133\ufe60\u0134\ufe60\u0148\ufe60\u0149\ufe60\u014a\ufe60\u014b" +
    "\ufe60\u014e\ufe60\u0152\ufe60\u0153\ufe60\u0159\ufe60\001\002\000\024" +
    "\023\075\072\101\250\100\252\077\u0106\057\u013d\063\u013f" +
    "\060\u0158\061\u015e\065\001\002\000\004\u0159\u010e\001\002" +
    "\000\112\002\ufe54\013\ufe54\016\ufe54\017\ufe54\026\ufe54\054" +
    "\ufe54\074\ufe54\120\ufe54\140\ufe54\164\ufe54\166\ufe54\172\ufe54" +
    "\175\ufe54\176\ufe54\203\ufe54\210\ufe54\223\ufe54\224\ufe54\226" +
    "\ufe54\231\ufe54\235\ufe54\251\ufe54\303\ufe54\304\ufe54\347\ufe54" +
    "\u0133\ufe54\u0134\ufe54\u0148\ufe54\u0149\ufe54\u014a\ufe54\u014b\ufe54\u014e" +
    "\ufe54\u0152\ufe54\u0153\ufe54\u0159\ufe54\u0161\ufe54\001\002\000\006" +
    "\u0145\u0111\u0161\034\001\002\000\004\u0153\u0113\001\002\000" +
    "\004\u0153\uff84\001\002\000\004\u0153\uff83\001\002\000\104" +
    "\023\uff76\040\uff76\041\uff76\043\uff76\065\uff76\070\uff76\072" +
    "\uff76\100\uff76\105\uff76\161\uff76\231\uff76\244\uff76\246\301" +
    "\250\uff76\251\300\252\uff76\256\uff76\260\uff76\265\uff76\266" +
    "\uff76\347\uff76\363\uff76\364\uff76\373\uff76\u0105\uff76\u0106\uff76" +
    "\u0109\uff76\u0119\uff76\u011b\uff76\u0125\uff76\u0138\uff76\u0158\305\u0161" +
    "\uff76\001\002\000\004\u0159\u0116\001\002\000\004\u0159\uff82" +
    "\001\002\000\046\002\uff9d\013\uff9d\074\uff9d\166\uff9d\172" +
    "\uff9d\175\uff9d\176\uff9d\210\uff9d\226\uff9d\231\uff9d\303\uff9d" +
    "\304\uff9d\347\uff9d\u0133\uff9d\u0134\uff9d\u0152\uff9d\u0153\uff9d\u0159" +
    "\uff9d\001\002\000\044\002\uff79\013\uff79\074\uff79\166\uff79" +
    "\172\uff79\175\uff79\176\uff79\210\uff79\226\uff79\231\uff79\304" +
    "\uff79\347\uff79\u0133\uff79\u0134\uff79\u0152\uff79\u0153\uff79\u0159\uff79" +
    "\001\002\000\010\u0140\377\u015e\375\u0161\374\001\002\000" +
    "\004\u0153\u011a\001\002\000\024\023\075\072\101\250\100" +
    "\252\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e\065\001" +
    "\002\000\004\u0159\u011c\001\002\000\112\002\ufe56\013\ufe56" +
    "\016\ufe56\017\ufe56\026\ufe56\054\ufe56\074\ufe56\120\ufe56\140" +
    "\ufe56\164\ufe56\166\ufe56\172\ufe56\175\ufe56\176\ufe56\203\ufe56" +
    "\210\ufe56\223\ufe56\224\ufe56\226\ufe56\231\ufe56\235\ufe56\251" +
    "\ufe56\303\ufe56\304\ufe56\347\ufe56\u0133\ufe56\u0134\ufe56\u0148\ufe56" +
    "\u0149\ufe56\u014a\ufe56\u014b\ufe56\u014e\ufe56\u0152\ufe56\u0153\ufe56\u0159" +
    "\ufe56\u0161\ufe56\001\002\000\006\u0140\367\u015e\366\001\002" +
    "\000\004\u0159\u011f\001\002\000\112\002\ufe48\013\ufe48\016" +
    "\ufe48\017\ufe48\026\ufe48\054\ufe48\074\ufe48\120\ufe48\140\ufe48" +
    "\164\ufe48\166\ufe48\172\ufe48\175\ufe48\176\ufe48\203\ufe48\210" +
    "\ufe48\223\ufe48\224\ufe48\226\ufe48\231\ufe48\235\ufe48\251\ufe48" +
    "\303\ufe48\304\ufe48\347\ufe48\u0133\ufe48\u0134\ufe48\u0148\ufe48\u0149" +
    "\ufe48\u014a\ufe48\u014b\ufe48\u014e\ufe48\u0152\ufe48\u0153\ufe48\u0159\ufe48" +
    "\u0161\ufe48\001\002\000\004\u0159\u0121\001\002\000\046\002" +
    "\uff7c\013\uff7c\074\uff7c\166\uff7c\172\uff7c\175\uff7c\176\uff7c" +
    "\210\uff7c\226\uff7c\231\uff7c\303\311\304\uff7c\347\uff7c\u0133" +
    "\uff7c\u0134\uff7c\u0152\uff7c\u0153\uff7c\u0159\uff7c\001\002\000\044" +
    "\002\uff78\013\uff78\074\uff78\166\uff78\172\uff78\175\uff78\176" +
    "\uff78\210\uff78\226\uff78\231\uff78\304\uff78\347\uff78\u0133\uff78" +
    "\u0134\uff78\u0152\uff78\u0153\uff78\u0159\uff78\001\002\000\010\u0140" +
    "\377\u015e\375\u0161\374\001\002\000\004\u0153\u0125\001\002" +
    "\000\010\u0140\377\u015e\375\u0161\374\001\002\000\004\u0153" +
    "\u0127\001\002\000\010\u0140\377\u015e\375\u0161\374\001\002" +
    "\000\004\u0159\u0129\001\002\000\112\002\ufe59\013\ufe59\016" +
    "\ufe59\017\ufe59\026\ufe59\054\ufe59\074\ufe59\120\ufe59\140\ufe59" +
    "\164\ufe59\166\ufe59\172\ufe59\175\ufe59\176\ufe59\203\ufe59\210" +
    "\ufe59\223\ufe59\224\ufe59\226\ufe59\231\ufe59\235\ufe59\251\ufe59" +
    "\303\ufe59\304\ufe59\347\ufe59\u0133\ufe59\u0134\ufe59\u0148\ufe59\u0149" +
    "\ufe59\u014a\ufe59\u014b\ufe59\u014e\ufe59\u0152\ufe59\u0153\ufe59\u0159\ufe59" +
    "\u0161\ufe59\001\002\000\004\156\u012b\001\002\000\004\u0161" +
    "\034\001\002\000\004\306\u012e\001\002\000\074\002\ufe63" +
    "\013\ufe63\026\ufe63\074\ufe63\140\ufe63\166\ufe63\172\ufe63\175" +
    "\ufe63\176\ufe63\203\ufe63\210\ufe63\224\ufe63\226\ufe63\231\ufe63" +
    "\235\ufe63\251\ufe63\303\ufe63\304\ufe63\347\ufe63\u0133\ufe63\u0134" +
    "\ufe63\u0148\ufe63\u0149\ufe63\u014a\ufe63\u014b\ufe63\u014e\ufe63\u0152\ufe63" +
    "\u0153\ufe63\u0159\ufe63\001\002\000\004\304\u012f\001\002\000" +
    "\004\035\u0130\001\002\000\100\023\075\040\321\041\312" +
    "\043\315\070\324\072\101\100\350\105\355\231\340\244" +
    "\322\250\100\251\062\252\077\260\320\265\346\347\353" +
    "\364\356\373\313\u0105\314\u0106\057\u0119\334\u011b\331\u0125" +
    "\354\u0138\336\u013d\063\u013f\060\u0140\072\u0145\u013a\u0158\061" +
    "\u015e\065\u0161\u0137\001\002\000\042\002\ufeac\016\u013c\017" +
    "\ufeac\054\ufeac\120\ufeac\164\ufeac\172\ufeac\175\ufeac\176\ufeac" +
    "\223\ufeac\304\ufeac\u0133\ufeac\u0134\ufeac\u0152\ufeac\u0153\ufeac\u0161" +
    "\u013d\001\002\000\042\002\ufeac\016\u013c\017\ufeac\054\ufeac" +
    "\120\ufeac\164\ufeac\172\ufeac\175\ufeac\176\ufeac\223\ufeac\304" +
    "\ufeac\u0133\ufeac\u0134\ufeac\u0152\ufeac\u0153\ufeac\u0161\u013d\001\002" +
    "\000\042\002\ufeac\016\u013c\017\ufeac\054\ufeac\120\ufeac\164" +
    "\ufeac\172\ufeac\175\ufeac\176\ufeac\223\ufeac\304\ufeac\u0133\ufeac" +
    "\u0134\ufeac\u0152\ufeac\u0153\ufeac\u0161\u013d\001\002\000\036\002" +
    "\ufebc\017\ufebc\054\ufebc\120\ufebc\164\ufebc\172\ufebc\175\ufebc" +
    "\176\ufebc\223\ufebc\304\ufebc\u0133\ufebc\u0134\ufebc\u0152\ufebc\u0153" +
    "\ufebc\001\002\000\066\002\ufeac\016\u013c\017\ufeac\054\ufeac" +
    "\120\ufeac\164\ufeac\172\ufeac\175\ufeac\176\ufeac\223\ufeac\304" +
    "\ufeac\u0133\ufeac\u0134\ufeac\u0143\uff3b\u0144\uff3b\u0145\uff3b\u0146\uff3b" +
    "\u0147\uff3b\u0148\uff3b\u0149\uff3b\u014a\uff3b\u014b\uff3b\u014e\uff3b\u0152" +
    "\ufeac\u0153\ufeac\u0161\u013d\001\002\000\012\017\u014d\054\u014a" +
    "\120\u014b\u0153\u014c\001\002\000\044\002\ufeb1\017\ufeb1\054" +
    "\ufeb1\120\ufeb1\164\ufeb1\172\ufeb1\175\ufeb1\176\ufeb1\223\ufeb1" +
    "\304\ufeb1\u0133\ufeb1\u0134\ufeb1\u0143\uff4d\u014c\u0143\u0152\ufeb1\u0153" +
    "\ufeb1\u0154\u0142\001\002\000\074\002\ufe5b\013\ufe5b\026\ufe5b" +
    "\074\ufe5b\140\ufe5b\166\ufe5b\172\ufe5b\175\ufe5b\176\ufe5b\203" +
    "\ufe5b\210\ufe5b\224\ufe5b\226\ufe5b\231\ufe5b\235\ufe5b\251\ufe5b" +
    "\303\ufe5b\304\ufe5b\347\ufe5b\u0133\ufe5b\u0134\ufe5b\u0148\ufe5b\u0149" +
    "\ufe5b\u014a\ufe5b\u014b\ufe5b\u014e\ufe5b\u0152\ufe5b\u0153\ufe5b\u0159\ufe5b" +
    "\001\002\000\042\002\ufeac\016\u013c\017\ufeac\054\ufeac\120" +
    "\ufeac\164\ufeac\172\ufeac\175\ufeac\176\ufeac\223\ufeac\304\ufeac" +
    "\u0133\ufeac\u0134\ufeac\u0152\ufeac\u0153\ufeac\u0161\u013d\001\002\000" +
    "\036\002\ufebb\017\ufebb\054\ufebb\120\ufebb\164\ufebb\172\ufebb" +
    "\175\ufebb\176\ufebb\223\ufebb\304\ufebb\u0133\ufebb\u0134\ufebb\u0152" +
    "\ufebb\u0153\ufebb\001\002\000\042\002\ufeac\016\u013c\017\ufeac" +
    "\054\ufeac\120\ufeac\164\ufeac\172\ufeac\175\ufeac\176\ufeac\223" +
    "\ufeac\304\ufeac\u0133\ufeac\u0134\ufeac\u0152\ufeac\u0153\ufeac\u0161\u013d" +
    "\001\002\000\004\u0161\u013f\001\002\000\036\002\ufead\017" +
    "\ufead\054\ufead\120\ufead\164\ufead\172\ufead\175\ufead\176\ufead" +
    "\223\ufead\304\ufead\u0133\ufead\u0134\ufead\u0152\ufead\u0153\ufead\001" +
    "\002\000\036\002\ufeb5\017\ufeb5\054\ufeb5\120\ufeb5\164\ufeb5" +
    "\172\ufeb5\175\ufeb5\176\ufeb5\223\ufeb5\304\ufeb5\u0133\ufeb5\u0134" +
    "\ufeb5\u0152\ufeb5\u0153\ufeb5\001\002\000\036\002\ufeae\017\ufeae" +
    "\054\ufeae\120\ufeae\164\ufeae\172\ufeae\175\ufeae\176\ufeae\223" +
    "\ufeae\304\ufeae\u0133\ufeae\u0134\ufeae\u0152\ufeae\u0153\ufeae\001\002" +
    "\000\036\002\ufeb7\017\ufeb7\054\ufeb7\120\ufeb7\164\ufeb7\172" +
    "\ufeb7\175\ufeb7\176\ufeb7\223\ufeb7\304\ufeb7\u0133\ufeb7\u0134\ufeb7" +
    "\u0152\ufeb7\u0153\ufeb7\001\002\000\036\002\ufeba\017\ufeba\054" +
    "\ufeba\120\ufeba\164\ufeba\172\ufeba\175\ufeba\176\ufeba\223\ufeba" +
    "\304\ufeba\u0133\ufeba\u0134\ufeba\u0152\ufeba\u0153\ufeba\001\002\000" +
    "\006\u0145\u0147\u0161\u0148\001\002\000\032\023\075\072\101" +
    "\250\100\251\062\252\077\u0106\057\u013d\063\u013f\060\u0140" +
    "\072\u0158\061\u015e\065\u0161\067\001\002\000\036\002\ufeb2" +
    "\017\ufeb2\054\ufeb2\120\ufeb2\164\ufeb2\172\ufeb2\175\ufeb2\176" +
    "\ufeb2\223\ufeb2\304\ufeb2\u0133\ufeb2\u0134\ufeb2\u0152\ufeb2\u0153\ufeb2" +
    "\001\002\000\036\002\ufeab\017\ufeab\054\ufeab\120\ufeab\164" +
    "\ufeab\172\ufeab\175\ufeab\176\ufeab\223\ufeab\304\ufeab\u0133\ufeab" +
    "\u0134\ufeab\u0152\ufeab\u0153\ufeab\001\002\000\036\002\ufeb3\017" +
    "\ufeb3\054\ufeb3\120\ufeb3\164\ufeb3\172\ufeb3\175\ufeb3\176\ufeb3" +
    "\223\ufeb3\304\ufeb3\u0133\ufeb3\u0134\ufeb3\u0152\ufeb3\u0153\ufeb3\001" +
    "\002\000\036\002\ufeb0\017\ufeb0\054\ufeb0\120\ufeb0\164\ufeb0" +
    "\172\ufeb0\175\ufeb0\176\ufeb0\223\ufeb0\304\ufeb0\u0133\ufeb0\u0134" +
    "\ufeb0\u0152\ufeb0\u0153\ufeb0\001\002\000\042\002\ufeac\016\u013c" +
    "\017\ufeac\054\ufeac\120\ufeac\164\ufeac\172\ufeac\175\ufeac\176" +
    "\ufeac\223\ufeac\304\ufeac\u0133\ufeac\u0134\ufeac\u0152\ufeac\u0153\ufeac" +
    "\u0161\u013d\001\002\000\036\002\ufeaf\017\ufeaf\054\ufeaf\120" +
    "\ufeaf\164\ufeaf\172\ufeaf\175\ufeaf\176\ufeaf\223\ufeaf\304\ufeaf" +
    "\u0133\ufeaf\u0134\ufeaf\u0152\ufeaf\u0153\ufeaf\001\002\000\004\u0161" +
    "\u0153\001\002\000\074\002\ufea3\013\ufea3\026\ufea3\074\ufea3" +
    "\140\ufea3\166\ufea3\172\ufea3\175\ufea3\176\ufea3\203\ufea3\210" +
    "\ufea3\224\ufea3\226\ufea3\231\ufea3\235\ufea3\251\ufea3\303\ufea3" +
    "\304\ufea3\347\ufea3\u0133\ufea3\u0134\ufea3\u0148\ufea3\u0149\ufea3\u014a" +
    "\ufea3\u014b\ufea3\u014e\ufea3\u0152\ufea3\u0153\ufea3\u0159\ufea3\001\002" +
    "\000\100\023\075\040\321\041\312\043\315\070\324\072" +
    "\101\100\350\105\355\231\340\244\322\250\100\251\062" +
    "\252\077\260\320\265\346\347\353\364\356\373\313\u0105" +
    "\314\u0106\057\u0119\334\u011b\331\u0125\354\u0138\336\u013d\063" +
    "\u013f\060\u0140\072\u0145\u013a\u0158\061\u015e\065\u0161\u0137\001" +
    "\002\000\074\002\ufea4\013\ufea4\026\ufea4\074\ufea4\140\ufea4" +
    "\166\ufea4\172\ufea4\175\ufea4\176\ufea4\203\ufea4\210\ufea4\224" +
    "\ufea4\226\ufea4\231\ufea4\235\ufea4\251\ufea4\303\ufea4\304\ufea4" +
    "\347\ufea4\u0133\ufea4\u0134\ufea4\u0148\ufea4\u0149\ufea4\u014a\ufea4\u014b" +
    "\ufea4\u014e\ufea4\u0152\ufea4\u0153\ufea4\u0159\ufea4\001\002\000\074" +
    "\002\ufea6\013\ufea6\026\ufea6\074\ufea6\140\ufea6\166\ufea6\172" +
    "\ufea6\175\ufea6\176\ufea6\203\ufea6\210\ufea6\224\ufea6\226\ufea6" +
    "\231\ufea6\235\ufea6\251\ufea6\303\ufea6\304\ufea6\347\ufea6\u0133" +
    "\ufea6\u0134\ufea6\u0148\ufea6\u0149\ufea6\u014a\ufea6\u014b\ufea6\u014e\ufea6" +
    "\u0152\ufea6\u0153\ufea6\u0159\ufea6\001\002\000\074\002\ufea9\013" +
    "\ufea9\026\ufea9\074\ufea9\140\ufea9\166\ufea9\172\ufea9\175\ufea9" +
    "\176\ufea9\203\ufea9\210\ufea9\224\ufea9\226\ufea9\231\ufea9\235" +
    "\ufea9\251\ufea9\303\ufea9\304\ufea9\347\ufea9\u0133\ufea9\u0134\ufea9" +
    "\u0148\ufea9\u0149\ufea9\u014a\ufea9\u014b\ufea9\u014e\ufea9\u0152\ufea9\u0153" +
    "\ufea9\u0159\ufea9\001\002\000\074\002\ufeaa\013\ufeaa\026\ufeaa" +
    "\074\ufeaa\140\ufeaa\166\ufeaa\172\ufeaa\175\ufeaa\176\ufeaa\203" +
    "\ufeaa\210\ufeaa\224\ufeaa\226\ufeaa\231\ufeaa\235\ufeaa\251\ufeaa" +
    "\303\ufeaa\304\ufeaa\347\ufeaa\u0133\ufeaa\u0134\ufeaa\u0148\ufeaa\u0149" +
    "\ufeaa\u014a\ufeaa\u014b\ufeaa\u014e\ufeaa\u0152\ufeaa\u0153\ufeaa\u0159\ufeaa" +
    "\001\002\000\074\002\ufea8\013\ufea8\026\ufea8\074\ufea8\140" +
    "\ufea8\166\ufea8\172\ufea8\175\ufea8\176\ufea8\203\ufea8\210\ufea8" +
    "\224\ufea8\226\ufea8\231\ufea8\235\ufea8\251\ufea8\303\ufea8\304" +
    "\ufea8\347\ufea8\u0133\ufea8\u0134\ufea8\u0148\ufea8\u0149\ufea8\u014a\ufea8" +
    "\u014b\ufea8\u014e\ufea8\u0152\ufea8\u0153\ufea8\u0159\ufea8\001\002\000" +
    "\074\002\ufea7\013\ufea7\026\ufea7\074\ufea7\140\ufea7\166\ufea7" +
    "\172\ufea7\175\ufea7\176\ufea7\203\ufea7\210\ufea7\224\ufea7\226" +
    "\ufea7\231\ufea7\235\ufea7\251\ufea7\303\ufea7\304\ufea7\347\ufea7" +
    "\u0133\ufea7\u0134\ufea7\u0148\ufea7\u0149\ufea7\u014a\ufea7\u014b\ufea7\u014e" +
    "\ufea7\u0152\ufea7\u0153\ufea7\u0159\ufea7\001\002\000\006\017\u014d" +
    "\120\u014b\001\002\000\074\002\ufea5\013\ufea5\026\ufea5\074" +
    "\ufea5\140\ufea5\166\ufea5\172\ufea5\175\ufea5\176\ufea5\203\ufea5" +
    "\210\ufea5\224\ufea5\226\ufea5\231\ufea5\235\ufea5\251\ufea5\303" +
    "\ufea5\304\ufea5\347\ufea5\u0133\ufea5\u0134\ufea5\u0148\ufea5\u0149\ufea5" +
    "\u014a\ufea5\u014b\ufea5\u014e\ufea5\u0152\ufea5\u0153\ufea5\u0159\ufea5\001" +
    "\002\000\036\002\ufeb8\017\ufeb8\054\ufeb8\120\ufeb8\164\ufeb8" +
    "\172\ufeb8\175\ufeb8\176\ufeb8\223\ufeb8\304\ufeb8\u0133\ufeb8\u0134" +
    "\ufeb8\u0152\ufeb8\u0153\ufeb8\001\002\000\036\002\ufeb4\017\ufeb4" +
    "\054\ufeb4\120\ufeb4\164\ufeb4\172\ufeb4\175\ufeb4\176\ufeb4\223" +
    "\ufeb4\304\ufeb4\u0133\ufeb4\u0134\ufeb4\u0152\ufeb4\u0153\ufeb4\001\002" +
    "\000\036\002\ufeb6\017\ufeb6\054\ufeb6\120\ufeb6\164\ufeb6\172" +
    "\ufeb6\175\ufeb6\176\ufeb6\223\ufeb6\304\ufeb6\u0133\ufeb6\u0134\ufeb6" +
    "\u0152\ufeb6\u0153\ufeb6\001\002\000\036\002\ufeb9\017\ufeb9\054" +
    "\ufeb9\120\ufeb9\164\ufeb9\172\ufeb9\175\ufeb9\176\ufeb9\223\ufeb9" +
    "\304\ufeb9\u0133\ufeb9\u0134\ufeb9\u0152\ufeb9\u0153\ufeb9\001\002\000" +
    "\072\023\075\040\321\041\312\043\315\070\324\072\101" +
    "\100\350\105\355\231\340\244\322\250\100\252\077\256" +
    "\351\260\320\265\346\266\333\347\353\363\341\364\356" +
    "\373\313\u0105\314\u0106\057\u0109\337\u0119\334\u011b\331\u0125" +
    "\354\u0138\336\u0161\347\001\002\000\072\023\075\040\321" +
    "\041\312\043\315\070\324\072\101\100\350\105\355\231" +
    "\340\244\322\250\100\252\077\256\351\260\320\265\346" +
    "\266\333\347\353\363\341\364\356\373\313\u0105\314\u0106" +
    "\057\u0109\337\u0119\334\u011b\331\u0125\354\u0138\336\u0161\347" +
    "\001\002\000\046\002\uff9e\013\uff9e\074\uff9e\166\uff9e\172" +
    "\uff9e\175\uff9e\176\uff9e\210\uff9e\226\uff9e\231\uff9e\303\uff9e" +
    "\304\uff9e\347\uff9e\u0133\uff9e\u0134\uff9e\u0152\uff9e\u0153\uff9e\u0159" +
    "\uff9e\001\002\000\072\023\075\040\321\041\312\043\315" +
    "\070\324\072\101\100\350\105\355\231\340\244\322\250" +
    "\100\252\077\256\351\260\320\265\346\266\333\347\353" +
    "\363\341\364\356\373\313\u0105\314\u0106\057\u0109\337\u0119" +
    "\334\u011b\331\u0125\354\u0138\336\u0161\347\001\002\000\010" +
    "\026\u0169\203\u0168\235\u0167\001\002\000\072\023\075\040" +
    "\321\041\312\043\315\070\324\072\101\100\350\105\355" +
    "\231\340\244\322\250\100\252\077\256\351\260\320\265" +
    "\346\266\333\347\353\363\341\364\356\373\313\u0105\314" +
    "\u0106\057\u0109\337\u0119\334\u011b\331\u0125\354\u0138\336\u0161" +
    "\347\001\002\000\006\251\u0160\253\uff89\001\002\000\004" +
    "\253\uff8a\001\002\000\004\253\u0162\001\002\000\046\002" +
    "\uff8f\013\uff8f\074\uff8f\166\uff8f\172\uff8f\175\uff8f\176\uff8f" +
    "\210\uff8f\226\uff8f\231\uff8f\303\uff8f\304\uff8f\347\uff8f\u0133" +
    "\uff8f\u0134\uff8f\u0152\uff8f\u0153\uff8f\u0159\uff8f\001\002\000\050" +
    "\002\uff85\013\uff85\074\uff85\140\u0165\166\uff85\172\uff85\175" +
    "\uff85\176\uff85\210\uff85\226\uff85\231\uff85\303\uff85\304\uff85" +
    "\347\uff85\u0133\uff85\u0134\uff85\u0152\uff85\u0153\uff85\u0159\uff85\001" +
    "\002\000\046\002\uff91\013\uff91\074\uff91\166\uff91\172\uff91" +
    "\175\uff91\176\uff91\210\uff91\226\uff91\231\uff91\303\uff91\304" +
    "\uff91\347\uff91\u0133\uff91\u0134\uff91\u0152\uff91\u0153\uff91\u0159\uff91" +
    "\001\002\000\004\u0140\u0166\001\002\000\046\002\uff86\013" +
    "\uff86\074\uff86\166\uff86\172\uff86\175\uff86\176\uff86\210\uff86" +
    "\226\uff86\231\uff86\303\uff86\304\uff86\347\uff86\u0133\uff86\u0134" +
    "\uff86\u0152\uff86\u0153\uff86\u0159\uff86\001\002\000\072\023\075" +
    "\040\321\041\312\043\315\070\324\072\101\100\350\105" +
    "\355\231\340\244\322\250\100\252\077\256\351\260\320" +
    "\265\346\266\333\347\353\363\341\364\356\373\313\u0105" +
    "\314\u0106\057\u0109\337\u0119\334\u011b\331\u0125\354\u0138\336" +
    "\u0161\347\001\002\000\072\023\075\040\321\041\312\043" +
    "\315\070\324\072\101\100\350\105\355\231\340\244\322" +
    "\250\100\252\077\256\351\260\320\265\346\266\333\347" +
    "\353\363\341\364\356\373\313\u0105\314\u0106\057\u0109\337" +
    "\u0119\334\u011b\331\u0125\354\u0138\336\u0161\347\001\002\000" +
    "\072\023\075\040\321\041\312\043\315\070\324\072\101" +
    "\100\350\105\355\231\340\244\322\250\100\252\077\256" +
    "\351\260\320\265\346\266\333\347\353\363\341\364\356" +
    "\373\313\u0105\314\u0106\057\u0109\337\u0119\334\u011b\331\u0125" +
    "\354\u0138\336\u0161\347\001\002\000\046\002\uff92\013\uff92" +
    "\074\uff92\166\uff92\172\uff92\175\uff92\176\uff92\210\uff92\226" +
    "\uff92\231\uff92\303\uff92\304\uff92\347\uff92\u0133\uff92\u0134\uff92" +
    "\u0152\uff92\u0153\uff92\u0159\uff92\001\002\000\004\013\u016c\001" +
    "\002\000\072\023\075\040\321\041\312\043\315\070\324" +
    "\072\101\100\350\105\355\231\340\244\322\250\100\252" +
    "\077\256\351\260\320\265\346\266\333\347\353\363\341" +
    "\364\356\373\313\u0105\314\u0106\057\u0109\337\u0119\334\u011b" +
    "\331\u0125\354\u0138\336\u0161\347\001\002\000\046\002\uff8c" +
    "\013\uff8c\074\uff8c\166\uff8c\172\uff8c\175\uff8c\176\uff8c\210" +
    "\uff8c\226\uff8c\231\uff8c\303\uff8c\304\uff8c\347\uff8c\u0133\uff8c" +
    "\u0134\uff8c\u0152\uff8c\u0153\uff8c\u0159\uff8c\001\002\000\046\002" +
    "\uff87\013\uff87\074\uff87\166\uff87\172\uff87\175\uff87\176\uff87" +
    "\210\uff87\226\uff87\231\uff87\303\uff87\304\uff87\347\uff87\u0133" +
    "\uff87\u0134\uff87\u0152\uff87\u0153\u016f\u0159\uff87\001\002\000\072" +
    "\023\075\040\321\041\312\043\315\070\324\072\101\100" +
    "\350\105\355\231\340\244\322\250\100\252\077\256\351" +
    "\260\320\265\346\266\333\347\353\363\341\364\356\373" +
    "\313\u0105\314\u0106\057\u0109\337\u0119\334\u011b\331\u0125\354" +
    "\u0138\336\u0161\347\001\002\000\046\002\uff8b\013\uff8b\074" +
    "\uff8b\166\uff8b\172\uff8b\175\uff8b\176\uff8b\210\uff8b\226\uff8b" +
    "\231\uff8b\303\uff8b\304\uff8b\347\uff8b\u0133\uff8b\u0134\uff8b\u0152" +
    "\uff8b\u0153\uff8b\u0159\uff8b\001\002\000\046\002\uff87\013\uff87" +
    "\074\uff87\166\uff87\172\uff87\175\uff87\176\uff87\210\uff87\226" +
    "\uff87\231\uff87\303\uff87\304\uff87\347\uff87\u0133\uff87\u0134\uff87" +
    "\u0152\uff87\u0153\u016f\u0159\uff87\001\002\000\046\002\uff88\013" +
    "\uff88\074\uff88\166\uff88\172\uff88\175\uff88\176\uff88\210\uff88" +
    "\226\uff88\231\uff88\303\uff88\304\uff88\347\uff88\u0133\uff88\u0134" +
    "\uff88\u0152\uff88\u0153\uff88\u0159\uff88\001\002\000\050\002\uff85" +
    "\013\uff85\074\uff85\140\u0165\166\uff85\172\uff85\175\uff85\176" +
    "\uff85\210\uff85\226\uff85\231\uff85\303\uff85\304\uff85\347\uff85" +
    "\u0133\uff85\u0134\uff85\u0152\uff85\u0153\uff85\u0159\uff85\001\002\000" +
    "\046\002\uff8d\013\uff8d\074\uff8d\166\uff8d\172\uff8d\175\uff8d" +
    "\176\uff8d\210\uff8d\226\uff8d\231\uff8d\303\uff8d\304\uff8d\347" +
    "\uff8d\u0133\uff8d\u0134\uff8d\u0152\uff8d\u0153\uff8d\u0159\uff8d\001\002" +
    "\000\004\013\u0176\001\002\000\072\023\075\040\321\041" +
    "\312\043\315\070\324\072\101\100\350\105\355\231\340" +
    "\244\322\250\100\252\077\256\351\260\320\265\346\266" +
    "\333\347\353\363\341\364\356\373\313\u0105\314\u0106\057" +
    "\u0109\337\u0119\334\u011b\331\u0125\354\u0138\336\u0161\347\001" +
    "\002\000\046\002\uff90\013\uff90\074\uff90\166\uff90\172\uff90" +
    "\175\uff90\176\uff90\210\uff90\226\uff90\231\uff90\303\uff90\304" +
    "\uff90\347\uff90\u0133\uff90\u0134\uff90\u0152\uff90\u0153\uff90\u0159\uff90" +
    "\001\002\000\046\002\uff87\013\uff87\074\uff87\166\uff87\172" +
    "\uff87\175\uff87\176\uff87\210\uff87\226\uff87\231\uff87\303\uff87" +
    "\304\uff87\347\uff87\u0133\uff87\u0134\uff87\u0152\uff87\u0153\u016f\u0159" +
    "\uff87\001\002\000\046\002\uff8e\013\uff8e\074\uff8e\166\uff8e" +
    "\172\uff8e\175\uff8e\176\uff8e\210\uff8e\226\uff8e\231\uff8e\303" +
    "\uff8e\304\uff8e\347\uff8e\u0133\uff8e\u0134\uff8e\u0152\uff8e\u0153\uff8e" +
    "\u0159\uff8e\001\002\000\046\002\uff93\013\uff93\074\uff93\166" +
    "\uff93\172\uff93\175\uff93\176\uff93\210\uff93\226\uff93\231\uff93" +
    "\303\uff93\304\uff93\347\uff93\u0133\uff93\u0134\uff93\u0152\uff93\u0153" +
    "\uff93\u0159\uff93\001\002\000\010\u0140\377\u015e\375\u0161\374" +
    "\001\002\000\006\164\u017d\u0159\ufe4c\001\002\000\010\u0140" +
    "\377\u015e\375\u0161\374\001\002\000\004\u0159\u017f\001\002" +
    "\000\112\002\ufe55\013\ufe55\016\ufe55\017\ufe55\026\ufe55\054" +
    "\ufe55\074\ufe55\120\ufe55\140\ufe55\164\ufe55\166\ufe55\172\ufe55" +
    "\175\ufe55\176\ufe55\203\ufe55\210\ufe55\223\ufe55\224\ufe55\226" +
    "\ufe55\231\ufe55\235\ufe55\251\ufe55\303\ufe55\304\ufe55\347\ufe55" +
    "\u0133\ufe55\u0134\ufe55\u0148\ufe55\u0149\ufe55\u014a\ufe55\u014b\ufe55\u014e" +
    "\ufe55\u0152\ufe55\u0153\ufe55\u0159\ufe55\u0161\ufe55\001\002\000\004" +
    "\u0159\ufe4d\001\002\000\044\002\uff7b\013\uff7b\074\uff7b\166" +
    "\uff7b\172\uff7b\175\uff7b\176\uff7b\210\uff7b\226\uff7b\231\uff7b" +
    "\304\uff7b\347\uff7b\u0133\uff7b\u0134\uff7b\u0152\uff7b\u0153\uff7b\u0159" +
    "\uff7b\001\002\000\006\u0145\u0111\u0161\034\001\002\000\004" +
    "\u0153\u0184\001\002\000\006\u0140\u0187\u015e\u0185\001\002\000" +
    "\004\u0161\u0189\001\002\000\004\u0159\u0188\001\002\000\004" +
    "\u0159\uff81\001\002\000\046\002\uff9c\013\uff9c\074\uff9c\166" +
    "\uff9c\172\uff9c\175\uff9c\176\uff9c\210\uff9c\226\uff9c\231\uff9c" +
    "\303\uff9c\304\uff9c\347\uff9c\u0133\uff9c\u0134\uff9c\u0152\uff9c\u0153" +
    "\uff9c\u0159\uff9c\001\002\000\004\u0159\uff80\001\002\000\036" +
    "\027\u0192\043\u019a\104\u018e\111\u018c\157\u019b\217\u018b\220" +
    "\u018d\265\u0191\274\u0190\340\u0197\367\u0195\u010e\u018f\u012c\u0193" +
    "\u0161\u0196\001\002\000\066\016\uff20\023\uff20\025\uff20\054" +
    "\uff20\063\uff20\072\uff20\113\uff20\156\uff20\201\uff20\250\uff20" +
    "\251\uff20\252\uff20\253\uff20\312\uff20\u0106\uff20\u012d\uff20\u0134" +
    "\uff20\u013d\uff20\u013f\uff20\u0140\uff20\u014c\uff20\u0153\uff20\u0158\u019d" +
    "\u0159\uff20\u015e\uff20\u0161\uff20\001\002\000\066\016\uff20\023" +
    "\uff20\025\uff20\054\uff20\063\uff20\072\uff20\113\uff20\156\uff20" +
    "\201\uff20\250\uff20\251\uff20\252\uff20\253\uff20\312\uff20\u0106" +
    "\uff20\u012d\uff20\u0134\uff20\u013d\uff20\u013f\uff20\u0140\uff20\u014c\uff20" +
    "\u0153\uff20\u0158\u019d\u0159\uff20\u015e\uff20\u0161\uff20\001\002\000" +
    "\066\016\uff20\023\uff20\025\uff20\054\uff20\063\uff20\072\uff20" +
    "\113\uff20\156\uff20\201\uff20\250\uff20\251\uff20\252\uff20\253" +
    "\uff20\312\uff20\u0106\uff20\u012d\uff20\u0134\uff20\u013d\uff20\u013f\uff20" +
    "\u0140\uff20\u014c\uff20\u0153\uff20\u0158\u019d\u0159\uff20\u015e\uff20\u0161" +
    "\uff20\001\002\000\066\016\uff20\023\uff20\025\uff20\054\uff20" +
    "\063\uff20\072\uff20\113\uff20\156\uff20\201\uff20\250\uff20\251" +
    "\uff20\252\uff20\253\uff20\312\uff20\u0106\uff20\u012d\uff20\u0134\uff20" +
    "\u013d\uff20\u013f\uff20\u0140\uff20\u014c\uff20\u0153\uff20\u0158\u019d\u0159" +
    "\uff20\u015e\uff20\u0161\uff20\001\002\000\066\016\uff20\023\uff20" +
    "\025\uff20\054\uff20\063\uff20\072\uff20\113\uff20\156\uff20\201" +
    "\uff20\250\uff20\251\uff20\252\uff20\253\uff20\312\uff20\u0106\uff20" +
    "\u012d\uff20\u0134\uff20\u013d\uff20\u013f\uff20\u0140\uff20\u014c\uff20\u0153" +
    "\uff20\u0158\u019d\u0159\uff20\u015e\uff20\u0161\uff20\001\002\000\066" +
    "\016\uff20\023\uff20\025\uff20\054\uff20\063\uff20\072\uff20\113" +
    "\uff20\156\uff20\201\uff20\250\uff20\251\uff20\252\uff20\253\uff20" +
    "\312\uff20\u0106\uff20\u012d\uff20\u0134\uff20\u013d\uff20\u013f\uff20\u0140" +
    "\uff20\u014c\uff20\u0153\uff20\u0158\u019d\u0159\uff20\u015e\uff20\u0161\uff20" +
    "\001\002\000\066\016\uff20\023\uff20\025\uff20\054\uff20\063" +
    "\uff20\072\uff20\113\uff20\156\uff20\201\uff20\250\uff20\251\uff20" +
    "\252\uff20\253\uff20\312\uff20\u0106\uff20\u012d\uff20\u0134\uff20\u013d" +
    "\uff20\u013f\uff20\u0140\uff20\u014c\uff20\u0153\uff20\u0158\u019d\u0159\uff20" +
    "\u015e\uff20\u0161\uff20\001\002\000\066\016\uff20\023\uff20\025" +
    "\uff20\054\uff20\063\uff20\072\uff20\113\uff20\156\uff20\201\uff20" +
    "\250\uff20\251\uff20\252\uff20\253\uff20\312\uff20\u0106\uff20\u012d" +
    "\uff20\u0134\uff20\u013d\uff20\u013f\uff20\u0140\uff20\u014c\uff20\u0153\uff20" +
    "\u0158\u019d\u0159\uff20\u015e\uff20\u0161\uff20\001\002\000\066\016" +
    "\uff20\023\uff20\025\uff20\054\uff20\063\uff20\072\uff20\113\uff20" +
    "\156\uff20\201\uff20\250\uff20\251\uff20\252\uff20\253\uff20\312" +
    "\uff20\u0106\uff20\u012d\uff20\u0134\uff20\u013d\uff20\u013f\uff20\u0140\uff20" +
    "\u014c\uff20\u0153\uff20\u0158\u019d\u0159\uff20\u015e\uff20\u0161\uff20\001" +
    "\002\000\112\002\uff39\013\uff39\016\uff39\017\uff39\026\uff39" +
    "\054\uff39\074\uff39\120\uff39\140\uff39\164\uff39\166\uff39\172" +
    "\uff39\175\uff39\176\uff39\203\uff39\210\uff39\223\uff39\224\uff39" +
    "\226\uff39\231\uff39\235\uff39\251\uff39\303\uff39\304\uff39\347" +
    "\uff39\u0133\uff39\u0134\uff39\u0148\uff39\u0149\uff39\u014a\uff39\u014b\uff39" +
    "\u014e\uff39\u0152\uff39\u0153\uff39\u0159\uff39\u0161\uff39\001\002\000" +
    "\066\016\uff20\023\uff20\025\uff20\054\uff20\063\uff20\072\uff20" +
    "\113\uff20\156\uff20\201\uff20\250\uff20\251\uff20\252\uff20\253" +
    "\uff20\312\uff20\u0106\uff20\u012d\uff20\u0134\uff20\u013d\uff20\u013f\uff20" +
    "\u0140\uff20\u014c\uff20\u0153\uff20\u0158\u019d\u0159\uff20\u015e\uff20\u0161" +
    "\uff20\001\002\000\004\u0154\u01b0\001\002\000\066\016\uff20" +
    "\023\uff20\025\uff20\054\uff20\063\uff20\072\uff20\113\uff20\156" +
    "\uff20\201\uff20\250\uff20\251\uff20\252\uff20\253\uff20\312\uff20" +
    "\u0106\uff20\u012d\uff20\u0134\uff20\u013d\uff20\u013f\uff20\u0140\uff20\u014c" +
    "\uff20\u0153\uff20\u0158\u019d\u0159\uff20\u015e\uff20\u0161\uff20\001\002" +
    "\000\032\023\uff35\072\uff35\250\uff35\251\uff35\252\uff35\u0106" +
    "\uff35\u013d\uff35\u013f\uff35\u0140\uff35\u0158\u01a6\u015e\uff35\u0161\uff35" +
    "\001\002\000\066\016\uff30\023\uff30\025\uff30\054\uff30\063" +
    "\uff30\072\uff30\113\uff30\156\uff30\201\uff30\250\uff30\251\uff30" +
    "\252\uff30\253\uff30\312\uff30\u0106\uff30\u012d\uff30\u0134\uff30\u013d" +
    "\uff30\u013f\uff30\u0140\uff30\u014c\uff30\u0153\uff30\u0158\uff30\u0159\uff30" +
    "\u015e\uff30\u0161\uff30\001\002\000\066\016\uff20\023\uff20\025" +
    "\uff20\054\uff20\063\uff20\072\uff20\113\uff20\156\uff20\201\uff20" +
    "\250\uff20\251\uff20\252\uff20\253\uff20\312\uff20\u0106\uff20\u012d" +
    "\uff20\u0134\uff20\u013d\uff20\u013f\uff20\u0140\uff20\u014c\uff20\u0153\uff20" +
    "\u0158\u019d\u0159\uff20\u015e\uff20\u0161\uff20\001\002\000\066\016" +
    "\uff20\023\uff20\025\uff20\054\uff20\063\uff20\072\uff20\113\uff20" +
    "\156\uff20\201\uff20\250\uff20\251\uff20\252\uff20\253\uff20\312" +
    "\uff20\u0106\uff20\u012d\uff20\u0134\uff20\u013d\uff20\u013f\uff20\u0140\uff20" +
    "\u014c\uff20\u0153\uff20\u0158\u019d\u0159\uff20\u015e\uff20\u0161\uff20\001" +
    "\002\000\066\016\uff2b\023\uff2b\025\uff2b\054\uff2b\063\uff2b" +
    "\072\uff2b\113\uff2b\156\uff2b\201\uff2b\250\uff2b\251\uff2b\252" +
    "\uff2b\253\uff2b\312\uff2b\u0106\uff2b\u012d\uff2b\u0134\uff2b\u013d\uff2b" +
    "\u013f\uff2b\u0140\uff2b\u014c\uff2b\u0153\uff2b\u0158\uff2b\u0159\uff2b\u015e" +
    "\uff2b\u0161\uff2b\001\002\000\004\u013d\u019e\001\002\000\006" +
    "\u0153\u01a0\u0159\u019f\001\002\000\066\016\uff1e\023\uff1e\025" +
    "\uff1e\054\uff1e\063\uff1e\072\uff1e\113\uff1e\156\uff1e\201\uff1e" +
    "\250\uff1e\251\uff1e\252\uff1e\253\uff1e\312\uff1e\u0106\uff1e\u012d" +
    "\uff1e\u0134\uff1e\u013d\uff1e\u013f\uff1e\u0140\uff1e\u014c\uff1e\u0153\uff1e" +
    "\u0158\uff1e\u0159\uff1e\u015e\uff1e\u0161\uff1e\001\002\000\004\u013d" +
    "\u01a2\001\002\000\066\016\uff21\023\uff21\025\uff21\054\uff21" +
    "\063\uff21\072\uff21\113\uff21\156\uff21\201\uff21\250\uff21\251" +
    "\uff21\252\uff21\253\uff21\312\uff21\u0106\uff21\u012d\uff21\u0134\uff21" +
    "\u013d\uff21\u013f\uff21\u0140\uff21\u014c\uff21\u0153\uff21\u0158\uff21\u0159" +
    "\uff21\u015e\uff21\u0161\uff21\001\002\000\004\u0159\u01a3\001\002" +
    "\000\066\016\uff1f\023\uff1f\025\uff1f\054\uff1f\063\uff1f\072" +
    "\uff1f\113\uff1f\156\uff1f\201\uff1f\250\uff1f\251\uff1f\252\uff1f" +
    "\253\uff1f\312\uff1f\u0106\uff1f\u012d\uff1f\u0134\uff1f\u013d\uff1f\u013f" +
    "\uff1f\u0140\uff1f\u014c\uff1f\u0153\uff1f\u0158\uff1f\u0159\uff1f\u015e\uff1f" +
    "\u0161\uff1f\001\002\000\066\016\uff23\023\uff23\025\uff23\054" +
    "\uff23\063\uff23\072\uff23\113\uff23\156\uff23\201\uff23\250\uff23" +
    "\251\uff23\252\uff23\253\uff23\312\uff23\u0106\uff23\u012d\uff23\u0134" +
    "\uff23\u013d\uff23\u013f\uff23\u0140\uff23\u014c\uff23\u0153\uff23\u0158\uff23" +
    "\u0159\uff23\u015e\uff23\u0161\uff23\001\002\000\032\023\075\072" +
    "\101\250\100\251\062\252\077\u0106\057\u013d\063\u013f\060" +
    "\u0140\072\u0158\061\u015e\065\u0161\067\001\002\000\004\u013d" +
    "\u01a7\001\002\000\004\u0159\u01a8\001\002\000\034\023\uff36" +
    "\072\uff36\250\uff36\251\uff36\252\uff36\u0106\uff36\u013d\uff36\u013f" +
    "\uff36\u0140\uff36\u0158\uff36\u0159\uff36\u015e\uff36\u0161\uff36\001\002" +
    "\000\112\002\uff37\013\uff37\016\uff37\017\uff37\026\uff37\054" +
    "\uff37\074\uff37\120\uff37\140\uff37\164\uff37\166\uff37\172\uff37" +
    "\175\uff37\176\uff37\203\uff37\210\uff37\223\uff37\224\uff37\226" +
    "\uff37\231\uff37\235\uff37\251\uff37\303\uff37\304\uff37\347\uff37" +
    "\u0133\uff37\u0134\uff37\u0148\uff37\u0149\uff37\u014a\uff37\u014b\uff37\u014e" +
    "\uff37\u0152\uff37\u0153\uff37\u0159\uff37\u0161\uff37\001\002\000\006" +
    "\u0153\u01ac\u0159\u01ab\001\002\000\112\002\uff32\013\uff32\016" +
    "\uff32\017\uff32\026\uff32\054\uff32\074\uff32\120\uff32\140\uff32" +
    "\164\uff32\166\uff32\172\uff32\175\uff32\176\uff32\203\uff32\210" +
    "\uff32\223\uff32\224\uff32\226\uff32\231\uff32\235\uff32\251\uff32" +
    "\303\uff32\304\uff32\347\uff32\u0133\uff32\u0134\uff32\u0148\uff32\u0149" +
    "\uff32\u014a\uff32\u014b\uff32\u014e\uff32\u0152\uff32\u0153\uff32\u0159\uff32" +
    "\u0161\uff32\001\002\000\024\023\075\072\101\250\100\252" +
    "\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e\065\001\002" +
    "\000\112\002\uff34\013\uff34\016\uff34\017\uff34\026\uff34\054" +
    "\uff34\074\uff34\120\uff34\140\uff34\164\uff34\166\uff34\172\uff34" +
    "\175\uff34\176\uff34\203\uff34\210\uff34\223\uff34\224\uff34\226" +
    "\uff34\231\uff34\235\uff34\251\uff34\303\uff34\304\uff34\347\uff34" +
    "\u0133\uff34\u0134\uff34\u0148\uff34\u0149\uff34\u014a\uff34\u014b\uff34\u014e" +
    "\uff34\u0152\uff34\u0153\uff34\u0159\uff34\u0161\uff34\001\002\000\112" +
    "\002\uff33\013\uff33\016\uff33\017\uff33\026\uff33\054\uff33\074" +
    "\uff33\120\uff33\140\uff33\164\uff33\166\uff33\172\uff33\175\uff33" +
    "\176\uff33\203\uff33\210\uff33\223\uff33\224\uff33\226\uff33\231" +
    "\uff33\235\uff33\251\uff33\303\uff33\304\uff33\347\uff33\u0133\uff33" +
    "\u0134\uff33\u0148\uff33\u0149\uff33\u014a\uff33\u014b\uff33\u014e\uff33\u0152" +
    "\uff33\u0153\uff33\u0159\uff33\u0161\uff33\001\002\000\066\016\uff28" +
    "\023\uff28\025\uff28\054\uff28\063\uff28\072\uff28\113\uff28\156" +
    "\uff28\201\uff28\250\uff28\251\uff28\252\uff28\253\uff28\312\uff28" +
    "\u0106\uff28\u012d\uff28\u0134\uff28\u013d\uff28\u013f\uff28\u0140\uff28\u014c" +
    "\uff28\u0153\uff28\u0158\uff28\u0159\uff28\u015e\uff28\u0161\uff28\001\002" +
    "\000\004\u0161\u01b2\001\002\000\066\016\uff31\023\uff31\025" +
    "\uff31\054\uff31\063\uff31\072\uff31\113\uff31\156\uff31\201\uff31" +
    "\250\uff31\251\uff31\252\uff31\253\uff31\312\uff31\u0106\uff31\u012d" +
    "\uff31\u0134\uff31\u013d\uff31\u013f\uff31\u0140\uff31\u014c\uff31\u0153\uff31" +
    "\u0158\uff31\u0159\uff31\u015e\uff31\u0161\uff31\001\002\000\066\016" +
    "\uff2f\023\uff2f\025\uff2f\054\uff2f\063\uff2f\072\uff2f\113\uff2f" +
    "\156\uff2f\201\uff2f\250\uff2f\251\uff2f\252\uff2f\253\uff2f\312" +
    "\uff2f\u0106\uff2f\u012d\uff2f\u0134\uff2f\u013d\uff2f\u013f\uff2f\u0140\uff2f" +
    "\u014c\uff2f\u0153\uff2f\u0158\uff2f\u0159\uff2f\u015e\uff2f\u0161\uff2f\001" +
    "\002\000\066\016\uff25\023\uff25\025\uff25\054\uff25\063\uff25" +
    "\072\uff25\113\uff25\156\uff25\201\uff25\250\uff25\251\uff25\252" +
    "\uff25\253\uff25\312\uff25\u0106\uff25\u012d\uff25\u0134\uff25\u013d\uff25" +
    "\u013f\uff25\u0140\uff25\u014c\uff25\u0153\uff25\u0158\uff25\u0159\uff25\u015e" +
    "\uff25\u0161\uff25\001\002\000\066\016\uff2a\023\uff2a\025\uff2a" +
    "\054\uff2a\063\uff2a\072\uff2a\113\uff2a\156\uff2a\201\uff2a\250" +
    "\uff2a\251\uff2a\252\uff2a\253\uff2a\312\uff2a\u0106\uff2a\u012d\uff2a" +
    "\u0134\uff2a\u013d\uff2a\u013f\uff2a\u0140\uff2a\u014c\uff2a\u0153\uff2a\u0158" +
    "\uff2a\u0159\uff2a\u015e\uff2a\u0161\uff2a\001\002\000\066\016\uff2e" +
    "\023\uff2e\025\uff2e\054\uff2e\063\uff2e\072\uff2e\113\uff2e\156" +
    "\uff2e\201\uff2e\250\uff2e\251\uff2e\252\uff2e\253\uff2e\312\uff2e" +
    "\u0106\uff2e\u012d\uff2e\u0134\uff2e\u013d\uff2e\u013f\uff2e\u0140\uff2e\u014c" +
    "\uff2e\u0153\uff2e\u0158\uff2e\u0159\uff2e\u015e\uff2e\u0161\uff2e\001\002" +
    "\000\066\016\uff22\023\uff22\025\uff22\054\uff22\063\uff22\072" +
    "\uff22\113\uff22\156\uff22\201\uff22\250\uff22\251\uff22\252\uff22" +
    "\253\uff22\312\uff22\u0106\uff22\u012d\uff22\u0134\uff22\u013d\uff22\u013f" +
    "\uff22\u0140\uff22\u014c\uff22\u0153\uff22\u0158\uff22\u0159\uff22\u015e\uff22" +
    "\u0161\uff22\001\002\000\066\016\uff26\023\uff26\025\uff26\054" +
    "\uff26\063\uff26\072\uff26\113\uff26\156\uff26\201\uff26\250\uff26" +
    "\251\uff26\252\uff26\253\uff26\312\uff26\u0106\uff26\u012d\uff26\u0134" +
    "\uff26\u013d\uff26\u013f\uff26\u0140\uff26\u014c\uff26\u0153\uff26\u0158\uff26" +
    "\u0159\uff26\u015e\uff26\u0161\uff26\001\002\000\066\016\uff24\023" +
    "\uff24\025\uff24\054\uff24\063\uff24\072\uff24\113\uff24\156\uff24" +
    "\201\uff24\250\uff24\251\uff24\252\uff24\253\uff24\312\uff24\u0106" +
    "\uff24\u012d\uff24\u0134\uff24\u013d\uff24\u013f\uff24\u0140\uff24\u014c\uff24" +
    "\u0153\uff24\u0158\uff24\u0159\uff24\u015e\uff24\u0161\uff24\001\002\000" +
    "\066\016\uff29\023\uff29\025\uff29\054\uff29\063\uff29\072\uff29" +
    "\113\uff29\156\uff29\201\uff29\250\uff29\251\uff29\252\uff29\253" +
    "\uff29\312\uff29\u0106\uff29\u012d\uff29\u0134\uff29\u013d\uff29\u013f\uff29" +
    "\u0140\uff29\u014c\uff29\u0153\uff29\u0158\uff29\u0159\uff29\u015e\uff29\u0161" +
    "\uff29\001\002\000\066\016\uff2c\023\uff2c\025\uff2c\054\uff2c" +
    "\063\uff2c\072\uff2c\113\uff2c\156\uff2c\201\uff2c\250\uff2c\251" +
    "\uff2c\252\uff2c\253\uff2c\312\uff2c\u0106\uff2c\u012d\uff2c\u0134\uff2c" +
    "\u013d\uff2c\u013f\uff2c\u0140\uff2c\u014c\uff2c\u0153\uff2c\u0158\uff2c\u0159" +
    "\uff2c\u015e\uff2c\u0161\uff2c\001\002\000\066\016\uff27\023\uff27" +
    "\025\uff27\054\uff27\063\uff27\072\uff27\113\uff27\156\uff27\201" +
    "\uff27\250\uff27\251\uff27\252\uff27\253\uff27\312\uff27\u0106\uff27" +
    "\u012d\uff27\u0134\uff27\u013d\uff27\u013f\uff27\u0140\uff27\u014c\uff27\u0153" +
    "\uff27\u0158\uff27\u0159\uff27\u015e\uff27\u0161\uff27\001\002\000\066" +
    "\016\uff2d\023\uff2d\025\uff2d\054\uff2d\063\uff2d\072\uff2d\113" +
    "\uff2d\156\uff2d\201\uff2d\250\uff2d\251\uff2d\252\uff2d\253\uff2d" +
    "\312\uff2d\u0106\uff2d\u012d\uff2d\u0134\uff2d\u013d\uff2d\u013f\uff2d\u0140" +
    "\uff2d\u014c\uff2d\u0153\uff2d\u0158\uff2d\u0159\uff2d\u015e\uff2d\u0161\uff2d" +
    "\001\002\000\010\u0140\377\u015e\375\u0161\374\001\002\000" +
    "\004\u0159\u01bf\001\002\000\112\002\ufe5a\013\ufe5a\016\ufe5a" +
    "\017\ufe5a\026\ufe5a\054\ufe5a\074\ufe5a\120\ufe5a\140\ufe5a\164" +
    "\ufe5a\166\ufe5a\172\ufe5a\175\ufe5a\176\ufe5a\203\ufe5a\210\ufe5a" +
    "\223\ufe5a\224\ufe5a\226\ufe5a\231\ufe5a\235\ufe5a\251\ufe5a\303" +
    "\ufe5a\304\ufe5a\347\ufe5a\u0133\ufe5a\u0134\ufe5a\u0148\ufe5a\u0149\ufe5a" +
    "\u014a\ufe5a\u014b\ufe5a\u014e\ufe5a\u0152\ufe5a\u0153\ufe5a\u0159\ufe5a\u0161" +
    "\ufe5a\001\002\000\032\023\075\072\101\250\100\251\062" +
    "\252\077\u0106\057\u013d\063\u013f\060\u0140\072\u0158\061\u015e" +
    "\065\u0161\067\001\002\000\004\u0131\u01c0\001\002\000\112" +
    "\002\ufe7e\013\ufe7e\016\ufe7e\017\ufe7e\026\ufe7e\054\ufe7e\074" +
    "\ufe7e\120\ufe7e\140\ufe7e\164\ufe7e\166\ufe7e\172\ufe7e\175\ufe7e" +
    "\176\ufe7e\203\ufe7e\210\ufe7e\223\ufe7e\224\ufe7e\226\ufe7e\231" +
    "\ufe7e\235\ufe7e\251\ufe7e\303\ufe7e\304\ufe7e\347\ufe7e\u0133\ufe7e" +
    "\u0134\ufe7e\u0148\ufe7e\u0149\ufe7e\u014a\ufe7e\u014b\ufe7e\u014e\ufe7e\u0152" +
    "\ufe7e\u0153\ufe7e\u0159\ufe7e\u0161\ufe7e\001\002\000\112\002\ufe80" +
    "\013\ufe80\016\ufe80\017\ufe80\026\ufe80\054\ufe80\074\ufe80\120" +
    "\ufe80\140\ufe80\164\ufe80\166\ufe80\172\ufe80\175\ufe80\176\ufe80" +
    "\203\ufe80\210\ufe80\223\ufe80\224\ufe80\226\ufe80\231\ufe80\235" +
    "\ufe80\251\ufe80\303\ufe80\304\ufe80\347\ufe80\u0133\ufe80\u0134\ufe80" +
    "\u0148\ufe80\u0149\ufe80\u014a\ufe80\u014b\ufe80\u014e\ufe80\u0152\ufe80\u0153" +
    "\ufe80\u0159\ufe80\u0161\ufe80\001\002\000\112\002\ufe7f\013\ufe7f" +
    "\016\ufe7f\017\ufe7f\026\ufe7f\054\ufe7f\074\ufe7f\120\ufe7f\140" +
    "\ufe7f\164\ufe7f\166\ufe7f\172\ufe7f\175\ufe7f\176\ufe7f\203\ufe7f" +
    "\210\ufe7f\223\ufe7f\224\ufe7f\226\ufe7f\231\ufe7f\235\ufe7f\251" +
    "\ufe7f\303\ufe7f\304\ufe7f\347\ufe7f\u0133\ufe7f\u0134\ufe7f\u0148\ufe7f" +
    "\u0149\ufe7f\u014a\ufe7f\u014b\ufe7f\u014e\ufe7f\u0152\ufe7f\u0153\ufe7f\u0159" +
    "\ufe7f\u0161\ufe7f\001\002\000\004\u010d\u01c6\001\002\000\032" +
    "\023\075\072\101\250\100\251\062\252\077\u0106\057\u013d" +
    "\063\u013f\060\u0140\072\u0158\061\u015e\065\u0161\067\001\002" +
    "\000\010\134\u01c8\135\u01ca\u0131\u01c0\001\002\000\032\023" +
    "\075\072\101\250\100\251\062\252\077\u0106\057\u013d\063" +
    "\u013f\060\u0140\072\u0158\061\u015e\065\u0161\067\001\002\000" +
    "\112\002\ufe7d\013\ufe7d\016\ufe7d\017\ufe7d\026\ufe7d\054\ufe7d" +
    "\074\ufe7d\120\ufe7d\140\ufe7d\164\ufe7d\166\ufe7d\172\ufe7d\175" +
    "\ufe7d\176\ufe7d\203\ufe7d\210\ufe7d\223\ufe7d\224\ufe7d\226\ufe7d" +
    "\231\ufe7d\235\ufe7d\251\ufe7d\303\ufe7d\304\ufe7d\347\ufe7d\u0133" +
    "\ufe7d\u0134\ufe7d\u0148\ufe7d\u0149\ufe7d\u014a\ufe7d\u014b\ufe7d\u014e\ufe7d" +
    "\u0152\ufe7d\u0153\ufe7d\u0159\ufe7d\u0161\ufe7d\001\002\000\112\002" +
    "\ufe7a\013\ufe7a\016\ufe7a\017\ufe7a\026\ufe7a\054\ufe7a\074\ufe7a" +
    "\120\ufe7a\140\ufe7a\164\ufe7a\166\ufe7a\172\ufe7a\175\ufe7a\176" +
    "\ufe7a\203\ufe7a\210\ufe7a\223\ufe7a\224\ufe7a\226\ufe7a\231\ufe7a" +
    "\235\ufe7a\251\ufe7a\303\ufe7a\304\ufe7a\347\ufe7a\u0133\ufe7a\u0134" +
    "\ufe7a\u0148\ufe7a\u0149\ufe7a\u014a\ufe7a\u014b\ufe7a\u014e\ufe7a\u0152\ufe7a" +
    "\u0153\ufe7a\u0159\ufe7a\u0161\ufe7a\001\002\000\112\002\ufe7b\013" +
    "\ufe7b\016\ufe7b\017\ufe7b\026\ufe7b\054\ufe7b\074\ufe7b\120\ufe7b" +
    "\140\ufe7b\164\ufe7b\166\ufe7b\172\ufe7b\175\ufe7b\176\ufe7b\203" +
    "\ufe7b\210\ufe7b\223\ufe7b\224\ufe7b\226\ufe7b\231\ufe7b\235\ufe7b" +
    "\251\ufe7b\303\ufe7b\304\ufe7b\347\ufe7b\u0133\ufe7b\u0134\ufe7b\u0148" +
    "\ufe7b\u0149\ufe7b\u014a\ufe7b\u014b\ufe7b\u014e\ufe7b\u0152\ufe7b\u0153\ufe7b" +
    "\u0159\ufe7b\u0161\ufe7b\001\002\000\004\135\u01cd\001\002\000" +
    "\112\002\ufe7c\013\ufe7c\016\ufe7c\017\ufe7c\026\ufe7c\054\ufe7c" +
    "\074\ufe7c\120\ufe7c\140\ufe7c\164\ufe7c\166\ufe7c\172\ufe7c\175" +
    "\ufe7c\176\ufe7c\203\ufe7c\210\ufe7c\223\ufe7c\224\ufe7c\226\ufe7c" +
    "\231\ufe7c\235\ufe7c\251\ufe7c\303\ufe7c\304\ufe7c\347\ufe7c\u0133" +
    "\ufe7c\u0134\ufe7c\u0148\ufe7c\u0149\ufe7c\u014a\ufe7c\u014b\ufe7c\u014e\ufe7c" +
    "\u0152\ufe7c\u0153\ufe7c\u0159\ufe7c\u0161\ufe7c\001\002\000\006\u0140" +
    "\367\u015e\366\001\002\000\004\u0159\u01d0\001\002\000\112" +
    "\002\ufe49\013\ufe49\016\ufe49\017\ufe49\026\ufe49\054\ufe49\074" +
    "\ufe49\120\ufe49\140\ufe49\164\ufe49\166\ufe49\172\ufe49\175\ufe49" +
    "\176\ufe49\203\ufe49\210\ufe49\223\ufe49\224\ufe49\226\ufe49\231" +
    "\ufe49\235\ufe49\251\ufe49\303\ufe49\304\ufe49\347\ufe49\u0133\ufe49" +
    "\u0134\ufe49\u0148\ufe49\u0149\ufe49\u014a\ufe49\u014b\ufe49\u014e\ufe49\u0152" +
    "\ufe49\u0153\ufe49\u0159\ufe49\u0161\ufe49\001\002\000\024\023\075" +
    "\072\101\250\100\252\077\u0106\057\u013d\063\u013f\060\u0158" +
    "\061\u015e\065\001\002\000\004\u0159\u01d3\001\002\000\112" +
    "\002\ufe57\013\ufe57\016\ufe57\017\ufe57\026\ufe57\054\ufe57\074" +
    "\ufe57\120\ufe57\140\ufe57\164\ufe57\166\ufe57\172\ufe57\175\ufe57" +
    "\176\ufe57\203\ufe57\210\ufe57\223\ufe57\224\ufe57\226\ufe57\231" +
    "\ufe57\235\ufe57\251\ufe57\303\ufe57\304\ufe57\347\ufe57\u0133\ufe57" +
    "\u0134\ufe57\u0148\ufe57\u0149\ufe57\u014a\ufe57\u014b\ufe57\u014e\ufe57\u0152" +
    "\ufe57\u0153\ufe57\u0159\ufe57\u0161\ufe57\001\002\000\010\u0140\377" +
    "\u015e\375\u0161\374\001\002\000\004\u0153\u01d6\001\002\000" +
    "\024\023\075\072\101\250\100\252\077\u0106\057\u013d\063" +
    "\u013f\060\u0158\061\u015e\065\001\002\000\004\u0153\u01d8\001" +
    "\002\000\024\023\075\072\101\250\100\252\077\u0106\057" +
    "\u013d\063\u013f\060\u0158\061\u015e\065\001\002\000\004\u0159" +
    "\u01da\001\002\000\112\002\ufe51\013\ufe51\016\ufe51\017\ufe51" +
    "\026\ufe51\054\ufe51\074\ufe51\120\ufe51\140\ufe51\164\ufe51\166" +
    "\ufe51\172\ufe51\175\ufe51\176\ufe51\203\ufe51\210\ufe51\223\ufe51" +
    "\224\ufe51\226\ufe51\231\ufe51\235\ufe51\251\ufe51\303\ufe51\304" +
    "\ufe51\347\ufe51\u0133\ufe51\u0134\ufe51\u0148\ufe51\u0149\ufe51\u014a\ufe51" +
    "\u014b\ufe51\u014e\ufe51\u0152\ufe51\u0153\ufe51\u0159\ufe51\u0161\ufe51\001" +
    "\002\000\024\023\075\072\101\250\100\252\077\u0106\057" +
    "\u013d\063\u013f\060\u0158\061\u015e\065\001\002\000\004\u0159" +
    "\u01dd\001\002\000\112\002\ufe52\013\ufe52\016\ufe52\017\ufe52" +
    "\026\ufe52\054\ufe52\074\ufe52\120\ufe52\140\ufe52\164\ufe52\166" +
    "\ufe52\172\ufe52\175\ufe52\176\ufe52\203\ufe52\210\ufe52\223\ufe52" +
    "\224\ufe52\226\ufe52\231\ufe52\235\ufe52\251\ufe52\303\ufe52\304" +
    "\ufe52\347\ufe52\u0133\ufe52\u0134\ufe52\u0148\ufe52\u0149\ufe52\u014a\ufe52" +
    "\u014b\ufe52\u014e\ufe52\u0152\ufe52\u0153\ufe52\u0159\ufe52\u0161\ufe52\001" +
    "\002\000\032\023\075\072\101\250\100\251\062\252\077" +
    "\u0106\057\u013d\063\u013f\060\u0140\072\u0158\061\u015e\065\u0161" +
    "\067\001\002\000\112\002\uff3a\013\uff3a\016\uff3a\017\uff3a" +
    "\026\uff3a\054\uff3a\074\uff3a\120\uff3a\140\uff3a\164\uff3a\166" +
    "\uff3a\172\uff3a\175\uff3a\176\uff3a\203\uff3a\210\uff3a\223\uff3a" +
    "\224\uff3a\226\uff3a\231\uff3a\235\uff3a\251\uff3a\303\uff3a\304" +
    "\uff3a\347\uff3a\u0133\uff3a\u0134\uff3a\u0148\uff3a\u0149\uff3a\u014a\uff3a" +
    "\u014b\uff3a\u014e\uff3a\u0152\uff3a\u0153\uff3a\u0159\uff3a\u0161\uff3a\001" +
    "\002\000\004\016\u01e1\001\002\000\036\027\u0192\043\u019a" +
    "\104\u018e\111\u018c\157\u019b\217\u018b\220\u018d\265\u0191\274" +
    "\u0190\340\u0197\367\u0195\u010e\u018f\u012c\u0193\u0161\u0196\001\002" +
    "\000\006\u0158\u01a6\u0159\uff35\001\002\000\004\u0159\u01e4\001" +
    "\002\000\112\002\uff38\013\uff38\016\uff38\017\uff38\026\uff38" +
    "\054\uff38\074\uff38\120\uff38\140\uff38\164\uff38\166\uff38\172" +
    "\uff38\175\uff38\176\uff38\203\uff38\210\uff38\223\uff38\224\uff38" +
    "\226\uff38\231\uff38\235\uff38\251\uff38\303\uff38\304\uff38\347" +
    "\uff38\u0133\uff38\u0134\uff38\u0148\uff38\u0149\uff38\u014a\uff38\u014b\uff38" +
    "\u014e\uff38\u0152\uff38\u0153\uff38\u0159\uff38\u0161\uff38\001\002\000" +
    "\004\226\u01ea\001\002\000\024\002\ufe93\172\ufe93\175\ufe93" +
    "\176\ufe93\304\ufe93\u0133\ufe93\u0134\ufe93\u0152\ufe93\u0153\ufe93\001" +
    "\002\000\024\002\ufe92\172\ufe92\175\ufe92\176\ufe92\304\ufe92" +
    "\u0133\ufe92\u0134\ufe92\u0152\ufe92\u0153\ufe92\001\002\000\012\273" +
    "\253\276\255\u015e\260\u0161\034\001\002\000\024\002\ufe95" +
    "\172\ufe95\175\ufe95\176\ufe95\304\ufe95\u0133\ufe95\u0134\ufe95\u0152" +
    "\ufe95\u0153\ufe95\001\002\000\040\002\ufe91\074\u01e5\166\264" +
    "\172\ufe91\175\ufe91\176\ufe91\210\271\226\262\231\263\304" +
    "\ufe91\347\266\u0133\ufe91\u0134\ufe91\u0152\ufe91\u0153\ufe91\001\002" +
    "\000\024\002\ufe94\172\ufe94\175\ufe94\176\ufe94\304\ufe94\u0133" +
    "\ufe94\u0134\ufe94\u0152\ufe94\u0153\ufe94\001\002\000\104\023\uff76" +
    "\040\uff76\041\uff76\043\uff76\065\uff76\070\uff76\072\uff76\100" +
    "\uff76\105\uff76\161\uff76\231\uff76\244\uff76\246\301\250\uff76" +
    "\251\300\252\uff76\256\uff76\260\uff76\265\uff76\266\uff76\347" +
    "\uff76\363\uff76\364\uff76\373\uff76\u0105\uff76\u0106\uff76\u0109\uff76" +
    "\u0119\uff76\u011b\uff76\u0125\uff76\u0138\uff76\u0158\305\u0161\uff76\001" +
    "\002\000\042\002\uffa3\074\uffa3\166\uffa3\172\uffa3\175\uffa3" +
    "\176\uffa3\210\uffa3\226\uffa3\231\uffa3\304\uffa3\347\uffa3\u0133" +
    "\uffa3\u0134\uffa3\u0152\uffa3\u0153\uffa3\u0159\uffa3\001\002\000\042" +
    "\002\uffa0\074\uffa0\166\uffa0\172\uffa0\175\uffa0\176\uffa0\210" +
    "\uffa0\226\uffa0\231\uffa0\304\uffa0\347\uffa0\u0133\uffa0\u0134\uffa0" +
    "\u0152\uffa0\u0153\uffa0\u0159\uffa0\001\002\000\004\u0161\u01f0\001" +
    "\002\000\006\u0144\u01f3\u014a\u01f4\001\002\000\004\u0159\u01f2" +
    "\001\002\000\044\002\uffa2\013\uffa2\074\uffa2\166\uffa2\172" +
    "\uffa2\175\uffa2\176\uffa2\210\uffa2\226\uffa2\231\uffa2\304\uffa2" +
    "\347\uffa2\u0133\uffa2\u0134\uffa2\u0152\uffa2\u0153\uffa2\u0159\uffa2\001" +
    "\002\000\004\u0158\u01fc\001\002\000\004\u0144\u01f7\001\002" +
    "\000\004\u0161\u01f6\001\002\000\004\u0159\uff75\001\002\000" +
    "\004\u0158\u01f8\001\002\000\004\u0161\u01f9\001\002\000\004" +
    "\u0159\u01fa\001\002\000\004\u0144\u01fb\001\002\000\004\u0161" +
    "\uff74\001\002\000\004\u0161\u01fd\001\002\000\004\u0159\u01fe" +
    "\001\002\000\004\u0144\u01ff\001\002\000\004\u0148\u0200\001" +
    "\002\000\004\u0161\uff73\001\002\000\046\002\uff7c\013\uff7c" +
    "\074\uff7c\166\uff7c\172\uff7c\175\uff7c\176\uff7c\210\uff7c\226" +
    "\uff7c\231\uff7c\303\311\304\uff7c\347\uff7c\u0133\uff7c\u0134\uff7c" +
    "\u0152\uff7c\u0153\uff7c\u0159\uff7c\001\002\000\044\002\uff7f\013" +
    "\uff7f\074\uff7f\166\uff7f\172\uff7f\175\uff7f\176\uff7f\210\uff7f" +
    "\226\uff7f\231\uff7f\304\uff7f\347\uff7f\u0133\uff7f\u0134\uff7f\u0152" +
    "\uff7f\u0153\uff7f\u0159\uff7f\001\002\000\012\273\ufe90\276\ufe90" +
    "\u015e\ufe90\u0161\ufe90\001\002\000\004\226\ufe88\001\002\000" +
    "\004\226\u0207\001\002\000\004\226\ufe8c\001\002\000\004" +
    "\226\ufe89\001\002\000\040\002\ufe91\074\u01e5\166\264\172" +
    "\ufe91\175\ufe91\176\ufe91\210\271\226\262\231\263\304\ufe91" +
    "\347\266\u0133\ufe91\u0134\ufe91\u0152\ufe91\u0153\ufe91\001\002\000" +
    "\024\002\ufe97\172\ufe97\175\ufe97\176\ufe97\304\ufe97\u0133\ufe97" +
    "\u0134\ufe97\u0152\ufe97\u0153\ufe97\001\002\000\004\226\ufe8b\001" +
    "\002\000\004\226\ufe8d\001\002\000\046\002\ufe9d\016\u020d" +
    "\074\ufe9d\166\ufe9d\172\ufe9d\175\ufe9d\176\ufe9d\210\ufe9d\226" +
    "\ufe9d\231\ufe9d\270\ufe9d\304\ufe9d\347\ufe9d\u0133\ufe9d\u0134\ufe9d" +
    "\u0152\ufe9d\u0153\ufe9d\u0161\u020e\001\002\000\004\u0161\u0210\001" +
    "\002\000\044\002\ufe9e\074\ufe9e\166\ufe9e\172\ufe9e\175\ufe9e" +
    "\176\ufe9e\210\ufe9e\226\ufe9e\231\ufe9e\270\ufe9e\304\ufe9e\347" +
    "\ufe9e\u0110\ufe9e\u0133\ufe9e\u0134\ufe9e\u0152\ufe9e\u0153\ufe9e\001\002" +
    "\000\042\002\ufea0\074\ufea0\166\ufea0\172\ufea0\175\ufea0\176" +
    "\ufea0\210\ufea0\226\ufea0\231\ufea0\270\ufea0\304\ufea0\347\ufea0" +
    "\u0133\ufea0\u0134\ufea0\u0152\ufea0\u0153\ufea0\001\002\000\044\002" +
    "\ufe9f\074\ufe9f\166\ufe9f\172\ufe9f\175\ufe9f\176\ufe9f\210\ufe9f" +
    "\226\ufe9f\231\ufe9f\270\ufe9f\304\ufe9f\347\ufe9f\u0110\ufe9f\u0133" +
    "\ufe9f\u0134\ufe9f\u0152\ufe9f\u0153\ufe9f\001\002\000\004\u0159\u0212" +
    "\001\002\000\024\002\ufe99\172\ufe99\175\ufe99\176\ufe99\304" +
    "\ufe99\u0133\ufe99\u0134\ufe99\u0152\ufe99\u0153\ufe99\001\002\000\006" +
    "\172\ufe2d\u0152\ufe2d\001\002\000\004\u0161\u0215\001\002\000" +
    "\004\u0153\u0216\001\002\000\004\u0140\u0217\001\002\000\004" +
    "\u0159\u0218\001\002\000\046\002\ufe81\016\ufe81\074\ufe81\166" +
    "\ufe81\172\ufe81\175\ufe81\176\ufe81\210\ufe81\226\ufe81\231\ufe81" +
    "\270\ufe81\304\ufe81\347\ufe81\u0133\ufe81\u0134\ufe81\u0152\ufe81\u0153" +
    "\ufe81\u0161\ufe81\001\002\000\044\002\ufe9b\074\ufe9b\166\ufe9b" +
    "\172\ufe9b\175\ufe9b\176\ufe9b\210\ufe9b\226\ufe9b\231\ufe9b\270" +
    "\ufe9b\304\ufe9b\347\ufe9b\u0110\u021a\u0133\ufe9b\u0134\ufe9b\u0152\ufe9b" +
    "\u0153\ufe9b\001\002\000\004\u0158\u021d\001\002\000\042\002" +
    "\ufea2\074\ufea2\166\ufea2\172\ufea2\175\ufea2\176\ufea2\210\ufea2" +
    "\226\ufea2\231\ufea2\270\ufea2\304\ufea2\347\ufea2\u0133\ufea2\u0134" +
    "\ufea2\u0152\ufea2\u0153\ufea2\001\002\000\042\002\ufe9c\074\ufe9c" +
    "\166\ufe9c\172\ufe9c\175\ufe9c\176\ufe9c\210\ufe9c\226\ufe9c\231" +
    "\ufe9c\270\ufe9c\304\ufe9c\347\ufe9c\u0133\ufe9c\u0134\ufe9c\u0152\ufe9c" +
    "\u0153\ufe9c\001\002\000\024\023\075\072\101\250\100\252" +
    "\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e\065\001\002" +
    "\000\010\307\u0222\352\u0221\u0159\ufe83\001\002\000\004\u0159" +
    "\u0220\001\002\000\042\002\ufe87\074\ufe87\166\ufe87\172\ufe87" +
    "\175\ufe87\176\ufe87\210\ufe87\226\ufe87\231\ufe87\270\ufe87\304" +
    "\ufe87\347\ufe87\u0133\ufe87\u0134\ufe87\u0152\ufe87\u0153\ufe87\001\002" +
    "\000\004\u0159\ufe84\001\002\000\004\u0159\ufe85\001\002\000" +
    "\004\u0159\ufe86\001\002\000\004\u0140\u0225\001\002\000\004" +
    "\u0153\u0226\001\002\000\004\u0140\u0227\001\002\000\004\u0159" +
    "\u0228\001\002\000\046\002\ufe82\016\ufe82\074\ufe82\166\ufe82" +
    "\172\ufe82\175\ufe82\176\ufe82\210\ufe82\226\ufe82\231\ufe82\270" +
    "\ufe82\304\ufe82\347\ufe82\u0133\ufe82\u0134\ufe82\u0152\ufe82\u0153\ufe82" +
    "\u0161\ufe82\001\002\000\042\002\ufea1\074\ufea1\166\ufea1\172" +
    "\ufea1\175\ufea1\176\ufea1\210\ufea1\226\ufea1\231\ufea1\270\ufea1" +
    "\304\ufea1\347\ufea1\u0133\ufea1\u0134\ufea1\u0152\ufea1\u0153\ufea1\001" +
    "\002\000\006\172\ufe2f\u0152\ufe2f\001\002\000\006\172\ufe31" +
    "\u0152\ufe31\001\002\000\024\016\ufec4\113\ufec4\164\ufec4\172" +
    "\ufec4\223\ufec4\361\ufec4\u012b\ufec4\u0133\ufec4\u0152\ufec4\001\002" +
    "\000\024\016\u0245\113\ufec2\164\ufec2\172\ufec2\223\ufec2\361" +
    "\ufec2\u012b\ufec2\u0133\ufec2\u0152\ufec2\001\002\000\022\113\ufecb" +
    "\164\ufecb\172\ufecb\223\u0236\361\ufecb\u012b\ufecb\u0133\ufecb\u0152" +
    "\ufecb\001\002\000\004\u0154\u0231\001\002\000\024\016\ufec5" +
    "\113\ufec5\164\ufec5\172\ufec5\223\ufec5\361\ufec5\u012b\ufec5\u0133" +
    "\ufec5\u0152\ufec5\001\002\000\006\u0145\u0233\u0161\u0234\001\002" +
    "\000\024\016\ufebf\113\ufebf\164\ufebf\172\ufebf\223\ufebf\361" +
    "\ufebf\u012b\ufebf\u0133\ufebf\u0152\ufebf\001\002\000\024\016\ufebe" +
    "\113\ufebe\164\ufebe\172\ufebe\223\ufebe\361\ufebe\u012b\ufebe\u0133" +
    "\ufebe\u0152\ufebe\001\002\000\024\016\ufebd\113\ufebd\164\ufebd" +
    "\172\ufebd\223\ufebd\361\ufebd\u012b\ufebd\u0133\ufebd\u0152\ufebd\001" +
    "\002\000\020\113\ufece\164\ufece\172\ufece\361\ufece\u012b\ufece" +
    "\u0133\ufece\u0152\ufece\001\002\000\006\u015e\u0238\u0161\u0239\001" +
    "\002\000\020\113\ufecc\164\ufecc\172\ufecc\361\ufecc\u012b\ufecc" +
    "\u0133\ufecc\u0152\ufecc\001\002\000\004\u0161\u0243\001\002\000" +
    "\022\113\ufec7\164\ufec7\172\ufec7\361\ufec7\u012b\ufec7\u0133\ufec7" +
    "\u0152\ufec7\u0158\u023c\001\002\000\020\113\ufec9\164\ufec9\172" +
    "\ufec9\361\ufec9\u012b\ufec9\u0133\ufec9\u0152\ufec9\001\002\000\020" +
    "\113\ufec8\164\ufec8\172\ufec8\361\ufec8\u012b\ufec8\u0133\ufec8\u0152" +
    "\ufec8\001\002\000\004\u0161\u023d\001\002\000\006\u0153\u0240" +
    "\u0159\u023f\001\002\000\022\113\ufed5\164\ufed5\172\ufed5\312" +
    "\ufed5\361\ufed5\u012b\ufed5\u0133\ufed5\u0152\ufed5\001\002\000\022" +
    "\113\ufed2\164\ufed2\172\ufed2\312\ufed2\361\ufed2\u012b\ufed2\u0133" +
    "\ufed2\u0152\ufed2\001\002\000\004\u0161\u023d\001\002\000\022" +
    "\113\ufed4\164\ufed4\172\ufed4\312\ufed4\361\ufed4\u012b\ufed4\u0133" +
    "\ufed4\u0152\ufed4\001\002\000\022\113\ufed3\164\ufed3\172\ufed3" +
    "\312\ufed3\361\ufed3\u012b\ufed3\u0133\ufed3\u0152\ufed3\001\002\000" +
    "\022\113\ufec7\164\ufec7\172\ufec7\361\ufec7\u012b\ufec7\u0133\ufec7" +
    "\u0152\ufec7\u0158\u023c\001\002\000\020\113\ufeca\164\ufeca\172" +
    "\ufeca\361\ufeca\u012b\ufeca\u0133\ufeca\u0152\ufeca\001\002\000\004" +
    "\u0161\u0247\001\002\000\022\113\ufec6\164\ufec6\172\ufec6\223" +
    "\ufec6\361\ufec6\u012b\ufec6\u0133\ufec6\u0152\ufec6\001\002\000\024" +
    "\113\ufec0\164\ufec0\172\ufec0\223\ufec0\361\ufec0\u012b\ufec0\u0133" +
    "\ufec0\u0152\ufec0\u0153\u0248\001\002\000\026\023\075\072\101" +
    "\250\100\252\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e" +
    "\065\u0161\u022f\001\002\000\022\113\ufec3\164\ufec3\172\ufec3" +
    "\223\ufec3\361\ufec3\u012b\ufec3\u0133\ufec3\u0152\ufec3\001\002\000" +
    "\022\113\ufec1\164\ufec1\172\ufec1\223\ufec1\361\ufec1\u012b\ufec1" +
    "\u0133\ufec1\u0152\ufec1\001\002\000\006\172\ufe2b\u0152\ufe2b\001" +
    "\002\000\032\003\ufe28\012\ufe28\073\ufe28\116\ufe28\132\ufe28" +
    "\135\ufe28\172\ufe28\216\ufe28\361\ufe28\u011d\ufe28\u0124\ufe28\u0152" +
    "\ufe28\001\002\000\032\003\ufe29\012\ufe29\073\ufe29\116\ufe29" +
    "\132\ufe29\135\ufe29\172\ufe29\216\ufe29\361\ufe29\u011d\ufe29\u0124" +
    "\ufe29\u0152\ufe29\001\002\000\032\003\ufe42\012\ufe42\073\ufe42" +
    "\116\ufe42\132\ufe42\135\ufe42\172\ufe42\216\ufe42\361\ufe42\u011d" +
    "\ufe42\u0124\ufe42\u0152\ufe42\001\002\000\024\023\075\072\101" +
    "\250\100\252\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e" +
    "\065\001\002\000\004\u0159\u0251\001\002\000\010\307\u0252" +
    "\u015e\ufe3e\u0161\ufe3e\001\002\000\006\u015e\ufe3f\u0161\ufe3f\001" +
    "\002\000\006\u015e\033\u0161\034\001\002\000\006\172\ufe41" +
    "\u0152\ufe41\001\002\000\006\172\ufe3d\u0152\ufe3d\001\002\000" +
    "\014\164\u0265\172\u0266\312\244\u0133\u025e\u0152\u025f\001\002" +
    "\000\022\002\ufdfe\116\ufdfe\135\ufdfe\172\ufdfe\216\ufdfe\361" +
    "\ufdfe\u0124\ufdfe\u0152\ufdfe\001\002\000\022\002\ufe02\116\ufe02" +
    "\135\ufe02\172\ufe02\216\ufe02\361\ufe02\u0124\ufe02\u0152\ufe02\001" +
    "\002\000\006\u015e\u025c\u0161\034\001\002\000\004\u0158\u0270" +
    "\001\002\000\022\002\ufe04\116\ufe04\135\ufe04\172\ufe04\216" +
    "\ufe04\361\ufe04\u0124\ufe04\u0152\ufe04\001\002\000\004\u0161\u025d" +
    "\001\002\000\014\164\u0265\172\u0266\312\244\u0133\u025e\u0152" +
    "\u025f\001\002\000\104\023\uff76\040\uff76\041\uff76\043\uff76" +
    "\065\uff76\070\uff76\072\uff76\100\uff76\105\uff76\161\uff76\231" +
    "\uff76\244\uff76\246\301\250\uff76\251\300\252\uff76\256\uff76" +
    "\260\uff76\265\uff76\266\uff76\347\uff76\363\uff76\364\uff76\373" +
    "\uff76\u0105\uff76\u0106\uff76\u0109\uff76\u0119\uff76\u011b\uff76\u0125\uff76" +
    "\u0138\uff76\u0158\305\u0161\uff76\001\002\000\022\002\ufdf3\116" +
    "\ufdf3\135\ufdf3\172\ufdf3\216\ufdf3\361\ufdf3\u0124\ufdf3\u0152\ufdf3" +
    "\001\002\000\022\002\ufdf8\116\ufdf8\135\ufdf8\172\ufdf8\216" +
    "\ufdf8\361\ufdf8\u0124\ufdf8\u0152\ufdf8\001\002\000\022\002\ufdfa" +
    "\116\ufdfa\135\ufdfa\172\ufdfa\216\ufdfa\361\ufdfa\u0124\ufdfa\u0152" +
    "\ufdfa\001\002\000\022\002\ufdfc\116\ufdfc\135\ufdfc\172\ufdfc" +
    "\216\ufdfc\361\ufdfc\u0124\ufdfc\u0152\ufdfc\001\002\000\022\002" +
    "\ufdf4\116\ufdf4\135\ufdf4\172\ufdf4\216\ufdf4\361\ufdf4\u0124\ufdf4" +
    "\u0152\ufdf4\001\002\000\012\164\u0265\172\u0266\u0133\u025e\u0152" +
    "\u025f\001\002\000\014\273\253\276\255\u0158\257\u015e\260" +
    "\u0161\034\001\002\000\022\002\ufdf2\116\ufdf2\135\ufdf2\172" +
    "\ufdf2\216\ufdf2\361\ufdf2\u0124\ufdf2\u0152\ufdf2\001\002\000\012" +
    "\172\u0266\u0133\u025e\u0152\u025f\u0153\u0269\001\002\000\022\002" +
    "\ufdf9\116\ufdf9\135\ufdf9\172\ufdf9\216\ufdf9\361\ufdf9\u0124\ufdf9" +
    "\u0152\ufdf9\001\002\000\014\273\253\276\255\u0158\257\u015e" +
    "\260\u0161\034\001\002\000\022\002\ufdf6\116\ufdf6\135\ufdf6" +
    "\172\ufdf6\216\ufdf6\361\ufdf6\u0124\ufdf6\u0152\ufdf6\001\002\000" +
    "\012\172\u0266\u0133\u025e\u0152\u025f\u0153\u0269\001\002\000\022" +
    "\002\ufdf7\116\ufdf7\135\ufdf7\172\ufdf7\216\ufdf7\361\ufdf7\u0124" +
    "\ufdf7\u0152\ufdf7\001\002\000\022\002\ufdfb\116\ufdfb\135\ufdfb" +
    "\172\ufdfb\216\ufdfb\361\ufdfb\u0124\ufdfb\u0152\ufdfb\001\002\000" +
    "\006\172\u0266\u0152\u025f\001\002\000\022\002\ufdf5\116\ufdf5" +
    "\135\ufdf5\172\ufdf5\216\ufdf5\361\ufdf5\u0124\ufdf5\u0152\ufdf5\001" +
    "\002\000\024\023\075\072\101\250\100\252\077\u0106\057" +
    "\u013d\063\u013f\060\u0158\061\u015e\065\001\002\000\004\u0159" +
    "\u0272\001\002\000\012\164\u0259\307\u0273\u015e\u025c\u0161\034" +
    "\001\002\000\010\164\u0259\u015e\u025c\u0161\034\001\002\000" +
    "\022\002\ufe00\116\ufe00\135\ufe00\172\ufe00\216\ufe00\361\ufe00" +
    "\u0124\ufe00\u0152\ufe00\001\002\000\022\002\ufe03\116\ufe03\135" +
    "\ufe03\172\ufe03\216\ufe03\361\ufe03\u0124\ufe03\u0152\ufe03\001\002" +
    "\000\022\002\ufe01\116\ufe01\135\ufe01\172\ufe01\216\ufe01\361" +
    "\ufe01\u0124\ufe01\u0152\ufe01\001\002\000\022\002\ufdff\116\ufdff" +
    "\135\ufdff\172\ufdff\216\ufdff\361\ufdff\u0124\ufdff\u0152\ufdff\001" +
    "\002\000\022\002\ufdfd\116\ufdfd\135\ufdfd\172\ufdfd\216\ufdfd" +
    "\361\ufdfd\u0124\ufdfd\u0152\ufdfd\001\002\000\004\002\ufff8\001" +
    "\002\000\014\103\u027e\205\u027d\u010b\u027f\u0127\u0281\u012f\u0280" +
    "\001\002\000\004\145\u027c\001\002\000\014\103\uffe4\205" +
    "\uffe4\u010b\uffe4\u0127\uffe4\u012f\uffe4\001\002\000\004\u0161\034" +
    "\001\002\000\004\u0161\u028e\001\002\000\004\u0161\034\001" +
    "\002\000\004\u0161\034\001\002\000\004\u0161\u0283\001\002" +
    "\000\024\003\uffea\012\uffea\073\uffea\116\uffea\132\uffea\216" +
    "\uffea\361\uffea\u011d\uffea\u0124\uffea\001\002\000\024\003\uffe7" +
    "\012\uffe7\073\uffe7\116\uffe7\132\uffe7\216\uffe7\361\uffe7\u011d" +
    "\uffe7\u0124\uffe7\001\002\000\010\172\u028a\u0152\u0287\u0153\u0288" +
    "\001\002\000\024\003\uffe6\012\uffe6\073\uffe6\116\uffe6\132" +
    "\uffe6\216\uffe6\361\uffe6\u011d\uffe6\u0124\uffe6\001\002\000\024" +
    "\003\uffe0\012\uffe0\073\uffe0\116\uffe0\132\uffe0\216\uffe0\361" +
    "\uffe0\u011d\uffe0\u0124\uffe0\001\002\000\024\003\uffd9\012\uffd9" +
    "\073\uffd9\116\uffd9\132\uffd9\216\uffd9\361\uffd9\u011d\uffd9\u0124" +
    "\uffd9\001\002\000\004\u0161\034\001\002\000\024\003\uffe2" +
    "\012\uffe2\073\uffe2\116\uffe2\132\uffe2\216\uffe2\361\uffe2\u011d" +
    "\uffe2\u0124\uffe2\001\002\000\024\003\uffd8\012\uffd8\073\uffd8" +
    "\116\uffd8\132\uffd8\216\uffd8\361\uffd8\u011d\uffd8\u0124\uffd8\001" +
    "\002\000\024\003\uffe1\012\uffe1\073\uffe1\116\uffe1\132\uffe1" +
    "\216\uffe1\361\uffe1\u011d\uffe1\u0124\uffe1\001\002\000\024\003" +
    "\uffe9\012\uffe9\073\uffe9\116\uffe9\132\uffe9\216\uffe9\361\uffe9" +
    "\u011d\uffe9\u0124\uffe9\001\002\000\024\003\uffe8\012\uffe8\073" +
    "\uffe8\116\uffe8\132\uffe8\216\uffe8\361\uffe8\u011d\uffe8\u0124\uffe8" +
    "\001\002\000\010\172\u028a\u0152\u0287\u0153\u0290\001\002\000" +
    "\024\003\uffdd\012\uffdd\073\uffdd\116\uffdd\132\uffdd\216\uffdd" +
    "\361\uffdd\u011d\uffdd\u0124\uffdd\001\002\000\004\u0161\u028e\001" +
    "\002\000\024\003\uffdf\012\uffdf\073\uffdf\116\uffdf\132\uffdf" +
    "\216\uffdf\361\uffdf\u011d\uffdf\u0124\uffdf\001\002\000\024\003" +
    "\uffde\012\uffde\073\uffde\116\uffde\132\uffde\216\uffde\361\uffde" +
    "\u011d\uffde\u0124\uffde\001\002\000\012\172\u028a\270\u0296\u0152" +
    "\u0287\u0153\u0297\001\002\000\024\003\uffe5\012\uffe5\073\uffe5" +
    "\116\uffe5\132\uffe5\216\uffe5\361\uffe5\u011d\uffe5\u0124\uffe5\001" +
    "\002\000\024\003\uffda\012\uffda\073\uffda\116\uffda\132\uffda" +
    "\216\uffda\361\uffda\u011d\uffda\u0124\uffda\001\002\000\004\u0161" +
    "\034\001\002\000\004\u0161\034\001\002\000\024\003\uffdc" +
    "\012\uffdc\073\uffdc\116\uffdc\132\uffdc\216\uffdc\361\uffdc\u011d" +
    "\uffdc\u0124\uffdc\001\002\000\024\003\uffd6\012\uffd6\073\uffd6" +
    "\116\uffd6\132\uffd6\216\uffd6\361\uffd6\u011d\uffd6\u0124\uffd6\001" +
    "\002\000\024\003\uffd7\012\uffd7\073\uffd7\116\uffd7\132\uffd7" +
    "\216\uffd7\361\uffd7\u011d\uffd7\u0124\uffd7\001\002\000\010\172" +
    "\u028a\u0152\u0287\u0153\u0297\001\002\000\024\003\uffdb\012\uffdb" +
    "\073\uffdb\116\uffdb\132\uffdb\216\uffdb\361\uffdb\u011d\uffdb\u0124" +
    "\uffdb\001\002\000\006\075\u0378\u0161\u037a\001\002\000\012" +
    "\103\u029d\u010b\u029f\u0127\u02a0\u012f\u029e\001\002\000\004\u0161" +
    "\034\001\002\000\004\u0161\u02a2\001\002\000\004\002\uffd5" +
    "\001\002\000\006\172\u02a4\u0152\u02a3\001\002\000\004\002" +
    "\uffb2\001\002\000\004\002\uffb1\001\002\000\004\002\uffd2" +
    "\001\002\000\010\007\u02a9\012\u02a7\132\u02aa\001\002\000" +
    "\004\056\u0358\001\002\000\004\002\uffd3\001\002\000\024" +
    "\047\uff1b\062\uff1b\063\u02bb\113\uff1b\160\uff1b\314\uff1b\336" +
    "\uff1b\u0120\uff1b\u0161\u02bd\001\002\000\012\056\u02ac\063\u02ab" +
    "\214\u02b1\u0161\u02b0\001\002\000\006\214\u02b1\u0161\u02b0\001" +
    "\002\000\006\214\u02b1\u0161\u02b0\001\002\000\004\002\uffac" +
    "\001\002\000\004\002\uffc7\001\002\000\004\002\uffae\001" +
    "\002\000\010\172\u02a4\u0152\u02a3\u0153\u02b4\001\002\000\004" +
    "\145\u02b2\001\002\000\004\u0161\u02b0\001\002\000\004\002" +
    "\uffad\001\002\000\004\u0161\u02b0\001\002\000\004\002\uffab" +
    "\001\002\000\004\002\uffa9\001\002\000\004\002\uffaa\001" +
    "\002\000\004\002\uffaf\001\002\000\004\002\uffb0\001\002" +
    "\000\010\172\u02a4\u0152\u02a3\u0153\u0352\001\002\000\004\u0161" +
    "\u0356\001\002\000\010\172\u02a4\u0152\u02a3\u0153\u0352\001\002" +
    "\000\036\027\u0192\043\u019a\104\u018e\111\u018c\157\u019b\217" +
    "\u018b\220\u018d\265\u0191\274\u0190\340\u0197\367\u0195\u010e\u018f" +
    "\u012c\u0193\u0161\u0196\001\002\000\020\047\u02c6\062\u02c0\113" +
    "\u02c4\160\u02c8\314\u02c7\336\uff0b\u0120\u02c1\001\002\000\004" +
    "\002\uffc8\001\002\000\004\u0158\u031e\001\002\000\010\052" +
    "\u02cb\270\u02cc\u0134\u02ce\001\002\000\004\336\u0302\001\002" +
    "\000\012\172\uff18\u0152\uff18\u0153\uff18\u0159\uff18\001\002\000" +
    "\014\u013d\u02fb\u013f\u02f6\u0140\u02fa\u015e\u02f8\u0161\u02f9\001\002" +
    "\000\012\172\uff1d\u0152\uff1d\u0153\uff1d\u0159\uff1d\001\002\000" +
    "\006\251\u02e5\u0158\u02e6\001\002\000\004\227\u02ca\001\002" +
    "\000\004\227\u02c9\001\002\000\004\336\uff0c\001\002\000" +
    "\010\052\u02cb\270\u02cc\u0134\u02ce\001\002\000\006\270\u02cc" +
    "\u0134\u02ce\001\002\000\004\u0161\u02e0\001\002\000\012\172" +
    "\uff11\u0152\uff11\u0153\uff11\u0159\uff11\001\002\000\006\154\u02d3" +
    "\u0158\u02d2\001\002\000\012\172\uff13\u0152\uff13\u0153\uff13\u0159" +
    "\uff13\001\002\000\012\172\uff1a\u0152\uff1a\u0153\uff1a\u0159\uff1a" +
    "\001\002\000\004\270\u02cc\001\002\000\004\154\u02d9\001" +
    "\002\000\004\u014c\u02d4\001\002\000\004\u013d\u02d5\001\002" +
    "\000\004\u0158\u02d6\001\002\000\004\u013d\u02d7\001\002\000" +
    "\004\u0159\u02d8\001\002\000\004\270\uff10\001\002\000\004" +
    "\u014c\u02da\001\002\000\004\220\u02db\001\002\000\004\u0158" +
    "\u02dc\001\002\000\004\u013d\u02dd\001\002\000\004\u0159\u02de" +
    "\001\002\000\004\270\uff0f\001\002\000\012\172\uff12\u0152" +
    "\uff12\u0153\uff12\u0159\uff12\001\002\000\004\u0158\u02e1\001\002" +
    "\000\004\u0161\u02e2\001\002\000\004\u0159\u02e3\001\002\000" +
    "\012\172\uff0e\u0152\uff0e\u0153\uff0e\u0159\uff0e\001\002\000\012" +
    "\172\uff14\u0152\uff14\u0153\uff14\u0159\uff14\001\002\000\004\156" +
    "\u02f2\001\002\000\032\023\075\072\101\250\100\251\062" +
    "\252\077\u0106\057\u013d\063\u013f\060\u0140\072\u0158\061\u015e" +
    "\065\u0161\067\001\002\000\012\172\ufefc\u0152\ufefc\u0153\ufefc" +
    "\u0159\ufefc\001\002\000\012\172\uff15\u0152\uff15\u0153\uff15\u0159" +
    "\uff15\001\002\000\004\u0159\u02ea\001\002\000\014\172\ufef4" +
    "\270\u02eb\u0152\ufef4\u0153\ufef4\u0159\ufef4\001\002\000\004\116" +
    "\u02ed\001\002\000\012\172\ufefb\u0152\ufefb\u0153\ufefb\u0159\ufefb" +
    "\001\002\000\006\036\u02ef\267\u02f0\001\002\000\012\172" +
    "\ufef5\u0152\ufef5\u0153\ufef5\u0159\ufef5\001\002\000\012\172\ufef2" +
    "\u0152\ufef2\u0153\ufef2\u0159\ufef2\001\002\000\004\005\u02f1\001" +
    "\002\000\012\172\ufef3\u0152\ufef3\u0153\ufef3\u0159\ufef3\001\002" +
    "\000\004\337\u02f3\001\002\000\004\u0158\u02e6\001\002\000" +
    "\012\172\ufefd\u0152\ufefd\u0153\ufefd\u0159\ufefd\001\002\000\004" +
    "\156\u02fd\001\002\000\010\156\ufed6\356\ufed6\u0134\ufed6\001" +
    "\002\000\012\172\uff16\u0152\uff16\u0153\uff16\u0159\uff16\001\002" +
    "\000\004\u0161\u02fc\001\002\000\010\156\ufed9\356\ufed9\u0134" +
    "\ufed9\001\002\000\010\156\ufed8\356\ufed8\u0134\ufed8\001\002" +
    "\000\010\156\ufed7\356\ufed7\u0134\ufed7\001\002\000\010\156" +
    "\ufeda\356\ufeda\u0134\ufeda\001\002\000\004\u0161\u02fe\001\002" +
    "\000\014\172\ufef0\u0134\u0300\u0152\ufef0\u0153\ufef0\u0159\ufef0\001" +
    "\002\000\012\172\ufef9\u0152\ufef9\u0153\ufef9\u0159\ufef9\001\002" +
    "\000\004\u012b\u0301\001\002\000\012\172\ufef1\u0152\ufef1\u0153" +
    "\ufef1\u0159\ufef1\001\002\000\004\u0161\u0303\001\002\000\006" +
    "\u0154\u0306\u0158\u0307\001\002\000\012\172\uff0d\u0152\uff0d\u0153" +
    "\uff0d\u0159\uff0d\001\002\000\012\172\uff09\u0152\uff09\u0153\uff09" +
    "\u0159\uff09\001\002\000\004\u0161\u031a\001\002\000\004\u0161" +
    "\u0308\001\002\000\004\u0159\u0309\001\002\000\016\172\uff05" +
    "\251\u030b\270\u030a\u0152\uff05\u0153\uff05\u0159\uff05\001\002\000" +
    "\006\116\u0310\u0124\u0311\001\002\000\004\156\u030d\001\002" +
    "\000\012\172\uff08\u0152\uff08\u0153\uff08\u0159\uff08\001\002\000" +
    "\004\337\u030e\001\002\000\012\172\uff06\u0152\uff06\u0153\uff06" +
    "\u0159\uff06\001\002\000\010\036\u0314\267\u0315\364\u0313\001" +
    "\002\000\010\036\uff04\267\uff04\364\uff04\001\002\000\010" +
    "\036\uff03\267\uff03\364\uff03\001\002\000\012\172\uff07\u0152" +
    "\uff07\u0153\uff07\u0159\uff07\001\002\000\006\113\u0317\253\u0319" +
    "\001\002\000\012\172\uff01\u0152\uff01\u0153\uff01\u0159\uff01\001" +
    "\002\000\004\005\u0316\001\002\000\012\172\uff02\u0152\uff02" +
    "\u0153\uff02\u0159\uff02\001\002\000\012\172\ufefe\u0152\ufefe\u0153" +
    "\ufefe\u0159\ufefe\001\002\000\012\172\uff00\u0152\uff00\u0153\uff00" +
    "\u0159\uff00\001\002\000\012\172\ufeff\u0152\ufeff\u0153\ufeff\u0159" +
    "\ufeff\001\002\000\004\u0158\u0307\001\002\000\012\172\uff0a" +
    "\u0152\uff0a\u0153\uff0a\u0159\uff0a\001\002\000\012\172\uff19\u0152" +
    "\uff19\u0153\uff19\u0159\uff19\001\002\000\012\172\uff17\u0152\uff17" +
    "\u0153\uff17\u0159\uff17\001\002\000\004\u0161\u0320\001\002\000" +
    "\004\u0159\u0326\001\002\000\004\u0114\u0321\001\002\000\004" +
    "\u0161\u0322\001\002\000\006\u0153\u0323\u0159\ufef6\001\002\000" +
    "\004\u0161\u0320\001\002\000\004\u0159\ufef8\001\002\000\004" +
    "\u0159\ufef7\001\002\000\012\172\ufefa\u0152\ufefa\u0153\ufefa\u0159" +
    "\ufefa\001\002\000\016\054\u0332\063\u032c\113\u032b\201\u0328" +
    "\251\u0331\253\u032a\001\002\000\010\251\u0348\356\u033d\u0158" +
    "\u0349\001\002\000\012\172\ufee7\u0152\ufee7\u0153\ufee7\u0159\ufee7" +
    "\001\002\000\006\063\u032c\113\u032b\001\002\000\014\u013d" +
    "\u02fb\u013f\u02f6\u0140\u02fa\u015e\u02f8\u0161\u02f9\001\002\000\004" +
    "\u0161\u0337\001\002\000\012\172\ufee6\u0152\ufee6\u0153\ufee6\u0159" +
    "\ufee6\001\002\000\012\172\ufeea\u0152\ufeea\u0153\ufeea\u0159\ufeea" +
    "\001\002\000\012\172\ufeed\u0152\ufeed\u0153\ufeed\u0159\ufeed\001" +
    "\002\000\012\172\ufeef\u0152\ufeef\u0153\ufeef\u0159\ufeef\001\002" +
    "\000\004\253\u0335\001\002\000\004\u0161\u0333\001\002\000" +
    "\014\063\u032c\113\u032b\201\u0328\251\u0331\253\u032a\001\002" +
    "\000\012\172\ufeee\u0152\ufeee\u0153\ufeee\u0159\ufeee\001\002\000" +
    "\006\063\u032c\113\u032b\001\002\000\012\172\ufeeb\u0152\ufeeb" +
    "\u0153\ufeeb\u0159\ufeeb\001\002\000\004\113\u032b\001\002\000" +
    "\012\172\ufedc\u0152\ufedc\u0153\ufedc\u0159\ufedc\001\002\000\012" +
    "\172\ufee8\u0152\ufee8\u0153\ufee8\u0159\ufee8\001\002\000\012\172" +
    "\ufedb\u0152\ufedb\u0153\ufedb\u0159\ufedb\001\002\000\006\356\u033d" +
    "\u0134\u033f\001\002\000\012\172\ufee3\u0152\ufee3\u0153\ufee3\u0159" +
    "\ufee3\001\002\000\002\001\002\000\012\172\ufee5\u0152\ufee5" +
    "\u0153\ufee5\u0159\ufee5\001\002\000\004\u012b\u0341\001\002\000" +
    "\012\172\ufedd\u0152\ufedd\u0153\ufedd\u0159\ufedd\001\002\000\004" +
    "\356\u033d\001\002\000\012\172\ufee4\u0152\ufee4\u0153\ufee4\u0159" +
    "\ufee4\001\002\000\012\172\ufede\u0152\ufede\u0153\ufede\u0159\ufede" +
    "\001\002\000\012\172\ufeec\u0152\ufeec\u0153\ufeec\u0159\ufeec\001" +
    "\002\000\012\172\ufedf\u0152\ufedf\u0153\ufedf\u0159\ufedf\001\002" +
    "\000\012\172\ufee1\u0152\ufee1\u0153\ufee1\u0159\ufee1\001\002\000" +
    "\012\172\ufee9\u0152\ufee9\u0153\ufee9\u0159\ufee9\001\002\000\004" +
    "\156\u034f\001\002\000\024\023\075\072\101\250\100\252" +
    "\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e\065\001\002" +
    "\000\004\u0153\u034b\001\002\000\024\023\075\072\101\250" +
    "\100\252\077\u0106\057\u013d\063\u013f\060\u0158\061\u015e\065" +
    "\001\002\000\004\u0159\u034d\001\002\000\006\251\u0348\356" +
    "\u033d\001\002\000\012\172\ufee2\u0152\ufee2\u0153\ufee2\u0159\ufee2" +
    "\001\002\000\004\337\u0350\001\002\000\004\356\u033d\001" +
    "\002\000\012\172\ufee0\u0152\ufee0\u0153\ufee0\u0159\ufee0\001\002" +
    "\000\024\047\uff1b\062\uff1b\063\u02bb\113\uff1b\160\uff1b\314" +
    "\uff1b\336\uff1b\u0120\uff1b\u0161\u02bd\001\002\000\004\002\uffb3" +
    "\001\002\000\004\002\uffb5\001\002\000\004\002\uffb4\001" +
    "\002\000\020\047\uff1c\062\uff1c\113\uff1c\160\uff1c\314\uff1c" +
    "\336\uff1c\u0120\uff1c\001\002\000\004\002\uffb6\001\002\000" +
    "\004\u0161\u0359\001\002\000\010\007\u035b\132\u035c\u0161\u035d" +
    "\001\002\000\004\002\uffc9\001\002\000\006\251\u0373\356" +
    "\u0372\001\002\000\006\251\u0373\356\u0372\001\002\000\006" +
    "\u0154\u035f\u0158\uffc2\001\002\000\004\u0158\u0362\001\002\000" +
    "\004\u0161\u0360\001\002\000\004\u0158\uffc3\001\002\000\004" +
    "\002\uffc6\001\002\000\004\u013d\u0363\001\002\000\006\u0153" +
    "\u0364\u0159\uffbf\001\002\000\004\220\u0370\001\002\000\004" +
    "\u0159\u0366\001\002\000\012\002\uffbb\054\u0368\251\u036a\253" +
    "\u036c\001\002\000\004\002\uffbc\001\002\000\004\u0161\u036e" +
    "\001\002\000\004\002\uffbd\001\002\000\004\253\u036d\001" +
    "\002\000\004\002\uffc1\001\002\000\004\002\uffba\001\002" +
    "\000\004\002\uffb9\001\002\000\010\002\uffbb\251\u036a\253" +
    "\u036c\001\002\000\004\002\uffbe\001\002\000\004\u0159\uffc0" +
    "\001\002\000\004\002\uffc4\001\002\000\004\002\uffb8\001" +
    "\002\000\004\156\u0374\001\002\000\004\337\u0375\001\002" +
    "\000\004\002\uffb7\001\002\000\004\002\uffc5\001\002\000" +
    "\004\002\uffd4\001\002\000\004\054\uffa7\001\002\000\004" +
    "\054\u037b\001\002\000\004\054\uffa8\001\002\000\004\u0161" +
    "\u037d\001\002\000\004\002\uffd1\001\002\000\006\172\u02a4" +
    "\u0152\u02a3\001\002\000\004\002\uffa6\001\002\000\022\002" +
    "\ufdf1\116\ufdf1\135\ufdf1\172\ufdf1\216\ufdf1\361\ufdf1\u0124\ufdf1" +
    "\u0152\ufdf1\001\002\000\014\113\u038d\312\244\361\007\u012b" +
    "\u0394\u0158\u023c\001\002\000\004\u0158\u0386\001\002\000\004" +
    "\u0161\034\001\002\000\022\002\ufdeb\116\ufdeb\135\ufdeb\172" +
    "\ufdeb\216\ufdeb\361\ufdeb\u0124\ufdeb\u0152\ufdeb\001\002\000\022" +
    "\002\ufdef\116\ufdef\135\ufdef\172\ufdef\216\ufdef\361\ufdef\u0124" +
    "\ufdef\u0152\ufdef\001\002\000\022\002\ufdec\116\ufdec\135\ufdec" +
    "\172\ufdec\216\ufdec\361\ufdec\u0124\ufdec\u0152\ufdec\001\002\000" +
    "\024\023\075\072\101\250\100\252\077\u0106\057\u013d\063" +
    "\u013f\060\u0158\061\u015e\065\001\002\000\004\u0159\u0388\001" +
    "\002\000\010\223\u0382\307\u038a\u0161\034\001\002\000\022" +
    "\002\ufdf0\116\ufdf0\135\ufdf0\172\ufdf0\216\ufdf0\361\ufdf0\u0124" +
    "\ufdf0\u0152\ufdf0\001\002\000\006\223\u0382\u0161\034\001\002" +
    "\000\022\002\ufded\116\ufded\135\ufded\172\ufded\216\ufded\361" +
    "\ufded\u0124\ufded\u0152\ufded\001\002\000\022\002\ufdee\116\ufdee" +
    "\135\ufdee\172\ufdee\216\ufdee\361\ufdee\u0124\ufdee\u0152\ufdee\001" +
    "\002\000\004\u012b\u03aa\001\002\000\022\002\ufde6\116\ufde6" +
    "\135\ufde6\172\ufde6\216\ufde6\361\ufde6\u0124\ufde6\u0152\ufde6\001" +
    "\002\000\012\113\u038d\312\244\361\007\u012b\u0394\001\002" +
    "\000\022\002\ufde8\116\ufde8\135\ufde8\172\ufde8\216\ufde8\361" +
    "\ufde8\u0124\ufde8\u0152\ufde8\001\002\000\010\113\u038d\361\007" +
    "\u012b\u0394\001\002\000\022\002\ufdea\116\ufdea\135\ufdea\172" +
    "\ufdea\216\ufdea\361\ufdea\u0124\ufdea\u0152\ufdea\001\002\000\006" +
    "\172\u03a3\u0152\u03a1\001\002\000\004\u0158\u0395\001\002\000" +
    "\036\023\075\072\101\113\u0398\250\100\251\062\252\077" +
    "\253\u0399\u0106\057\u013d\063\u013f\060\u0140\072\u0158\061\u015e" +
    "\065\u0161\067\001\002\000\006\u0153\u039d\u0159\u039b\001\002" +
    "\000\006\u0153\ufddf\u0159\ufddf\001\002\000\006\u0153\ufde1\u0159" +
    "\ufde1\001\002\000\006\u0153\ufde0\u0159\ufde0\001\002\000\022" +
    "\002\ufde5\116\ufde5\135\ufde5\172\ufde5\216\ufde5\361\ufde5\u0124" +
    "\ufde5\u0152\ufde5\001\002\000\010\172\u03a3\u0152\u03a1\u0153\u03a2" +
    "\001\002\000\022\002\ufde2\116\ufde2\135\ufde2\172\ufde2\216" +
    "\ufde2\361\ufde2\u0124\ufde2\u0152\ufde2\001\002\000\036\023\075" +
    "\072\101\113\u0398\250\100\251\062\252\077\253\u0399\u0106" +
    "\057\u013d\063\u013f\060\u0140\072\u0158\061\u015e\065\u0161\067" +
    "\001\002\000\022\002\ufdde\116\ufdde\135\ufdde\172\ufdde\216" +
    "\ufdde\361\ufdde\u0124\ufdde\u0152\ufdde\001\002\000\022\002\ufddd" +
    "\116\ufddd\135\ufddd\172\ufddd\216\ufddd\361\ufddd\u0124\ufddd\u0152" +
    "\ufddd\001\002\000\022\002\ufddb\116\ufddb\135\ufddb\172\ufddb" +
    "\216\ufddb\361\ufddb\u0124\ufddb\u0152\ufddb\001\002\000\022\002" +
    "\ufdda\116\ufdda\135\ufdda\172\ufdda\216\ufdda\361\ufdda\u0124\ufdda" +
    "\u0152\ufdda\001\002\000\004\u012b\u03a4\001\002\000\022\002" +
    "\ufdd9\116\ufdd9\135\ufdd9\172\ufdd9\216\ufdd9\361\ufdd9\u0124\ufdd9" +
    "\u0152\ufdd9\001\002\000\004\u0158\u03a5\001\002\000\036\023" +
    "\075\072\101\113\u0398\250\100\251\062\252\077\253\u0399" +
    "\u0106\057\u013d\063\u013f\060\u0140\072\u0158\061\u015e\065\u0161" +
    "\067\001\002\000\022\002\ufddc\116\ufddc\135\ufddc\172\ufddc" +
    "\216\ufddc\361\ufddc\u0124\ufddc\u0152\ufddc\001\002\000\022\002" +
    "\ufde4\116\ufde4\135\ufde4\172\ufde4\216\ufde4\361\ufde4\u0124\ufde4" +
    "\u0152\ufde4\001\002\000\022\002\ufde7\116\ufde7\135\ufde7\172" +
    "\ufde7\216\ufde7\361\ufde7\u0124\ufde7\u0152\ufde7\001\002\000\022" +
    "\002\ufde9\116\ufde9\135\ufde9\172\ufde9\216\ufde9\361\ufde9\u0124" +
    "\ufde9\u0152\ufde9\001\002\000\006\172\u03a3\u0152\u03a1\001\002" +
    "\000\022\002\ufde3\116\ufde3\135\ufde3\172\ufde3\216\ufde3\361" +
    "\ufde3\u0124\ufde3\u0152\ufde3\001\002\000\004\u0161\u0456\001\002" +
    "\000\004\u0161\u0453\001\002\000\004\u0161\u041a\001\002\000" +
    "\004\u0161\u041a\001\002\000\004\u0161\u0401\001\002\000\004" +
    "\u0161\034\001\002\000\004\u0161\u03bb\001\002\000\024\003" +
    "\021\012\016\073\014\116\023\132\017\216\015\361\007" +
    "\u011d\011\u0124\024\001\002\000\004\012\u03b6\001\002\000" +
    "\004\002\ufdb3\001\002\000\012\171\u03b2\316\u03af\322\u03ae" +
    "\u012f\u03b0\001\002\000\024\003\021\012\016\073\014\116" +
    "\023\132\017\216\015\361\007\u011d\011\u0124\024\001\002" +
    "\000\004\002\ufdb1\001\002\000\004\002\ufdb0\001\002\000" +
    "\024\003\ufdaa\012\ufdaa\073\ufdaa\116\ufdaa\132\ufdaa\216\ufdaa" +
    "\361\ufdaa\u011d\ufdaa\u0124\ufdaa\001\002\000\006\u0154\u03bd\u0158" +
    "\ufe25\001\002\000\004\u0158\u03bf\001\002\000\004\u0161\u03be" +
    "\001\002\000\004\u0158\ufe26\001\002\000\006\u0159\ufe23\u015e" +
    "\u03c1\001\002\000\004\u0159\u03cf\001\002\000\004\u0161\u03c2" +
    "\001\002\000\040\016\u03c3\027\ufe21\043\ufe21\104\ufe21\111" +
    "\ufe21\157\ufe21\217\ufe21\220\ufe21\265\ufe21\274\ufe21\340\ufe21" +
    "\367\ufe21\u010e\ufe21\u012c\ufe21\u0161\ufe21\001\002\000\040\025" +
    "\ufe22\027\ufe22\043\ufe22\104\ufe22\111\ufe22\157\ufe22\217\ufe22" +
    "\220\ufe22\265\ufe22\274\ufe22\340\ufe22\367\ufe22\u010e\ufe22\u012c" +
    "\ufe22\u0161\ufe22\001\002\000\036\027\u0192\043\u019a\104\u018e" +
    "\111\u018c\157\u019b\217\u018b\220\u018d\265\u0191\274\u0190\340" +
    "\u0197\367\u0195\u010e\u018f\u012c\u0193\u0161\u0196\001\002\000\010" +
    "\u014c\u03c7\u0159\ufe1f\u015e\ufe1f\001\002\000\006\u0159\ufe23\u015e" +
    "\u03c1\001\002\000\014\253\u03ca\u013d\u03cb\u013f\u03c9\u0140\u03cc" +
    "\u0163\u03cd\001\002\000\006\u0159\ufe20\u015e\ufe20\001\002\000" +
    "\020\016\ufe08\156\ufe08\312\ufe08\u0134\ufe08\u0153\ufe08\u0159\ufe08" +
    "\u015e\ufe08\001\002\000\020\016\ufe05\156\ufe05\312\ufe05\u0134" +
    "\ufe05\u0153\ufe05\u0159\ufe05\u015e\ufe05\001\002\000\020\016\ufe07" +
    "\156\ufe07\312\ufe07\u0134\ufe07\u0153\ufe07\u0159\ufe07\u015e\ufe07\001" +
    "\002\000\020\016\ufe09\156\ufe09\312\ufe09\u0134\ufe09\u0153\ufe09" +
    "\u0159\ufe09\u015e\ufe09\001\002\000\020\016\ufe06\156\ufe06\312" +
    "\ufe06\u0134\ufe06\u0153\ufe06\u0159\ufe06\u015e\ufe06\001\002\000\004" +
    "\u0159\ufe24\001\002\000\004\345\u03d0\001\002\000\036\027" +
    "\u0192\043\u019a\104\u018e\111\u018c\157\u019b\217\u018b\220\u018d" +
    "\265\u0191\274\u0190\340\u0197\367\u0195\u010e\u018f\u012c\u0193\u0161" +
    "\u0196\001\002\000\010\016\u03c3\025\ufe21\u0134\u03d5\001\002" +
    "\000\024\003\ufe1d\012\ufe1d\073\ufe1d\116\ufe1d\132\ufe1d\216" +
    "\ufe1d\361\ufe1d\u011d\ufe1d\u0124\ufe1d\001\002\000\024\003\ufe27" +
    "\012\ufe27\073\ufe27\116\ufe27\132\ufe27\216\ufe27\361\ufe27\u011d" +
    "\ufe27\u0124\ufe27\001\002\000\004\025\u03dc\001\002\000\004" +
    "\345\u03d6\001\002\000\004\253\u03d7\001\002\000\004\270" +
    "\u03d8\001\002\000\004\253\u03d9\001\002\000\004\212\u03da" +
    "\001\002\000\006\016\u03c3\025\ufe21\001\002\000\024\003" +
    "\ufe1e\012\ufe1e\073\ufe1e\116\ufe1e\132\ufe1e\216\ufe1e\361\ufe1e" +
    "\u011d\ufe1e\u0124\ufe1e\001\002\000\012\116\023\216\015\361" +
    "\007\u0124\024\001\002\000\014\116\023\135\ufe16\216\015" +
    "\361\007\u0124\024\001\002\000\014\116\ufe19\135\ufe19\216" +
    "\ufe19\361\ufe19\u0124\ufe19\001\002\000\006\172\u03e4\u0152\u03e2" +
    "\001\002\000\014\116\ufe1a\135\ufe1a\216\ufe1a\361\ufe1a\u0124" +
    "\ufe1a\001\002\000\014\116\ufe18\135\ufe18\216\ufe18\361\ufe18" +
    "\u0124\ufe18\001\002\000\032\003\ufe0b\012\ufe0b\073\ufe0b\116" +
    "\ufe0b\132\ufe0b\135\ufe0b\172\ufe0b\216\ufe0b\361\ufe0b\u011d\ufe0b" +
    "\u0124\ufe0b\u0152\ufe0b\001\002\000\014\116\ufe1b\135\ufe1b\216" +
    "\ufe1b\361\ufe1b\u0124\ufe1b\001\002\000\032\003\ufe0a\012\ufe0a" +
    "\073\ufe0a\116\ufe0a\132\ufe0a\135\ufe0a\172\ufe0a\216\ufe0a\361" +
    "\ufe0a\u011d\ufe0a\u0124\ufe0a\u0152\ufe0a\001\002\000\004\135\u03e8" +
    "\001\002\000\014\116\023\135\ufe16\216\015\361\007\u0124" +
    "\024\001\002\000\004\135\ufe17\001\002\000\006\172\u03e4" +
    "\u0152\u03e2\001\002\000\024\003\ufe1c\012\ufe1c\073\ufe1c\116" +
    "\ufe1c\132\ufe1c\216\ufe1c\361\ufe1c\u011d\ufe1c\u0124\ufe1c\001\002" +
    "\000\004\u0158\u03ec\001\002\000\004\002\ufdae\001\002\000" +
    "\024\047\uff1b\062\uff1b\063\u02bb\113\uff1b\160\uff1b\314\uff1b" +
    "\336\uff1b\u0120\uff1b\u0161\u02bd\001\002\000\006\u0153\ufe14\u0159" +
    "\ufe14\001\002\000\006\u0153\u03f2\u0159\ufe10\001\002\000\006" +
    "\u0153\ufe12\u0159\ufe12\001\002\000\006\u0153\ufe13\u0159\ufe13\001" +
    "\002\000\004\u0159\u03f5\001\002\000\024\047\uff1b\062\uff1b" +
    "\063\u02bb\113\uff1b\160\uff1b\314\uff1b\336\uff1b\u0120\uff1b\u0161" +
    "\u02bd\001\002\000\006\u0153\u03f2\u0159\ufe10\001\002\000\004" +
    "\u0159\ufe11\001\002\000\010\172\ufe0e\270\u03f7\u0152\ufe0e\001" +
    "\002\000\006\172\u03e4\u0152\u03e2\001\002\000\006\314\u03f9" +
    "\u0161\u03fa\001\002\000\006\172\ufe0f\u0152\ufe0f\001\002\000" +
    "\006\172\ufe0c\u0152\ufe0c\001\002\000\004\u0158\u03fb\001\002" +
    "\000\004\u0161\u03fc\001\002\000\004\u0159\u03fd\001\002\000" +
    "\006\172\ufe0d\u0152\ufe0d\001\002\000\024\003\021\012\016" +
    "\073\014\116\023\132\017\216\015\361\007\u011d\011\u0124" +
    "\024\001\002\000\004\002\ufe15\001\002\000\024\003\ufdab" +
    "\012\ufdab\073\ufdab\116\ufdab\132\ufdab\216\ufdab\361\ufdab\u011d" +
    "\ufdab\u0124\ufdab\001\002\000\010\016\ufd9d\u0154\u0403\u0158\ufd9d" +
    "\001\002\000\006\016\u0406\u0158\u0407\001\002\000\004\u0161" +
    "\u0404\001\002\000\006\016\ufd9e\u0158\ufd9e\001\002\000\024" +
    "\003\ufd9f\012\ufd9f\073\ufd9f\116\ufd9f\132\ufd9f\216\ufd9f\361" +
    "\ufd9f\u011d\ufd9f\u0124\ufd9f\001\002\000\004\361\007\001\002" +
    "\000\006\u0159\ufd99\u0161\u0408\001\002\000\006\u0153\u0413\u0159" +
    "\ufd97\001\002\000\004\u0159\u040a\001\002\000\004\016\u040b" +
    "\001\002\000\004\361\007\001\002\000\010\172\u03e4\u0134" +
    "\u040e\u0152\u03e2\001\002\000\024\003\ufd95\012\ufd95\073\ufd95" +
    "\116\ufd95\132\ufd95\216\ufd95\361\ufd95\u011d\ufd95\u0124\ufd95\001" +
    "\002\000\004\047\u0410\001\002\000\024\003\ufd9c\012\ufd9c" +
    "\073\ufd9c\116\ufd9c\132\ufd9c\216\ufd9c\361\ufd9c\u011d\ufd9c\u0124" +
    "\ufd9c\001\002\000\004\301\u0411\001\002\000\006\172\u03e4" +
    "\u0152\u03e2\001\002\000\024\003\ufd96\012\ufd96\073\ufd96\116" +
    "\ufd96\132\ufd96\216\ufd96\361\ufd96\u011d\ufd96\u0124\ufd96\001\002" +
    "\000\004\u0161\u0415\001\002\000\004\u0159\ufd9a\001\002\000" +
    "\006\u0153\u0413\u0159\ufd97\001\002\000\004\u0159\ufd98\001\002" +
    "\000\010\172\u03e4\u0134\u040e\u0152\u03e2\001\002\000\024\003" +
    "\ufd9b\012\ufd9b\073\ufd9b\116\ufd9b\132\ufd9b\216\ufd9b\361\ufd9b" +
    "\u011d\ufd9b\u0124\ufd9b\001\002\000\024\003\ufdad\012\ufdad\073" +
    "\ufdad\116\ufdad\132\ufdad\216\ufdad\361\ufdad\u011d\ufdad\u0124\ufdad" +
    "\001\002\000\010\u0152\u041e\u0154\u041f\u015e\u0420\001\002\000" +
    "\024\003\ufd90\012\ufd90\073\ufd90\116\ufd90\132\ufd90\216\ufd90" +
    "\361\ufd90\u011d\ufd90\u0124\ufd90\001\002\000\024\003\ufd92\012" +
    "\ufd92\073\ufd92\116\ufd92\132\ufd92\216\ufd92\361\ufd92\u011d\ufd92" +
    "\u0124\ufd92\001\002\000\024\003\ufd94\012\ufd94\073\ufd94\116" +
    "\ufd94\132\ufd94\216\ufd94\361\ufd94\u011d\ufd94\u0124\ufd94\001\002" +
    "\000\004\u013d\u0450\001\002\000\004\u0161\u044e\001\002\000" +
    "\004\u0161\u0421\001\002\000\040\016\u0422\027\ufd8d\043\ufd8d" +
    "\104\ufd8d\111\ufd8d\157\ufd8d\217\ufd8d\220\ufd8d\265\ufd8d\274" +
    "\ufd8d\340\ufd8d\367\ufd8d\u010e\ufd8d\u012c\ufd8d\u0161\ufd8d\001\002" +
    "\000\036\027\ufd8e\043\ufd8e\104\ufd8e\111\ufd8e\157\ufd8e\217" +
    "\ufd8e\220\ufd8e\265\ufd8e\274\ufd8e\340\ufd8e\367\ufd8e\u010e\ufd8e" +
    "\u012c\ufd8e\u0161\ufd8e\001\002\000\036\027\u0192\043\u019a\104" +
    "\u018e\111\u018c\157\u019b\217\u018b\220\u018d\265\u0191\274\u0190" +
    "\340\u0197\367\u0195\u010e\u018f\u012c\u0193\u0161\u0196\001\002\000" +
    "\020\016\u042b\156\u0428\312\u0427\u012d\u042d\u0134\u042c\u014c\u042a" +
    "\u0153\u0429\001\002\000\024\003\ufd8f\012\ufd8f\073\ufd8f\116" +
    "\ufd8f\132\ufd8f\216\ufd8f\361\ufd8f\u011d\ufd8f\u0124\ufd8f\001\002" +
    "\000\024\003\ufd85\012\ufd85\073\ufd85\116\ufd85\132\ufd85\216" +
    "\ufd85\361\ufd85\u011d\ufd85\u0124\ufd85\001\002\000\012\016\u042b" +
    "\156\u0428\u0134\u042c\u0153\u0429\001\002\000\004\337\u044b\001" +
    "\002\000\004\u015e\u0420\001\002\000\014\253\u03ca\u013d\u03cb" +
    "\u013f\u03c9\u0140\u03cc\u0163\u03cd\001\002\000\014\025\u043b\116" +
    "\ufd7b\216\ufd7b\361\ufd7b\u0124\ufd7b\001\002\000\006\143\u0435" +
    "\144\u0434\001\002\000\016\016\u042b\156\u0428\312\u0427\u0134" +
    "\u042c\u014c\u042a\u0153\u0429\001\002\000\024\003\ufd87\012\ufd87" +
    "\073\ufd87\116\ufd87\132\ufd87\216\ufd87\361\ufd87\u011d\ufd87\u0124" +
    "\ufd87\001\002\000\024\003\ufd89\012\ufd89\073\ufd89\116\ufd89" +
    "\132\ufd89\216\ufd89\361\ufd89\u011d\ufd89\u0124\ufd89\001\002\000" +
    "\024\003\ufd7e\012\ufd7e\073\ufd7e\116\ufd7e\132\ufd7e\216\ufd7e" +
    "\361\ufd7e\u011d\ufd7e\u0124\ufd7e\001\002\000\024\003\ufd8b\012" +
    "\ufd8b\073\ufd8b\116\ufd8b\132\ufd8b\216\ufd8b\361\ufd8b\u011d\ufd8b" +
    "\u0124\ufd8b\001\002\000\024\003\ufd83\012\ufd83\073\ufd83\116" +
    "\ufd83\132\ufd83\216\ufd83\361\ufd83\u011d\ufd83\u0124\ufd83\001\002" +
    "\000\024\003\ufd8c\012\ufd8c\073\ufd8c\116\ufd8c\132\ufd8c\216" +
    "\ufd8c\361\ufd8c\u011d\ufd8c\u0124\ufd8c\001\002\000\004\016\ufd82" +
    "\001\002\000\004\016\ufd81\001\002\000\004\016\u0437\001" +
    "\002\000\004\u0140\u0439\001\002\000\006\016\u042b\156\u0428" +
    "\001\002\000\006\016\ufd80\156\ufd80\001\002\000\024\003" +
    "\ufd84\012\ufd84\073\ufd84\116\ufd84\132\ufd84\216\ufd84\361\ufd84" +
    "\u011d\ufd84\u0124\ufd84\001\002\000\012\116\ufd7c\216\ufd7c\361" +
    "\ufd7c\u0124\ufd7c\001\002\000\012\116\023\216\015\361\007" +
    "\u0124\024\001\002\000\020\116\ufd78\135\ufd78\172\ufd78\216" +
    "\ufd78\361\ufd78\u0124\ufd78\u0152\ufd78\001\002\000\006\172\u03e4" +
    "\u0152\u03e2\001\002\000\020\116\ufd79\135\ufd79\172\ufd79\216" +
    "\ufd79\361\ufd79\u0124\ufd79\u0152\ufd79\001\002\000\020\116\023" +
    "\135\u0444\172\ufd74\216\015\361\007\u0124\024\u0152\ufd74\001" +
    "\002\000\020\116\ufd77\135\ufd77\172\ufd77\216\ufd77\361\ufd77" +
    "\u0124\ufd77\u0152\ufd77\001\002\000\006\172\u03e4\u0152\u03e2\001" +
    "\002\000\020\116\023\135\u0444\172\ufd74\216\015\361\007" +
    "\u0124\024\u0152\ufd74\001\002\000\006\172\ufd75\u0152\ufd75\001" +
    "\002\000\006\172\ufd76\u0152\ufd76\001\002\000\024\003\ufd7d" +
    "\012\ufd7d\073\ufd7d\116\ufd7d\132\ufd7d\216\ufd7d\361\ufd7d\u011d" +
    "\ufd7d\u0124\ufd7d\001\002\000\020\116\ufd7a\135\ufd7a\172\ufd7a" +
    "\216\ufd7a\361\ufd7a\u0124\ufd7a\u0152\ufd7a\001\002\000\014\016" +
    "\u042b\156\u0428\312\u0427\u0134\u042c\u0153\u0429\001\002\000\024" +
    "\003\ufd8a\012\ufd8a\073\ufd8a\116\ufd8a\132\ufd8a\216\ufd8a\361" +
    "\ufd8a\u011d\ufd8a\u0124\ufd8a\001\002\000\024\003\ufd86\012\ufd86" +
    "\073\ufd86\116\ufd86\132\ufd86\216\ufd86\361\ufd86\u011d\ufd86\u0124" +
    "\ufd86\001\002\000\004\016\u042b\001\002\000\024\003\ufd7f" +
    "\012\ufd7f\073\ufd7f\116\ufd7f\132\ufd7f\216\ufd7f\361\ufd7f\u011d" +
    "\ufd7f\u0124\ufd7f\001\002\000\024\003\ufd88\012\ufd88\073\ufd88" +
    "\116\ufd88\132\ufd88\216\ufd88\361\ufd88\u011d\ufd88\u0124\ufd88\001" +
    "\002\000\006\u0152\u041e\u015e\u0420\001\002\000\024\003\ufd93" +
    "\012\ufd93\073\ufd93\116\ufd93\132\ufd93\216\ufd93\361\ufd93\u011d" +
    "\ufd93\u0124\ufd93\001\002\000\004\u015e\u0420\001\002\000\024" +
    "\003\ufd91\012\ufd91\073\ufd91\116\ufd91\132\ufd91\216\ufd91\361" +
    "\ufd91\u011d\ufd91\u0124\ufd91\001\002\000\024\003\ufdac\012\ufdac" +
    "\073\ufdac\116\ufdac\132\ufdac\216\ufdac\361\ufdac\u011d\ufdac\u0124" +
    "\ufdac\001\002\000\006\172\u03e4\u0152\u03e2\001\002\000\024" +
    "\003\021\012\016\073\014\116\023\132\017\216\015\361" +
    "\007\u011d\011\u0124\024\001\002\000\004\002\ufdaf\001\002" +
    "\000\010\172\ufda8\270\u0457\u0152\ufda8\001\002\000\004\314" +
    "\u045b\001\002\000\006\172\u03e4\u0152\u03e2\001\002\000\024" +
    "\003\021\012\016\073\014\116\023\132\017\216\015\361" +
    "\007\u011d\011\u0124\024\001\002\000\004\002\ufdb2\001\002" +
    "\000\004\u0158\u0461\001\002\000\010\054\u045d\172\ufda5\u0152" +
    "\ufda5\001\002\000\004\u0161\u045f\001\002\000\006\172\ufda9" +
    "\u0152\ufda9\001\002\000\006\172\ufda6\u0152\ufda6\001\002\000" +
    "\010\054\ufda7\172\ufda7\u0152\ufda7\001\002\000\004\261\u0462" +
    "\001\002\000\004\u014c\u0463\001\002\000\004\u0140\u0464\001" +
    "\002\000\004\u0153\u0465\001\002\000\004\153\u0466\001\002" +
    "\000\004\u014c\u0467\001\002\000\004\u0140\u0468\001\002\000" +
    "\006\u0153\u046a\u0159\ufda0\001\002\000\004\u0159\u046e\001\002" +
    "\000\004\365\u046b\001\002\000\004\u014c\u046c\001\002\000" +
    "\004\u013d\u046d\001\002\000\004\u0159\ufda1\001\002\000\010" +
    "\054\ufda2\172\ufda2\u0152\ufda2\001\002\000\004\002\ufffe\001" +
    "\002\000\004\u0161\034\001\002\000\010\172\ufff4\u0152\ufff4" +
    "\u0153\u0473\001\002\000\006\172\u0477\u0152\u0476\001\002\000" +
    "\004\u0161\034\001\002\000\006\172\ufff5\u0152\ufff5\001\002" +
    "\000\004\002\ufff6\001\002\000\004\002\ufff3\001\002\000" +
    "\004\002\ufff2\001\002\000\102\023\ufdd5\040\ufdd5\041\ufdd5" +
    "\043\ufdd5\070\ufdd5\072\ufdd5\100\ufdd5\105\ufdd5\231\ufdd5\244" +
    "\ufdd5\250\ufdd5\251\ufdd5\252\ufdd5\260\ufdd5\265\ufdd5\347\ufdd5" +
    "\364\ufdd5\373\ufdd5\u0105\ufdd5\u0106\ufdd5\u0116\ufdd5\u0119\ufdd5\u011b" +
    "\ufdd5\u0125\ufdd5\u0138\ufdd5\u013d\ufdd5\u013f\ufdd5\u0140\ufdd5\u0145\ufdd5" +
    "\u0158\ufdd5\u015e\ufdd5\u0161\ufdd5\001\002\000\102\023\075\040" +
    "\321\041\312\043\315\070\324\072\101\100\350\105\355" +
    "\231\340\244\322\250\100\251\062\252\077\260\320\265" +
    "\346\347\353\364\356\373\313\u0105\314\u0106\057\u0116\u047e" +
    "\u0119\334\u011b\331\u0125\354\u0138\336\u013d\063\u013f\060\u0140" +
    "\072\u0145\u013a\u0158\061\u015e\065\u0161\u0137\001\002\000\012" +
    "\002\ufdd8\172\ufdd8\u0134\ufdd8\u0152\ufdd8\001\002\000\102\023" +
    "\ufdd6\040\ufdd6\041\ufdd6\043\ufdd6\070\ufdd6\072\ufdd6\100\ufdd6" +
    "\105\ufdd6\231\ufdd6\244\ufdd6\250\ufdd6\251\ufdd6\252\ufdd6\260" +
    "\ufdd6\265\ufdd6\347\ufdd6\364\ufdd6\373\ufdd6\u0105\ufdd6\u0106\ufdd6" +
    "\u0116\ufdd6\u0119\ufdd6\u011b\ufdd6\u0125\ufdd6\u0138\ufdd6\u013d\ufdd6\u013f" +
    "\ufdd6\u0140\ufdd6\u0145\ufdd6\u0158\ufdd6\u015e\ufdd6\u0161\ufdd6\001\002" +
    "\000\012\002\ufdd2\172\ufdd2\u0134\ufdd2\u0152\ufdd2\001\002\000" +
    "\012\002\ufdd7\172\ufdd7\u0134\ufdd7\u0152\ufdd7\001\002\000\004" +
    "\u0158\u04a2\001\002\000\030\002\ufdbf\164\u048b\172\ufdbf\175" +
    "\u048a\176\u0487\223\u0485\304\u048c\u0133\u0481\u0134\ufdbf\u0152\ufdbf" +
    "\u0153\u0488\001\002\000\012\002\ufdc1\172\ufdc1\u0134\ufdc1\u0152" +
    "\ufdc1\001\002\000\104\023\uff76\040\uff76\041\uff76\043\uff76" +
    "\065\uff76\070\uff76\072\uff76\100\uff76\105\uff76\161\uff76\231" +
    "\uff76\244\uff76\246\301\250\uff76\251\300\252\uff76\256\uff76" +
    "\260\uff76\265\uff76\266\uff76\347\uff76\363\uff76\364\uff76\373" +
    "\uff76\u0105\uff76\u0106\uff76\u0109\uff76\u0119\uff76\u011b\uff76\u0125\uff76" +
    "\u0138\uff76\u0158\305\u0161\uff76\001\002\000\012\002\ufdc3\172" +
    "\ufdc3\u0134\ufdc3\u0152\ufdc3\001\002\000\012\002\ufdc5\172\ufdc5" +
    "\u0134\ufdc5\u0152\ufdc5\001\002\000\012\002\ufdc7\172\ufdc7\u0134" +
    "\ufdc7\u0152\ufdc7\001\002\000\004\u0161\034\001\002\000\012" +
    "\002\ufdca\172\ufdca\u0134\ufdca\u0152\ufdca\001\002\000\104\023" +
    "\uff76\040\uff76\041\uff76\043\uff76\065\uff76\070\uff76\072\uff76" +
    "\100\uff76\105\uff76\161\uff76\231\uff76\244\uff76\246\301\250" +
    "\uff76\251\300\252\uff76\256\uff76\260\uff76\265\uff76\266\uff76" +
    "\347\uff76\363\uff76\364\uff76\373\uff76\u0105\uff76\u0106\uff76\u0109" +
    "\uff76\u0119\uff76\u011b\uff76\u0125\uff76\u0138\uff76\u0158\305\u0161\uff76" +
    "\001\002\000\100\023\075\040\321\041\312\043\315\070" +
    "\324\072\101\100\350\105\355\231\340\244\322\250\100" +
    "\251\062\252\077\260\320\265\346\347\353\364\356\373" +
    "\313\u0105\314\u0106\057\u0119\334\u011b\331\u0125\354\u0138\336" +
    "\u013d\063\u013f\060\u0140\072\u0145\u013a\u0158\061\u015e\065\u0161" +
    "\u0137\001\002\000\012\002\ufdcc\172\ufdcc\u0134\ufdcc\u0152\ufdcc" +
    "\001\002\000\004\035\u0492\001\002\000\014\273\253\276" +
    "\255\u0158\257\u015e\260\u0161\034\001\002\000\004\035\u048e" +
    "\001\002\000\012\002\ufdce\172\ufdce\u0134\ufdce\u0152\ufdce\001" +
    "\002\000\100\023\075\040\321\041\312\043\315\070\324" +
    "\072\101\100\350\105\355\231\340\244\322\250\100\251" +
    "\062\252\077\260\320\265\346\347\353\364\356\373\313" +
    "\u0105\314\u0106\057\u0119\334\u011b\331\u0125\354\u0138\336\u013d" +
    "\063\u013f\060\u0140\072\u0145\u013a\u0158\061\u015e\065\u0161\u0137" +
    "\001\002\000\012\002\ufdc0\172\ufdc0\u0134\ufdc0\u0152\ufdc0\001" +
    "\002\000\022\002\ufdbf\172\ufdbf\175\u048a\176\u0487\304\u048c" +
    "\u0133\u0481\u0134\ufdbf\u0152\ufdbf\001\002\000\012\002\ufdc8\172" +
    "\ufdc8\u0134\ufdc8\u0152\ufdc8\001\002\000\032\023\075\072\101" +
    "\250\100\251\062\252\077\u0106\057\u013d\063\u013f\060\u0140" +
    "\072\u0158\061\u015e\065\u0161\067\001\002\000\020\002\ufdbd" +
    "\172\ufdbd\176\ufdbd\304\ufdbd\u0134\ufdbd\u0152\ufdbd\u0153\u0494\001" +
    "\002\000\032\023\075\072\101\250\100\251\062\252\077" +
    "\u0106\057\u013d\063\u013f\060\u0140\072\u0158\061\u015e\065\u0161" +
    "\067\001\002\000\016\002\ufdbf\172\ufdbf\176\u0487\304\u048c" +
    "\u0134\ufdbf\u0152\ufdbf\001\002\000\012\002\ufdc4\172\ufdc4\u0134" +
    "\ufdc4\u0152\ufdc4\001\002\000\020\002\ufdbd\172\ufdbd\176\ufdbd" +
    "\304\ufdbd\u0134\ufdbd\u0152\ufdbd\u0153\u0494\001\002\000\016\002" +
    "\ufdbe\172\ufdbe\176\ufdbe\304\ufdbe\u0134\ufdbe\u0152\ufdbe\001\002" +
    "\000\012\002\ufdcd\172\ufdcd\u0134\ufdcd\u0152\ufdcd\001\002\000" +
    "\014\002\ufdbf\172\ufdbf\304\u048c\u0134\ufdbf\u0152\ufdbf\001\002" +
    "\000\012\002\ufdc2\172\ufdc2\u0134\ufdc2\u0152\ufdc2\001\002\000" +
    "\024\002\ufdbf\164\u048b\172\ufdbf\175\u048a\176\u0487\304\u048c" +
    "\u0133\u0481\u0134\ufdbf\u0152\ufdbf\001\002\000\012\002\ufdcb\172" +
    "\ufdcb\u0134\ufdcb\u0152\ufdcb\001\002\000\012\002\ufdc9\172\ufdc9" +
    "\u0134\ufdc9\u0152\ufdc9\001\002\000\020\002\ufdbf\172\ufdbf\175" +
    "\u048a\176\u0487\304\u048c\u0134\ufdbf\u0152\ufdbf\001\002\000\012" +
    "\002\ufdc6\172\ufdc6\u0134\ufdc6\u0152\ufdc6\001\002\000\012\002" +
    "\ufdd3\172\ufdd3\u0134\ufdd3\u0152\ufdd3\001\002\000\024\023\075" +
    "\072\101\250\100\252\077\u0106\057\u013d\063\u013f\060\u0158" +
    "\061\u015e\065\001\002\000\004\u0159\u04a4\001\002\000\102" +
    "\023\075\040\321\041\312\043\315\070\324\072\101\100" +
    "\350\105\355\231\340\244\322\250\100\251\062\252\077" +
    "\260\320\265\346\307\u04a5\347\353\364\356\373\313\u0105" +
    "\314\u0106\057\u0119\334\u011b\331\u0125\354\u0138\336\u013d\063" +
    "\u013f\060\u0140\072\u0145\u013a\u0158\061\u015e\065\u0161\u0137\001" +
    "\002\000\100\023\075\040\321\041\312\043\315\070\324" +
    "\072\101\100\350\105\355\231\340\244\322\250\100\251" +
    "\062\252\077\260\320\265\346\347\353\364\356\373\313" +
    "\u0105\314\u0106\057\u0119\334\u011b\331\u0125\354\u0138\336\u013d" +
    "\063\u013f\060\u0140\072\u0145\u013a\u0158\061\u015e\065\u0161\u0137" +
    "\001\002\000\012\002\ufdcf\172\ufdcf\u0134\ufdcf\u0152\ufdcf\001" +
    "\002\000\012\002\ufdd1\172\ufdd1\u0134\ufdd1\u0152\ufdd1\001\002" +
    "\000\012\002\ufdd0\172\ufdd0\u0134\ufdd0\u0152\ufdd0\001\002\000" +
    "\004\002\ufffb\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u04a7\000\024\002\024\003\003\264\017\306\005\323" +
    "\012\345\007\360\004\374\021\u012d\011\001\001\000\002" +
    "\001\001\000\024\002\u04a8\003\003\264\017\306\005\323" +
    "\012\345\007\360\004\374\021\u012d\011\001\001\000\002" +
    "\001\001\000\006\265\u0479\266\u0478\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\002\u046e" +
    "\003\003\264\017\306\005\323\012\345\007\360\004\374" +
    "\021\u012d\011\001\001\000\006\u012e\u03b4\u012f\u03b2\001\001" +
    "\000\012\006\u037f\307\u037e\311\u0383\312\u0382\001\001\000" +
    "\004\375\u02a0\001\001\000\004\362\u0279\001\001\000\002" +
    "\001\001\000\024\002\u0278\003\003\264\017\306\005\323" +
    "\012\345\007\360\004\374\021\u012d\011\001\001\000\002" +
    "\001\001\000\012\006\u0255\346\u025a\350\u0257\351\u0256\001" +
    "\001\000\010\006\026\324\031\326\027\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\327\u0254\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\342\u024d\001\001" +
    "\000\002\001\001\000\004\007\034\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\037\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\042\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\327\046\001\001\000\002\001\001\000\010\006\052\330" +
    "\051\331\050\001\001\000\014\170\245\336\241\337\240" +
    "\343\250\344\247\001\001\000\002\001\001\000\004\332" +
    "\231\001\001\000\002\001\001\000\002\001\001\000\022" +
    "\012\075\014\065\016\063\025\067\042\072\044\070\053" +
    "\073\335\101\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\012\224\014\065\016\063\025\067\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\015\215\001\001" +
    "\000\002\001\001\000\004\013\207\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\050\203\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\012\075\014\065\016" +
    "\063\025\067\042\174\044\070\053\073\001\001\000\002" +
    "\001\001\000\012\043\151\047\152\050\145\054\140\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\032\104\033\105\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\012\107\014\065" +
    "\016\063\025\067\034\112\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\035\114\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\036\122\037\123" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\012\125\014\065\016\063\025\067\040\124" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\041" +
    "\127\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\036\134\037\123\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\012\154\014\065\016\063\025\067\045\156" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\026\162\027\164\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\012\165\014\065" +
    "\016\063\025\067\030\166\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\031\170\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\046\177\054\175\055\201\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\044\204\001\001" +
    "\000\002\001\001\000\010\014\212\016\063\025\067\001" +
    "\001\000\010\014\210\016\063\025\067\001\001\000\002" +
    "\001\001\000\004\013\211\001\001\000\002\001\001\000" +
    "\004\013\213\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\016\222\025\067\001\001\000" +
    "\006\016\220\025\067\001\001\000\004\015\221\001\001" +
    "\000\002\001\001\000\004\015\223\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\036\227" +
    "\037\123\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\012\235\014\065\016\063\025\067" +
    "\042\234\044\070\053\073\334\233\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\043\151\047\152\050\145" +
    "\054\140\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\071\u024a\072\302" +
    "\106\301\112\276\001\001\000\020\012\u022b\014\065\016" +
    "\063\025\067\164\u022d\165\u022c\u0115\u022f\001\001\000\010" +
    "\006\052\330\u022a\331\050\001\001\000\006\343\u0229\344" +
    "\247\001\001\000\012\006\253\127\251\137\255\144\260" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\145" +
    "\u0228\001\001\000\002\001\001\000\004\145\u0218\001\001" +
    "\000\002\001\001\000\004\344\u0212\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\133\272\134\267\135\266" +
    "\140\271\001\001\000\002\001\001\000\004\136\u020a\001" +
    "\001\000\004\136\u0209\001\001\000\002\001\001\000\004" +
    "\136\u0205\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\006\253\127\251" +
    "\142\273\144\274\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\071\303\072\302\106\301\112\276\001\001" +
    "\000\024\006\327\017\356\025\341\056\325\074\u0200\075" +
    "\331\115\322\120\351\123\344\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\073\u01ec\001" +
    "\001\000\014\133\u01e7\134\267\135\266\141\u01e6\143\u01e5" +
    "\001\001\000\006\106\305\112\276\001\001\000\002\001" +
    "\001\000\004\107\307\001\001\000\002\001\001\000\030" +
    "\006\327\017\356\025\341\056\325\074\342\075\331\110" +
    "\316\111\315\115\322\120\351\123\344\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\012\075\014\065\016\063\025\067\042\u01c0\044" +
    "\070\053\073\057\u01c2\060\u01c1\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\006\327\017\356\025\341\056\325" +
    "\074\342\075\331\111\u0180\115\322\120\351\123\344\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\054\u0158" +
    "\076\u015a\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\106\u011f\112\276\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\107\u0116\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\007\034\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\117\362\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\116\367\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\121\375\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\121\u0102\001\001\000\002" +
    "\001\001\000\012\012\u0104\014\065\016\063\025\067\001" +
    "\001\000\002\001\001\000\002\001\001\000\020\012\075" +
    "\014\065\016\063\025\067\042\u0107\044\070\053\073\001" +
    "\001\000\002\001\001\000\020\012\075\014\065\016\063" +
    "\025\067\042\u0109\044\070\053\073\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\012\u010c\014\065\016\063" +
    "\025\067\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\u0111\103\u010f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\071\u0114\072\302\104" +
    "\u0113\106\301\112\276\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\121" +
    "\u0118\001\001\000\002\001\001\000\012\012\u011a\014\065" +
    "\016\063\025\067\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\116\u011d\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\107\u0121\001\001\000" +
    "\002\001\001\000\004\121\u0123\001\001\000\002\001\001" +
    "\000\004\121\u0125\001\001\000\002\001\001\000\004\121" +
    "\u0127\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\006\u012b\001\001\000\004\126\u012c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\036\012\075\014\065\016\063\017\u013a\025\u0134\042" +
    "\u0130\044\070\053\073\056\u0132\115\u0131\120\u0138\147\u0137" +
    "\154\u0135\155\u0133\001\001\000\004\161\u0157\001\001\000" +
    "\004\161\u0156\001\001\000\004\161\u0155\001\001\000\002" +
    "\001\001\000\004\161\u0154\001\001\000\010\150\u014f\151" +
    "\u014e\153\u014d\001\001\000\004\156\u0140\001\001\000\002" +
    "\001\001\000\004\161\u013f\001\001\000\002\001\001\000" +
    "\004\161\u013d\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\157\u0145\001\001\000\022\012\075" +
    "\014\065\016\063\025\067\042\u0144\044\070\053\073\162" +
    "\u0143\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\161\u0148\001\001\000" +
    "\002\001\001\000\004\152\u0151\001\001\000\002\001\001" +
    "\000\036\012\075\014\065\016\063\017\u013a\025\u0134\042" +
    "\u0130\044\070\053\073\056\u0132\115\u0131\120\u0138\147\u0150" +
    "\154\u0135\155\u0133\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\153\u0153\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\006\327\017\356\025\341\056" +
    "\325\075\u0179\115\322\120\351\123\344\001\001\000\022" +
    "\006\327\017\356\025\341\056\325\075\u0177\115\322\120" +
    "\351\123\344\001\001\000\002\001\001\000\022\006\327" +
    "\017\356\025\341\056\325\075\u0174\115\322\120\351\123" +
    "\344\001\001\000\004\077\u0169\001\001\000\022\006\327" +
    "\017\356\025\341\056\325\075\u0162\115\322\120\351\123" +
    "\344\001\001\000\004\100\u0160\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\102\u0163\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\006\327\017\356\025\341\056\325\075\u0172\115" +
    "\322\120\351\123\344\001\001\000\022\006\327\017\356" +
    "\025\341\056\325\075\u016d\115\322\120\351\123\344\001" +
    "\001\000\022\006\327\017\356\025\341\056\325\075\u016a" +
    "\115\322\120\351\123\344\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\006\327\017\356\025\341\056\325" +
    "\075\u016c\115\322\120\351\123\344\001\001\000\002\001" +
    "\001\000\004\101\u016f\001\001\000\022\006\327\017\356" +
    "\025\341\056\325\075\u0170\115\322\120\351\123\344\001" +
    "\001\000\002\001\001\000\004\101\u0171\001\001\000\002" +
    "\001\001\000\004\102\u0173\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\006\327\017\356\025\341\056\325" +
    "\075\u0176\115\322\120\351\123\344\001\001\000\002\001" +
    "\001\000\004\101\u0178\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\121\u017b\001\001\000\004\122\u017d\001" +
    "\001\000\004\121\u017f\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u0111\103\u0182\001\001\000\002\001\001\000\004\105\u0185" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\021\u0193" +
    "\063\u0197\066\u0198\001\001\000\004\067\u01bb\001\001\000" +
    "\004\067\u01ba\001\001\000\004\067\u01b9\001\001\000\004" +
    "\067\u01b8\001\001\000\004\067\u01b7\001\001\000\004\067" +
    "\u01b6\001\001\000\004\067\u01b5\001\001\000\004\067\u01b4" +
    "\001\001\000\004\067\u01b3\001\001\000\002\001\001\000" +
    "\004\067\u01b2\001\001\000\004\065\u01b0\001\001\000\004" +
    "\067\u01ae\001\001\000\004\022\u01a4\001\001\000\002\001" +
    "\001\000\004\067\u01a3\001\001\000\004\067\u019b\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\070\u01a0\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\022\012\075\014\065\016\063\023\u01a8\025\067\042\u01a9" +
    "\044\070\053\073\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\024\u01ac" +
    "\001\001\000\002\001\001\000\012\012\u01ad\014\065\016" +
    "\063\025\067\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\121\u01bd\001\001\000\002\001" +
    "\001\000\002\001\001\000\020\012\075\014\065\016\063" +
    "\025\067\042\u01c4\044\070\053\073\001\001\000\004\060" +
    "\u01c3\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\012\075\014\065\016" +
    "\063\025\067\042\u01c6\044\070\053\073\001\001\000\006" +
    "\060\u01ca\061\u01c8\001\001\000\020\012\075\014\065\016" +
    "\063\025\067\042\u01cb\044\070\053\073\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\116\u01ce\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\012\u01d1\014\065\016" +
    "\063\025\067\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\121\u01d4\001\001\000\002\001\001\000\012\012" +
    "\u01d6\014\065\016\063\025\067\001\001\000\002\001\001" +
    "\000\012\012\u01d8\014\065\016\063\025\067\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\012\u01db\014\065" +
    "\016\063\025\067\001\001\000\002\001\001\000\002\001" +
    "\001\000\022\012\075\014\065\016\063\020\u01de\025\067" +
    "\042\u01df\044\070\053\073\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\063\u01e1\066\u0198\001\001\000\004" +
    "\022\u01e2\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\006\253\127\251\142\u01e8\144\274\001\001\000\002\001" +
    "\001\000\014\133\u01e7\134\267\135\266\141\u01e6\143\u01ea" +
    "\001\001\000\002\001\001\000\012\071\u01ed\072\302\106" +
    "\301\112\276\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\113\u01f0\001\001\000\004\114\u01f4\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\107\u0201\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\133\u01e7\134\267\135\266\141\u01e6\143" +
    "\u0208\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\145\u020e\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\130\u021b\146\u021a\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\012\u021d\014\065\016\063\025\067\131\u021e\001\001\000" +
    "\004\132\u0222\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\166\u0245" +
    "\001\001\000\004\171\u0234\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\u0116\u0231\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\172\u0236\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\173\u0239\174\u023a\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\175\u023d\001\001\000\004\176\u0240" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\175" +
    "\u0241\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\173\u0243\174\u023a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\167\u0248\001\001\000\020" +
    "\012\u022b\014\065\016\063\025\067\164\u0249\165\u022c\u0115" +
    "\u022f\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\012\u024f\014\065\016\063\025\067\001\001" +
    "\000\002\001\001\000\004\325\u0252\001\001\000\002\001" +
    "\001\000\006\006\026\326\u0253\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\170\u0263\352\u0277\353\u0260\355" +
    "\u025f\356\u0262\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\006\u0255\351\u0276\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\170\u0263\352\u0261" +
    "\353\u0260\355\u025f\356\u0262\001\001\000\012\071\u026d\072" +
    "\302\106\301\112\276\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\353\u026c\355\u025f\356\u0262\001\001\000\012" +
    "\006\253\127\251\137\u0266\144\260\001\001\000\002\001" +
    "\001\000\010\354\u0267\355\u0269\356\u0262\001\001\000\002" +
    "\001\001\000\012\006\253\127\251\137\u026a\144\260\001" +
    "\001\000\002\001\001\000\010\354\u026b\355\u0269\356\u0262" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\356" +
    "\u026e\001\001\000\002\001\001\000\012\012\u0270\014\065" +
    "\016\063\025\067\001\001\000\002\001\001\000\012\006" +
    "\u0255\347\u0274\350\u0273\351\u0256\001\001\000\010\006\u0255" +
    "\350\u0275\351\u0256\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\361\u0281\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\u0292\367\u0293\001\001" +
    "\000\004\365\u028c\001\001\000\006\006\u0283\363\u028b\001" +
    "\001\000\006\006\u0283\363\u0284\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\364\u0288\372" +
    "\u0285\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\006\u0283\363\u028a\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\366\u0290\372\u028e\001\001\000" +
    "\002\001\001\000\004\365\u0291\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\370\u0297\372\u0298\373\u0294\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\006\u029a" +
    "\001\001\000\006\006\u0292\367\u0299\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\372\u0298" +
    "\373\u029b\001\001\000\002\001\001\000\004\u0112\u0378\001" +
    "\001\000\004\375\u0376\001\001\000\004\006\u02a5\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\u010d\u02a4\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\u0102\u02a7\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\221\u02b9\234\u02bb\235\u02bd\u010b\u02be\001\001" +
    "\000\010\u010e\u02ad\u010f\u02ae\u0110\u02ac\001\001\000\006\u010f" +
    "\u02b8\u0110\u02ac\001\001\000\006\u010f\u02b7\u0110\u02ac\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\u010d\u02b5\u0111\u02b4\001\001\000\002\001\001\000\004" +
    "\u0110\u02b2\001\001\000\002\001\001\000\004\u0110\u02b6\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\u010c\u0356\u010d" +
    "\u0352\001\001\000\002\001\001\000\006\u010c\u0353\u010d\u0352" +
    "\001\001\000\006\063\u0326\066\u0198\001\001\000\010\236" +
    "\u02c4\243\u02c2\244\u02c1\001\001\000\002\001\001\000\004" +
    "\255\u031c\001\001\000\010\237\u031b\240\u02ce\242\u02cc\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\062\u02f4" +
    "\256\u02f6\001\001\000\002\001\001\000\006\253\u02e7\254" +
    "\u02e6\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\237\u02cf\240\u02ce\242\u02cc\001\001\000" +
    "\006\240\u02e3\242\u02cc\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\241\u02d0\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\242\u02de\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\012\075\014\065\016\063\025\067\042\u02e8\044\070\053" +
    "\073\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\261\u02eb\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\262\u02ed\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\254\u02f3\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\263" +
    "\u02fe\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\245\u0303\246\u0304\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\247\u030b\001" +
    "\001\000\004\250\u030e\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\251" +
    "\u0311\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\252\u0317\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\246\u031a\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\257\u031e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\260\u0323\001\001\000\004\257\u0324" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\200\u0328\222\u032f\223\u032e\224\u032d\225\u032c" +
    "\001\001\000\012\227\u0346\230\u0345\231\u0344\232\u033f\001" +
    "\001\000\002\001\001\000\010\200\u0328\224\u0343\225\u032c" +
    "\001\001\000\004\062\u033a\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\200" +
    "\u0328\223\u0333\224\u032d\225\u032c\001\001\000\002\001\001" +
    "\000\010\200\u0328\224\u0335\225\u032c\001\001\000\002\001" +
    "\001\000\010\200\u0339\225\u0337\233\u0338\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\226" +
    "\u033d\231\u033b\232\u033f\001\001\000\002\001\001\000\004" +
    "\232\u0342\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\231\u0341\232\u033f\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\012\u0349\014\065\016\063\025\067\001\001\000" +
    "\002\001\001\000\012\012\u034b\014\065\016\063\025\067" +
    "\001\001\000\002\001\001\000\010\230\u034d\231\u0344\232" +
    "\u033f\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\231\u0350\232\u033f\001\001\000\002\001\001\000\012\221" +
    "\u02b9\234\u02bb\235\u02bd\u010b\u0354\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\u0103\u0359\001\001" +
    "\000\002\001\001\000\004\u010a\u0375\001\001\000\004\u010a" +
    "\u0370\001\001\000\004\u0104\u035d\001\001\000\004\u0105\u0360" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\u0106\u0364\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\u0107\u036a\u0108\u0368\u0109" +
    "\u0366\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\u0108\u036e\u0109\u0366\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u0113\u037b\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u010d\u037d\001\001\000" +
    "\002\001\001\000\002\001\001\000\016\170\u0390\174\u038e" +
    "\264\u0392\313\u0391\314\u038f\315\u038d\001\001\000\002\001" +
    "\001\000\006\006\u037f\312\u0384\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\012\u0386\014" +
    "\065\016\063\025\067\001\001\000\002\001\001\000\012" +
    "\006\u037f\310\u0388\311\u038a\312\u0382\001\001\000\002\001" +
    "\001\000\010\006\u037f\311\u038b\312\u0382\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\170\u0390\264\u0392\314\u03a8\315\u038d\001\001" +
    "\000\002\001\001\000\006\264\u0392\315\u03a7\001\001\000" +
    "\002\001\001\000\004\317\u03a6\001\001\000\002\001\001" +
    "\000\024\012\075\014\065\016\063\025\067\042\u0396\044" +
    "\070\053\073\316\u0399\320\u0395\001\001\000\004\321\u039b" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\317\u039f\322\u039e\001\001" +
    "\000\002\001\001\000\024\012\075\014\065\016\063\025" +
    "\067\042\u0396\044\070\053\073\316\u039d\320\u0395\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\012\075\014\065\016\063\025\067\042" +
    "\u0396\044\070\053\073\316\u03a5\320\u0395\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\317\u03aa\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u0136\u0451\001\001\000" +
    "\004\u0136\u0418\001\001\000\004\u0147\u03ff\001\001\000\006" +
    "\006\u03e9\u0122\u03ea\001\001\000\004\u0118\u03b9\001\001\000" +
    "\024\002\u03b8\003\003\264\017\306\005\323\012\345\007" +
    "\360\004\374\021\u012d\011\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\u012f\u03b6\001\001\000\024\002\u03b7" +
    "\003\003\264\017\306\005\323\012\345\007\360\004\374" +
    "\021\u012d\011\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\u0119\u03bb\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\u011a\u03bf" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\u011b" +
    "\u03c3\001\001\000\002\001\001\000\006\063\u03c4\066\u0198" +
    "\001\001\000\004\u011c\u03c5\001\001\000\004\u011a\u03cd\001" +
    "\001\000\004\u0127\u03c7\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\063\u03d0\066\u0198\001\001\000\010\u011b\u03d3\u011d" +
    "\u03d2\u011e\u03d1\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\u011b\u03d3\u011e\u03da\001\001\000\002\001\001\000\014\264" +
    "\u03de\306\u03df\323\u03e0\345\u03dd\u011f\u03dc\001\001\000\016" +
    "\264\u03de\306\u03df\323\u03e0\345\u03dd\u011f\u03e5\u0120\u03e4\001" +
    "\001\000\002\001\001\000\004\u0121\u03e2\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\264\u03de" +
    "\306\u03df\323\u03e0\345\u03dd\u011f\u03e5\u0120\u03e6\001\001\000" +
    "\002\001\001\000\004\u0121\u03e8\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\200\u03ee\221" +
    "\u03ec\234\u03ef\235\u02bd\u0123\u03ed\001\001\000\002\001\001" +
    "\000\004\u0124\u03f0\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\200\u03ee\221\u03ec\234\u03ef" +
    "\235\u02bd\u0123\u03f2\001\001\000\004\u0124\u03f3\001\001\000" +
    "\002\001\001\000\004\u0125\u03f5\001\001\000\004\u0121\u03fd" +
    "\001\001\000\004\u0126\u03f7\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\024\002\u03fe\003\003\264" +
    "\017\306\005\323\012\345\007\360\004\374\021\u012d\011" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\u0148" +
    "\u0401\001\001\000\004\u0149\u0404\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\264\u0416\001" +
    "\001\000\004\u014a\u0408\001\001\000\004\u014b\u0413\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\264\u040b\001" +
    "\001\000\006\u0121\u040c\u014c\u040e\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u0121\u0411\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\u014b\u0415\001\001\000\002\001" +
    "\001\000\006\u0121\u040c\u014c\u0417\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\u0137\u041c\u0138\u041b\u0139\u041a\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u013a\u0422\001\001\000\002\001\001\000\006\063\u0423" +
    "\066\u0198\001\001\000\020\u013b\u0424\u013c\u0430\u013d\u042e\u013e" +
    "\u042d\u013f\u0425\u0142\u0431\u0143\u042f\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\u013e\u044c\u013f\u0425\u0142\u0431\u0143" +
    "\u042f\001\001\000\002\001\001\000\004\u0139\u0449\001\001" +
    "\000\004\u0127\u0447\001\001\000\004\u0144\u043b\001\001\000" +
    "\004\u0140\u0435\001\001\000\016\u013c\u0432\u013d\u042e\u013e\u042d" +
    "\u013f\u0425\u0142\u0431\u0143\u042f\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\u0141\u0437\001\001\000\006" +
    "\u0142\u0439\u0143\u042f\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\014\264\u043d\306\u043e\323\u0440" +
    "\345\u043c\u0145\u043f\001\001\000\002\001\001\000\004\u0121" +
    "\u0446\001\001\000\002\001\001\000\016\264\u043d\306\u043e" +
    "\323\u0440\345\u043c\u0145\u0442\u0146\u0441\001\001\000\002\001" +
    "\001\000\004\u0121\u0445\001\001\000\016\264\u043d\306\u043e" +
    "\323\u0440\345\u043c\u0145\u0442\u0146\u0444\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\u013d\u0448\u013e\u042d\u013f\u0425\u0142\u0431\u0143\u042f\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\u0143\u044b" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\u0138" +
    "\u044e\u0139\u041a\001\001\000\002\001\001\000\004\u0139\u0450" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\u0121" +
    "\u0453\001\001\000\024\002\u0454\003\003\264\017\306\005" +
    "\323\012\345\007\360\004\374\021\u012d\011\001\001\000" +
    "\002\001\001\000\004\u0130\u0457\001\001\000\004\u0131\u045b" +
    "\001\001\000\004\u0121\u0458\001\001\000\024\002\u0459\003" +
    "\003\264\017\306\005\323\012\345\007\360\004\374\021" +
    "\u012d\011\001\001\000\002\001\001\000\004\u0134\u045f\001" +
    "\001\000\004\u0132\u045d\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u0135\u0468\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\006\u0470\001\001" +
    "\000\004\004\u0471\001\001\000\004\005\u0474\001\001\000" +
    "\004\006\u0473\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\012\075\014\065\016\063\017\u013a\025\u0134\042\u0130" +
    "\044\070\053\073\056\u0132\115\u0131\120\u0138\154\u047e\155" +
    "\u0133\267\u047c\272\u047b\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\270" +
    "\u04a0\001\001\000\020\273\u0488\275\u0485\276\u0483\277\u0482" +
    "\300\u0481\301\u047f\305\u048c\001\001\000\002\001\001\000" +
    "\012\071\u049e\072\302\106\301\112\276\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u049b\274\u049c\001\001\000\002\001\001\000\012\071\u0499" +
    "\072\302\106\301\112\276\001\001\000\036\012\075\014" +
    "\065\016\063\017\u013a\025\u0134\042\u0130\044\070\053\073" +
    "\056\u0132\115\u0131\120\u0138\154\u047e\155\u0133\272\u0498\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\006\253" +
    "\127\251\137\u048f\144\260\001\001\000\002\001\001\000" +
    "\002\001\001\000\036\012\075\014\065\016\063\017\u013a" +
    "\025\u0134\042\u0130\044\070\053\073\056\u0132\115\u0131\120" +
    "\u0138\147\u048e\154\u0135\155\u0133\001\001\000\002\001\001" +
    "\000\012\276\u0490\277\u0482\300\u0481\301\u047f\001\001\000" +
    "\002\001\001\000\020\012\075\014\065\016\063\025\067" +
    "\042\u0492\044\070\053\073\001\001\000\004\303\u0494\001" +
    "\001\000\020\012\075\014\065\016\063\025\067\042\u0496" +
    "\044\070\053\073\001\001\000\006\300\u0495\301\u047f\001" +
    "\001\000\002\001\001\000\004\303\u0497\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\301\u049a\001\001\000" +
    "\002\001\001\000\014\275\u049d\276\u0483\277\u0482\300\u0481" +
    "\301\u047f\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\277\u049f\300\u0481\301\u047f\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\012\u04a2\014\065\016\063\025" +
    "\067\001\001\000\002\001\001\000\040\012\075\014\065" +
    "\016\063\017\u013a\025\u0134\042\u0130\044\070\053\073\056" +
    "\u0132\115\u0131\120\u0138\154\u047e\155\u0133\271\u04a6\272\u04a5" +
    "\001\001\000\036\012\075\014\065\016\063\017\u013a\025" +
    "\u0134\042\u0130\044\070\053\073\056\u0132\115\u0131\120\u0138" +
    "\154\u047e\155\u0133\272\u04a7\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MiniSQL$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MiniSQL$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MiniSQL$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    /* Reporte de error encontrado. */
    public void report_error (String message, Object info) {
        StringBuilder m = new StringBuilder ("Error");
        if  (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s =  ( (java_cup.runtime.Symbol) info);
            m.append (" " + s.value.toString ());
            if  (s.left >= 0) {                
                m.append (" in line "+ (s.left));
                if  (s.right >= 0)
                    m.append (", column "+ (s.right));
            }
        }
        m.append (" : "+message);
        System.err.println(m);
    }

    /*public void syntax_error(cur_token){
        //holi;
    }*/
  
    /* Cuando se encuentra un error de donde el sistema no puede
        recuperarse, se lanza un error fatal. Se despliega el mensaje
        de error y se finaliza la ejecucion. */
    public void report_fatal_error (String message, Object info) {
        report_error (message, info);
        System.exit (1);
    }

    /* Metodo main para garantizar la ejecucion del analizador
       lexico y sintactico, ademas que se pase como parametro la tabla
       de simbolos correspondiente. */
    public static void main (String[] args){
        try {
             MiniSQL asin = new MiniSQL (
                    new Lexer ( new FileReader (args[0])));
            Object result = asin.parse ().value;
            System.out.println ("\n*** Resultados finales ***");
        } catch  (Exception ex) {
            ex.printStackTrace ();
        }
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$MiniSQL$actions {
  private final MiniSQL parser;

  /** Constructor */
  CUP$MiniSQL$actions(MiniSQL parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$MiniSQL$do_action_part00000000(
    int                        CUP$MiniSQL$act_num,
    java_cup.runtime.lr_parser CUP$MiniSQL$parser,
    java.util.Stack            CUP$MiniSQL$stack,
    int                        CUP$MiniSQL$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MiniSQL$result;

      /* select the action based on the action number */
      switch (CUP$MiniSQL$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)).value;
		RESULT = start_val;
              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$MiniSQL$parser.done_parsing();
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= SELECT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= INSERT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= UPDATE0 INICIO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIO ::= CRT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // INICIO ::= DEL1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // INICIO ::= DROP1 INICIO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INICIO ::= ALTER1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // INICIO ::= TRUNCATEP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // INICIO ::= error INICIO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // INICIO ::= error 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // TRUNCATEP ::= TRUNCATE TABLE OBJECT TRUNCATE1 TRUNCATE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATEP",1, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // TRUNCATE1 ::= Coma OBJECT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATE1",2, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // TRUNCATE1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATE1",2, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // TRUNCATE2 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATE2",3, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // TRUNCATE2 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATE2",3, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // OBJECT ::= Identificador OBJECT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT",4, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // OBJECT1 ::= Punto Identificador OBJECT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT1",5, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // OBJECT1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT1",5, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // OBJECT2 ::= Punto Identificador OBJECT3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT2",6, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // OBJECT2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT2",6, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // OBJECT3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT3",7, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // OBJECT3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT3",7, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // DROP1 ::= DROP DROP3 DROP2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP1",238, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // DROP2 ::= TABLE DROP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // DROP2 ::= DATABASE DROP6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // DROP2 ::= USER Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // DROP2 ::= VIEW DROP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // DROP2 ::= INDEX DROP8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // DROP3 ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP3",240, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // DROP3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP3",240, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // DROP4 ::= OBJECT DROP5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP4",241, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // DROP5 ::= Coma DROP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP5",242, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // DROP5 ::= DROP11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP5",242, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // DROP6 ::= Identificador DROP7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP6",243, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // DROP7 ::= Coma DROP6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP7",244, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // DROP7 ::= DROP11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP7",244, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // DROP8 ::= OBJECT DROP9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP8",245, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // DROP9 ::= ON OBJECT DROP12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP9",246, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // DROP9 ::= DROP12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP9",246, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // DROP11 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP11",248, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // DROP11 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP11",248, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // DROP12 ::= Coma DROP8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP12",249, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // DROP12 ::= DROP11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP12",249, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ALTER1 ::= ALTER ALTER2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER1",250, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ALTER2 ::= VIEW ALTER2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER2",251, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ALTER2 ::= TABLE OBJECT ALTER7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER2",251, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ALTER2 ::= USER Identificador ALTER18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER2",251, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ALTER2 ::= DATABASE ALTER23 ALTER24 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER2",251, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // ALTER3 ::= Identificador ALTER4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER3",252, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ALTER4 ::= Punto Identificador ALTER5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER4",253, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // ALTER4 ::= ALTER5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER4",253, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // ALTER5 ::= Parentesisapertura Identificador ALTER6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER5",254, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // ALTER5 ::= AS SELECT ALTER25 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER5",254, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // ALTER6 ::= Coma Identificador ALTER6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER6",255, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // ALTER6 ::= Parentesiscerradura AS SELECT1 ALTER25 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER6",255, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // ALTER7 ::= ALTER COLUMN Identificador ALTER8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER7",256, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // ALTER7 ::= ADD ALTER16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER7",256, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // ALTER7 ::= DROP ALTER19 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER7",256, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // ALTER8 ::= Identificador ALTER9 ALTER10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER8",257, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // ALTER8 ::= ADD ALTER15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER8",257, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // ALTER8 ::= DROP ALTER15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER8",257, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // ALTER9 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER9",258, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // ALTER9 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER9",258, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ALTER10 ::= Parentesisapertura Entero ALTER11 Parentesiscerradura ALTER12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER10",259, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // ALTER11 ::= Coma INTEGER 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER11",260, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ALTER11 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER11",260, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ALTER12 ::= COLLATE Identificador ALTER13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER12",261, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ALTER12 ::= ALTER13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER12",261, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ALTER13 ::= ALTER14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER13",262, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ALTER13 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER13",262, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ALTER14 ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER14",263, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ALTER14 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER14",263, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ALTER15 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER15",264, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ALTER15 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER15",264, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ALTER16 ::= COL_DEF ALTER17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER16",265, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ALTER16 ::= TB_CST ALTER17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER16",265, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ALTER17 ::= Coma ALTER16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER17",266, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ALTER17 ::= ALTER18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER17",266, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ALTER18 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER18",267, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // ALTER18 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER18",267, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ALTER19 ::= CONSTRAINT ALTER20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER19",268, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ALTER19 ::= COLUMN ALTER20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER19",268, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ALTER19 ::= ALTER20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER19",268, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ALTER20 ::= IF EXISTS ALTER21 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER20",269, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ALTER20 ::= ALTER21 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER20",269, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ALTER21 ::= Identificador ALTER22 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER21",270, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ALTER22 ::= Coma ALTER21 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER22",271, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // ALTER22 ::= ALTER18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER22",271, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // ALTER23 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER23",272, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // ALTER23 ::= CURRENT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER23",272, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // ALTER24 ::= COLLATE Identificador ALTER18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER24",273, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // ALTER25 ::= WITH CHECK OPTION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER25",274, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // ALTER25 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER25",274, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // SH_COND ::= SH_COND1 SH_COND2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND",55, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // SH_COND1 ::= MATCH Parentesisapertura GSP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND1",56, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // SH_COND1 ::= SH_CONDWM 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND1",56, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // SH_COND2 ::= AND SH_COND 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND2",57, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // SH_COND2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND2",57, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // PREDICATE ::= PREDICATE1 PREDICATE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE",58, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // PREDICATE ::= CONTAINS Parentesisapertura PREDICATE7 Coma PREDICATE8 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE",58, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // PREDICATE ::= FREETEXT Parentesisapertura PREDICATE7 Coma PREDICATE9 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE",58, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // PREDICATE1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // PREDICATE1 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // PREDICATE1 ::= CASEW 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // PREDICATE1 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // PREDICATE1 ::= STR_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // PREDICATE1 ::= DT_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // PREDICATE1 ::= CONV 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // PREDICATE1 ::= OTH_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // PREDICATE2 ::= COMPARE_OPR PREDICATE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // PREDICATE2 ::= NOT PREDICATE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // PREDICATE2 ::= LIKE PREDICATE1 PREDICATE6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // PREDICATE2 ::= BETWEEN PREDICATE1 AND PREDICATE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // PREDICATE2 ::= IS PREDICATE4 NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // PREDICATE2 ::= IN PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // PREDICATE3 ::= LIKE PREDICATE1 PREDICATE6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE3",61, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // PREDICATE3 ::= BETWEEN PREDICATE1 AND PREDICATE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE3",61, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // PREDICATE3 ::= IN PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE3",61, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // PREDICATE4 ::= NOT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE4",62, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // PREDICATE4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE4",62, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // PREDICATE5 ::= Coma PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE5",63, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // PREDICATE5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE5",63, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // PREDICATE6 ::= ESCAPE Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE6",64, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // PREDICATE6 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE6",64, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // PREDICATE7 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE7",65, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // PREDICATE7 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE7",65, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // PREDICATE8 ::= SH_COND 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE8",66, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // PREDICATE9 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE9",67, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // PREDICATE9 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE9",67, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // SH_CONDWM ::= SH_CONDWM4 PREDICATE SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM",68, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // SH_CONDWM ::= Parentesisapertura SH_CONDWM Parentesiscerradura SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM",68, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // SH_CONDWM1 ::= OR SH_CONDWM2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM1",69, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // SH_CONDWM1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM1",69, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // SH_CONDWM2 ::= NOT SH_CONDWM3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM2",70, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // SH_CONDWM2 ::= SH_CONDWM3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM2",70, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // SH_CONDWM3 ::= PREDICATE SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM3",71, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // SH_CONDWM3 ::= Parentesisapertura SH_CONDWM Parentesiscerradura SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM3",71, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // SH_CONDWM4 ::= NOT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM4",72, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // SH_CONDWM4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM4",72, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // GSP ::= Identificador GSP1 Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("GSP",73, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // GSP1 ::= Signomenor Signomenos Parentesisapertura Identificador Parentesiscerradura Signomenos 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("GSP1",74, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // GSP1 ::= Signomenos Parentesisapertura Identificador Parentesiscerradura Signomenos Signomayor 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("GSP1",74, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // AGG_FN ::= AVG Parentesisapertura SEL_AVG Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // AGG_FN ::= COUNT Parentesisapertura SEL_COUNT Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // AGG_FN ::= MAX Parentesisapertura SEL_AGR Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // AGG_FN ::= MIN Parentesisapertura SEL_AGR Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // AGG_FN ::= SUM Parentesisapertura SEL_AGR Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // SEL_AVG ::= SEL_AVG1 SEL_AVG2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG",20, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // SEL_AVG1 ::= ALL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",21, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // SEL_AVG1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",21, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // SEL_AVG1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",21, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // SEL_AVG2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG2",22, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // SEL_AVG2 ::= Identificador SEL_AVG3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG2",22, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // SEL_AVG3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG3",23, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // SEL_AVG3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG3",23, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // SEL_COUNT ::= SEL_COUNT1 SEL_COUNT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT",24, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // SEL_COUNT1 ::= ALL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",25, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // SEL_COUNT1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",25, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // SEL_COUNT1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",25, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // SEL_COUNT2 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",26, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // SEL_COUNT2 ::= Identificador SEL_COUNT3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",26, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // SEL_COUNT2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",26, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // SEL_COUNT3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT3",27, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // SEL_COUNT3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT3",27, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // SEL_AGR ::= SEL_AGR1 SEL_AGR2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR",28, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // SEL_AGR1 ::= ALL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",29, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // SEL_AGR1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",29, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // SEL_AGR1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",29, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // SEL_AGR2 ::= Identificador SEL_AGR3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR2",30, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // SEL_AGR2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR2",30, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // SEL_AGR3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR3",31, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // SEL_AGR3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR3",31, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION",32, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // EXPRESSION ::= EXPRESSION2 SUM_OPR EXPRESSION2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION",32, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // EXPRESSION ::= NOT_OPR EXPRESSION EXPRESSION4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION",32, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // EXPRESSION1 ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",33, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // EXPRESSION1 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",33, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // EXPRESSION1 ::= SUM_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",33, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // EXPRESSION2 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",34, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // EXPRESSION2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",34, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // EXPRESSION3 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",35, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // EXPRESSION3 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",35, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // EXPRESSION3 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",35, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // EXPRESSION4 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",36, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // EXPRESSION4 ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",36, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // SEXP ::= SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP",8, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // SEXP2 ::= Signomas SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP2",9, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // SEXP2 ::= Signomenos SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP2",9, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // SEXP2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP2",9, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // SEXP3 ::= SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP3",10, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // SEXP4 ::= Signomult SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP4",11, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // SEXP4 ::= Signodiv SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP4",11, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // SEXP4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP4",11, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // SEXP5 ::= Parentesisapertura SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // SEXP5 ::= Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // SEXP5 ::= Float 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // SEXP5 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // SEXP5 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // CONV ::= CAST Parentesisapertura CONV1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV",13, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // CONV ::= CONVERT Parentesisapertura CONV2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV",13, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // CONV1 ::= EXPRESSION AS DATATYPE CONV3 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV1",14, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // CONV2 ::= DATATYPE CONV3 CONV4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV2",15, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // CONV3 ::= Parentesisapertura Entero Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV3",16, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // CONV3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV3",16, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // CONV4 ::= EXPRESSION CONV5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV4",17, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // CONV5 ::= Coma SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV5",18, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // CONV5 ::= Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV5",18, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // DATATYPE ::= Identificador DATATYPE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE",49, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // DATATYPE ::= DATATYPE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE",49, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // DATATYPE2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE2",51, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // DATATYPE3 ::= BIT DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // DATATYPE3 ::= INT DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // DATATYPE3 ::= INTEGER DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // DATATYPE3 ::= FLOAT DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // DATATYPE3 ::= VARCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // DATATYPE3 ::= DATE DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // DATATYPE3 ::= REAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // DATATYPE3 ::= DECIMAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // DATATYPE3 ::= NUMERIC DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // DATATYPE3 ::= SMALLINT DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // DATATYPE3 ::= TIME DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // DATATYPE3 ::= CHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // DATATYPE3 ::= NCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // DATATYPE4 ::= Parentesisapertura Entero DATATYPE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE4",53, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // DATATYPE4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE4",53, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // DATATYPE5 ::= Coma Entero Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE5",54, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // DATATYPE5 ::= Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE5",54, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // TB_CST ::= TB_CST1 TB_CST2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST",154, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // TB_CST1 ::= CONSTRAINT Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST1",155, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // TB_CST1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST1",155, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // TB_CST2 ::= PRIMARY KEY TB_CST3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // TB_CST2 ::= UNIQUE TB_CST3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // TB_CST2 ::= TB_CST7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // TB_CST2 ::= CONNECTION TB_CST17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // TB_CST2 ::= DEFAULT TB_CST18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // TB_CST2 ::= CHECK TB_CST15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // TB_CST3 ::= CLUSTERED TB_CST4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST3",157, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // TB_CST3 ::= TB_CST4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST3",157, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // TB_CST4 ::= WITH TB_CST5 TB_CST6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST4",158, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // TB_CST4 ::= TB_CST6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST4",158, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // TB_CST5 ::= FILLFACTOR Signoigual Entero Parentesisapertura Entero Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST5",159, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // TB_CST5 ::= Parentesisapertura FILLFACTOR Signoigual INTEGER Parentesisapertura Entero Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST5",159, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-6)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // TB_CST6 ::= ON Identificador Parentesisapertura Identificador Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST6",160, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // TB_CST7 ::= TB_CST8 REFERENCES Identificador TB_CST9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST7",161, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // TB_CST8 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST8",162, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // TB_CST8 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST8",162, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // TB_CST9 ::= Punto Identificador TB_CST10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST9",163, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // TB_CST9 ::= TB_CST10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST9",163, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // TB_CST10 ::= Parentesisapertura Identificador Parentesiscerradura TB_CST11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST10",164, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // TB_CST11 ::= ON TB_CST12 TB_CST13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST11",165, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // TB_CST11 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST11",165, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // TB_CST11 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST11",165, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // TB_CST12 ::= DELETE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST12",166, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // TB_CST12 ::= UPDATE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST12",166, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // TB_CST13 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST13",167, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // TB_CST13 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST13",167, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // TB_CST13 ::= SET TB_CST14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST13",167, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // TB_CST14 ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST14",168, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // TB_CST14 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST14",168, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // TB_CST15 ::= NOT FOR REPLICATION TB_CST16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST15",169, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // TB_CST15 ::= TB_CST16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST15",169, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // TB_CST16 ::= Parentesisapertura EXPRESSION Parentesiscerradura TB_CST21 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST16",170, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // TB_CST17 ::= Parentesisapertura TB_CST19 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST17",171, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // TB_CST18 ::= CONST_EXP FOR Identificador TB_CST23 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST18",172, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // TB_CST19 ::= Identificador TO Identificador TB_CST20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST19",173, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // TB_CST20 ::= Coma TB_CST19 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST20",174, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // TB_CST20 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST20",174, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // TB_CST21 ::= ON DELETE TB_CST22 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST21",175, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // TB_CST21 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST21",175, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // TB_CST22 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST22",176, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // TB_CST22 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST22",176, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // TB_CST23 ::= WITH VALUES 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST23",177, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // TB_CST23 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST23",177, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // COL_DEF ::= Identificador DATATYPE COL_DEF1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF",143, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // COL_DEF1 ::= COLLATE Identificador COL_DEF2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF1",144, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // COL_DEF1 ::= COL_DEF2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF1",144, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // COL_DEF2 ::= NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF2",145, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // COL_DEF2 ::= NOT NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF2",145, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // COL_DEF2 ::= COL_DEF3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF2",145, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // COL_DEF2 ::= IDENTITY COL_DEF6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF2",145, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // COL_DEF3 ::= CONSTRAINT Identificador COL_DEF10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF3",146, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // COL_DEF3 ::= COL_CST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF3",146, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // COL_DEF3 ::= COL_DEF4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF3",146, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // COL_DEF4 ::= DEFAULT CONST_EXP COL_DEF5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF4",147, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // COL_DEF5 ::= WITH VALUES COL_DEF8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF5",148, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // COL_DEF5 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF5",148, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // COL_DEF6 ::= Parentesisapertura SEXP Coma SEXP Parentesiscerradura COL_DEF7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF6",149, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // COL_DEF6 ::= COL_DEF7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF6",149, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // COL_DEF7 ::= NOT FOR REPLICATION COL_DEF8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF7",150, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // COL_DEF7 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF7",150, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // COL_DEF8 ::= ROWGUIDCOL COL_DEF9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF8",151, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // COL_DEF8 ::= COL_DEF9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF8",151, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // COL_DEF10 ::= COL_DEF4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF10",153, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // COL_DEF10 ::= COL_CST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF10",153, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // CONST_EXP ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // CONST_EXP ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // CONST_EXP ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // CONST_EXP ::= Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // CONST_EXP ::= Float 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MiniSQL$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$MiniSQL$do_action_part00000001(
    int                        CUP$MiniSQL$act_num,
    java_cup.runtime.lr_parser CUP$MiniSQL$parser,
    java.util.Stack            CUP$MiniSQL$stack,
    int                        CUP$MiniSQL$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MiniSQL$result;

      /* select the action based on the action number */
      switch (CUP$MiniSQL$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // COLST ::= Parentesisapertura COLST1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLST",122, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // COLST1 ::= Identificador COLST2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLST1",123, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // COLST2 ::= Coma COLST1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLST2",124, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // COLST2 ::= Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLST2",124, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // EXPR_INSERT ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",125, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // EXPR_INSERT ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",125, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // EXPR_INSERT ::= BIT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",125, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // OUTCL ::= OUTPUT DML1 OUTCL1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL",118, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // OUTCL ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL",118, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // OUTCL1 ::= INTO OUTCL2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL1",119, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // OUTCL1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL1",119, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // OUTCL2 ::= Arroba Identificador OUTCL3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL2",120, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // OUTCL2 ::= Identificador OUTCL3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL2",120, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // OUTCL3 ::= COLST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL3",121, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // OUTCL3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL3",121, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // DML1 ::= DML2 DML3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML1",114, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // DML2 ::= COLNAME 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML2",115, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // DML2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML2",115, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // DML3 ::= AS Identificador DML4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML3",116, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // DML3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML3",116, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // DML4 ::= Coma DML1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML4",117, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // DML4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML4",117, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // COLNAME ::= Identificador Punto COLNAME1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLNAME",275, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // COLNAME1 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLNAME1",276, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // COLNAME1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLNAME1",276, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // SELIST ::= SELIST1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST",106, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // SELIST1 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // SELIST1 ::= Identificador SELIST2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // SELIST1 ::= EXPRESSION SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // SELIST1 ::= AGG_FN SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // SELIST1 ::= STR_FN SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // SELIST1 ::= DT_FN SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // SELIST1 ::= CONV SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // SELIST1 ::= CASEW SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // SELIST2 ::= Punto SELIST3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST2",108, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // SELIST2 ::= Signoigual SELIST6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST2",108, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // SELIST2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST2",108, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // SELIST3 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST3",109, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // SELIST3 ::= Identificador SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST3",109, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // SELIST5 ::= AS Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST5",111, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // SELIST5 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST5",111, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // SELIST5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST5",111, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // SELIST6 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST6",112, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ORDERB ::= SELIST ORDERB1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB",101, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ORDERB1 ::= ORDERB2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB1",102, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ORDERB1 ::= Coma ORDERB 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB1",102, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ORDERB2 ::= COLLATE ORDERB3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB2",103, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // ORDERB2 ::= ORDERB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB2",103, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // ORDERB3 ::= Identificador ORDERB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB3",104, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // ORDERB4 ::= ASC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB4",105, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // ORDERB4 ::= DESC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB4",105, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // TB_SOURCE ::= OBJECT TB_SOURCE1 TB_SOURCE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",98, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // TB_SOURCE ::= ROWSET TB_SOURCE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",98, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // TB_SOURCE ::= Arroba Identificador TB_SOURCE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",98, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // TB_SOURCE1 ::= AS Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",99, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // TB_SOURCE1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",99, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // TB_SOURCE1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",99, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // TB_SOURCE2 ::= SAM_CL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE2",100, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // TB_SOURCE2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE2",100, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // JOINTB ::= TB_SOURCE JOINTB1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB",93, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // JOINTB ::= Parentesisapertura JOIN Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB",93, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // JOINTB1 ::= JOIN_TYPE JOINTB3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB1",94, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // JOINTB1 ::= CROSS JOIN JOINTB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB1",94, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // JOINTB1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB1",94, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // JOINTB2 ::= JOIN_TYPE JOINTB3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB2",95, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // JOINTB2 ::= CROSS JOIN JOINTB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB2",95, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // JOINTB3 ::= TB_SOURCE ON SH_COND JOINTB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB3",96, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // JOINTB4 ::= JOINTB2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB4",97, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // JOINTB4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB4",97, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // JOIN_TYPE ::= JOIN_TYPE1 JOIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE",89, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // JOIN_TYPE1 ::= INNER 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",90, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // JOIN_TYPE1 ::= JOIN_TYPE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",90, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // JOIN_TYPE2 ::= LEFT JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",91, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // JOIN_TYPE2 ::= RIGHT JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",91, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // JOIN_TYPE2 ::= FULL JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",91, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // JOIN_TYPE2 ::= JOIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",91, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // JOIN_TYPE3 ::= OUTER JOIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE3",92, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // JOIN_TYPE3 ::= JOIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE3",92, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // SAM_CL ::= TABLESAMPLE Parentesisapertura SAM_CL1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL",86, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // SAM_CL1 ::= SEXP SAM_CL2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL1",87, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // SAM_CL2 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL2",88, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // SAM_CL2 ::= ROWS 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL2",88, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // SAM_CL2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL2",88, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // ROWSET ::= OPENDATASOURCE Parentesisapertura Cadena Coma Cadena Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ROWSET",85, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // ROWSET ::= OPENQUERY Parentesisapertura Identificador Coma Cadena Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ROWSET",85, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // CASEW ::= CASE CASEW1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW",44, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // CASEW1 ::= EXPRESSION CASEW2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW1",45, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // CASEW1 ::= CASEW2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW1",45, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // CASEW2 ::= WHEN EXPRESSION THEN EXPRESSION CASEW3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW2",46, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // CASEW3 ::= ELSE EXPRESSION END 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW3",47, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // CASEW3 ::= CASEW2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW3",47, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // CASEW3 ::= END 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW3",47, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // AR_OPR ::= Signomenos 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AR_OPR",37, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // AR_OPR ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AR_OPR",37, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // AR_OPR ::= Signodiv 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AR_OPR",37, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // AR_OPR ::= Signoporcentaje 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AR_OPR",37, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // SUM_OPR ::= Signomas 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SUM_OPR",38, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // ASIG_OPR ::= Signoigual 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ASIG_OPR",39, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // BIT_OPR ::= AND 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIT_OPR",40, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // BIT_OPR ::= OR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIT_OPR",40, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // NOT_OPR ::= NOT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("NOT_OPR",41, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // COMPARE_OPR ::= Signomayor 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // COMPARE_OPR ::= Signomenor 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // COMPARE_OPR ::= Signomayorigual 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // COMPARE_OPR ::= Signomenorigual 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // COMPARE_OPR ::= Signonotigual 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // LOGIC_OPR ::= BETWEEN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",43, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // LOGIC_OPR ::= IN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",43, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // LOGIC_OPR ::= LIKE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",43, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // BIN_OPR ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // BIN_OPR ::= ASIG_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // BIN_OPR ::= BIT_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // BIN_OPR ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // BIN_OPR ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // OTH_FN ::= NEXT VALUE FOR OBJECT OTH_FN3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN",81, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // OTH_FN ::= SYSTEM_USER 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN",81, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // OTH_FN ::= SESSION_USER 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN",81, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // OTH_FN ::= NULLIF Parentesisapertura EXPRESSION Coma EXPRESSION Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN",81, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // OTH_FN1 ::= Punto Identificador OTH_FN2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN1",82, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // OTH_FN1 ::= OTH_FN2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN1",82, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // OTH_FN2 ::= Punto Identificador OTH_FN3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN2",83, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // OTH_FN2 ::= OTH_FN3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN2",83, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // OTH_FN3 ::= OVER ORDER BY ORDERB 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN3",84, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // STR_FN ::= LOWER Parentesisapertura STR_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // STR_FN ::= TRANSLATE Parentesisapertura STR_FN1 Coma STR_FN1 Coma STR_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-7)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // STR_FN ::= UPPER Parentesisapertura STR_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // STR_FN ::= CHAR Parentesisapertura SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // STR_FN ::= LEFT Parentesisapertura STR_FN1 Coma SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // STR_FN ::= TRIM Parentesisapertura STR_FN1 STR_FN2 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // STR_FN ::= NCHAR Parentesisapertura SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // STR_FN ::= RIGHT Parentesisapertura STR_FN1 Coma SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // STR_FN ::= SPACE Parentesisapertura SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // STR_FN ::= SUBSTRING Parentesisapertura STR_FN1 Coma SEXP Coma SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-7)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // STR_FN1 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN1",79, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // STR_FN1 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN1",79, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // STR_FN1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN1",79, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // STR_FN2 ::= FROM STR_FN1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN2",80, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // STR_FN2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN2",80, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // DT_FN ::= CURRENT_TIMESTAMP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // DT_FN ::= DAY Parentesisapertura DT_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // DT_FN ::= MONTH Parentesisapertura DT_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // DT_FN ::= YEAR Parentesisapertura DT_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // DT_FN ::= SET LANGUAGE DT_FN2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // DT_FN1 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN1",76, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // DT_FN1 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN1",76, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // DT_FN2 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN2",77, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // DT_FN2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN2",77, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // UPDATE0 ::= UPDATE UPDATE1 UPDATE15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE0",209, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // UPDATE1 ::= TOP Parentesisapertura SEXP Parentesiscerradura UPDATE2 UPDATE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE1",210, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // UPDATE1 ::= UPDATE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE1",210, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // UPDATE2 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE2",211, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // UPDATE2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE2",211, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // UPDATE3 ::= OBJECT UPDATE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE3",212, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // UPDATE3 ::= Arroba Identificador UPDATE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE3",212, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // UPDATE4 ::= SET UPDATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE4",213, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // UPDATE5 ::= UPDATE6 UPDATE11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE5",214, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // UPDATE6 ::= OBJECT UPDATE7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE6",215, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // UPDATE6 ::= Arroba Identificador Signoigual UPDATE10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE6",215, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // UPDATE7 ::= Signoigual UPDATE9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE7",216, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // UPDATE9 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE9",218, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // UPDATE9 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE9",218, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // UPDATE9 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE9",218, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // UPDATE9 ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE9",218, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // UPDATE10 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE10",219, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // UPDATE11 ::= Coma UPDATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE11",220, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // UPDATE11 ::= UPDATE12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE11",220, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // UPDATE12 ::= OUTCL UPDATE16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE12",221, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // UPDATE12 ::= UPDATE16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE12",221, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // UPDATE16 ::= FROM JOINTB UPDATE17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE16",225, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // UPDATE16 ::= UPDATE17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE16",225, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // UPDATE17 ::= WHERE SH_COND 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE17",226, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // UPDATE17 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE17",226, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // UPDATE15 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE15",224, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // UPDATE15 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE15",224, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // FUNCTION1 ::= Identificador FUNCTION2 Parentesisapertura FUNCTION3 Parentesiscerradura RETURNS DATATYPE FUNCTION6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION1",278, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-7)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // FUNCTION2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION2",279, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // FUNCTION2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION2",279, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // FUNCTION3 ::= Arroba Identificador FUNCTION4 DATATYPE FUNCTION5 FUNCTION3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION3",280, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // FUNCTION3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION3",280, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // FUNCTION4 ::= AS 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION4",281, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // FUNCTION4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION4",281, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // FUNCTION5 ::= Signoigual DEFV 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION5",282, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // FUNCTION5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION5",282, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // FUNCTION6 ::= WITH RETURNS NULL ON NULL INPUT FUNCTION7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION6",283, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-6)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // FUNCTION6 ::= FUNCTION7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION6",283, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // FUNCTION7 ::= FUNCTION4 BEGIN FUNCTION8 FUNCTION9 END FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION7",284, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // FUNCTION8 ::= SELECT1 FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION8",285, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // FUNCTION8 ::= INSERT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION8",285, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // FUNCTION8 ::= DEL1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION8",285, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // FUNCTION8 ::= UPDATE0 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION8",285, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // FUNCTION9 ::= FUNCTION8 FUNCTION9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION9",286, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // FUNCTION9 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION9",286, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // TABLE1 ::= OBJECT Parentesisapertura TABLE2 TABLE3 Parentesiscerradura TABLE4 FIN_AN INICIO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE1",288, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-7)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // TABLE2 ::= COL_DEF 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE2",289, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // TABLE2 ::= TB_CST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE2",289, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // TABLE2 ::= COL_CST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE2",289, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // TABLE3 ::= Coma TABLE2 TABLE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE3",290, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // TABLE3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE3",290, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // TABLE4 ::= ON TABLE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE4",291, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // TABLE4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE4",291, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // TABLE5 ::= Identificador Parentesisapertura Identificador Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE5",292, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // TABLE5 ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE5",292, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // FIN_AN ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FIN_AN",287, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // FIN_AN ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FIN_AN",287, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // DEFV ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // DEFV ::= Float 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // DEFV ::= Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // DEFV ::= DBit 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // DEFV ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // DEL1 ::= DELETE DEL2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL1",227, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // DEL2 ::= TOP Parentesisapertura SEXP Parentesiscerradura DEL3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL2",228, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // DEL2 ::= DEL4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL2",228, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // DEL3 ::= PERCENT DEL4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL3",229, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // DEL3 ::= DEL4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL3",229, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // DEL4 ::= FROM DEL5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL4",230, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // DEL4 ::= DEL5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL4",230, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // DEL5 ::= OBJECT DEL6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL5",231, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // DEL5 ::= Arroba Identificador DEL6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL5",231, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // DEL6 ::= OUTCL DEL7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL6",232, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // DEL6 ::= DEL7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL6",232, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // DEL7 ::= FROM JOINTB DEL8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL7",233, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // DEL7 ::= DEL9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL7",233, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // DEL8 ::= Coma JOINTB DEL8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL8",234, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // DEL8 ::= DEL9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL8",234, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // DEL9 ::= WHERE SH_COND DEL10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL9",235, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // DEL9 ::= DEL10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL9",235, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // DEL10 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL10",236, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // DEL10 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL10",236, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // INSERT1 ::= INSERT INSERT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT1",196, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // INSERT2 ::= TOP Parentesisapertura SEXP Parentesiscerradura INSERT3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT2",197, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // INSERT2 ::= INSERT4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT2",197, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // INSERT3 ::= PERCENT INSERT4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT3",198, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // INSERT3 ::= INSERT4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT3",198, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // INSERT4 ::= INTO INSERT5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT4",199, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // INSERT4 ::= INSERT5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT4",199, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // INSERT5 ::= OBJECT INSERT6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT5",200, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // INSERT6 ::= COLST INSERT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT6",201, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // INSERT6 ::= INSERT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT6",201, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 538: // INSERT7 ::= OUTCL INSERT8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT7",202, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 539: // INSERT7 ::= INSERT8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT7",202, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 540: // INSERT8 ::= VALUES Parentesisapertura INSERT9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT8",203, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 541: // INSERT8 ::= SELECT1 INSERT10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT8",203, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 542: // INSERT8 ::= DEFAULT VALUES INSERT10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT8",203, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 543: // INSERT9 ::= INSERT11 INSERT12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT9",204, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 544: // INSERT11 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT11",206, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 545: // INSERT11 ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT11",206, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 546: // INSERT11 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT11",206, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 547: // INSERT12 ::= Coma INSERT9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT12",207, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 548: // INSERT12 ::= Parentesiscerradura INSERT13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT12",207, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 549: // INSERT13 ::= Coma VALUES Parentesisapertura INSERT9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT13",208, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 550: // INSERT13 ::= INSERT10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT13",208, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 551: // INSERT10 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT10",205, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 552: // INSERT10 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT10",205, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 553: // SELECT1 ::= SELECT SELECT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT1",178, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 554: // SELECT2 ::= SELECT3 SELECT4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT2",179, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 555: // SELECT3 ::= ALL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT3",180, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 556: // SELECT3 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT3",180, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 557: // SELECT3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT3",180, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 558: // SELECT4 ::= TOP SELECT5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT4",181, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 559: // SELECT4 ::= SELECT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT4",181, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 560: // SELECT5 ::= Parentesisapertura SEXP Parentesiscerradura SELECT6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT5",182, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 561: // SELECT6 ::= PERCENT SELECT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT6",183, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 562: // SELECT6 ::= SELECT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT6",183, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 563: // SELECT7 ::= SELIST SELECT20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT7",184, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 564: // SELECT20 ::= Coma SELECT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT20",195, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 565: // SELECT20 ::= SELECT8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT20",195, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 566: // SELECT8 ::= INTO SELECT9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT8",185, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 567: // SELECT8 ::= SELECT11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT8",185, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 568: // SELECT9 ::= OBJECT SELECT11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT9",186, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 569: // SELECT11 ::= FROM JOINTB SELECT12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT11",187, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 570: // SELECT11 ::= SELECT12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT11",187, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 571: // SELECT12 ::= WHERE SH_COND SELECT13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT12",188, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 572: // SELECT12 ::= SELECT13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT12",188, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 573: // SELECT13 ::= GROUP BY EXPRESSION SELECT18 SELECT14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT13",189, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 574: // SELECT13 ::= SELECT14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT13",189, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 575: // SELECT14 ::= HAVING SH_COND SELECT15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT14",190, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 576: // SELECT14 ::= SELECT15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT14",190, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 577: // SELECT15 ::= ORDER BY ORDERB 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT15",191, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 578: // SELECT15 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT15",191, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 579: // SELECT18 ::= Coma EXPRESSION SELECT18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT18",193, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 580: // SELECT18 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT18",193, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 581: // TB_IX ::= INDEX Identificador Parentesisapertura TB_IX1 Parentesiscerradura TB_IX4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX",294, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 582: // TB_IX1 ::= Identificador TB_IX2 TB_IX3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX1",295, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 583: // TB_IX2 ::= ASC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX2",296, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 584: // TB_IX2 ::= DEC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX2",296, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 585: // TB_IX2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX2",296, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 586: // TB_IX3 ::= Coma TB_IX2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX3",297, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 587: // TB_IX3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX3",297, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 588: // TB_IX4 ::= WITH FILLFACTOR Signoigual Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX4",298, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 589: // TB_IX4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX4",298, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 590: // CRT ::= CREATE CRT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT",299, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 591: // CRT1 ::= DATABASE Identificador DATABASE1 FIN_AN INICIO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 592: // CRT1 ::= OR ALTER CRT2 INICIO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 593: // CRT1 ::= CRT2 INICIO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 594: // CRT1 ::= USER Identificador FIN_AN INICIO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 595: // CRT1 ::= TABLE TABLE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 596: // CRT2 ::= PROC PROCEDURE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT2",301, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 597: // CRT2 ::= PROCEDURE PROCEDURE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT2",301, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 598: // CRT2 ::= VIEW VIEW1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT2",301, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 599: // CRT2 ::= FUNCTION FUNCTION1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT2",301, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MiniSQL$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 2 with the actual generated action code for actions 600 to 900. */
  public final java_cup.runtime.Symbol CUP$MiniSQL$do_action_part00000002(
    int                        CUP$MiniSQL$act_num,
    java_cup.runtime.lr_parser CUP$MiniSQL$parser,
    java.util.Stack            CUP$MiniSQL$stack,
    int                        CUP$MiniSQL$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MiniSQL$result;

      /* select the action based on the action number */
      switch (CUP$MiniSQL$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 600: // DATABASE1 ::= ON DATABASE2 DATABASE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE1",302, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 601: // DATABASE1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE1",302, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 602: // DATABASE2 ::= PRIMARY FLSPC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE2",303, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 603: // DATABASE3 ::= COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE3",304, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 604: // DATABASE3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE3",304, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 605: // DATABASE4 ::= Coma FLSPC DATABASE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE4",305, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 606: // DATABASE4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE4",305, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 607: // FLSPC ::= Parentesisapertura NAMES Signoigual Cadena Coma FILE Signoigual Cadena FLSPC1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FLSPC",306, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-9)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 608: // FLSPC1 ::= Coma SIZE Signoigual Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FLSPC1",307, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 609: // FLSPC1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FLSPC1",307, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 610: // VIEW1 ::= Identificador VIEW2 VIEW3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW1",325, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 611: // VIEW2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW2",326, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 612: // VIEW2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW2",326, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 613: // VIEW3 ::= Parentesisapertura VIEW4 Parentesiscerradura AS SELECT1 VIEW6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW3",327, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 614: // VIEW3 ::= AS SELECT1 VIEW6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW3",327, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 615: // VIEW4 ::= Identificador VIEW5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW4",328, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 616: // VIEW4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW4",328, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 617: // VIEW5 ::= Coma Identificador VIEW5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW5",329, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 618: // VIEW5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW5",329, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 619: // VIEW6 ::= WITH CHECK OPTION FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW6",330, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 620: // VIEW6 ::= FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW6",330, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 621: // PROCEDURE1 ::= Identificador PROCEDURE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE1",308, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 622: // PROCEDURE2 ::= Punto Identificador PROCEDURE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",309, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 623: // PROCEDURE2 ::= PROCEDURE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",309, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 624: // PROCEDURE3 ::= Puntoycoma Entero PROCEDURE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",310, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 625: // PROCEDURE3 ::= PROCEDURE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",310, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 626: // PROCEDURE4 ::= Arroba Identificador PROCEDURE5 DATATYPE PROCEDURE6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE4",311, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 627: // PROCEDURE5 ::= AS 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",312, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 628: // PROCEDURE5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",312, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 629: // PROCEDURE6 ::= VARYING PROCEDURE7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",313, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 630: // PROCEDURE6 ::= PROCEDURE7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",313, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 631: // PROCEDURE7 ::= Signoigual DEFV PROCEDURE8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",314, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 632: // PROCEDURE7 ::= PROCEDURE8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",314, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 633: // PROCEDURE8 ::= OUTPUT PROCEDURE9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",315, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 634: // PROCEDURE8 ::= PROCEDURE9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",315, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 635: // PROCEDURE9 ::= Coma PROCEDURE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",316, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 636: // PROCEDURE9 ::= PROCEDURE10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",316, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 637: // PROCEDURE10 ::= WITH PROCEDURE11 AS PROCEDURE12 PROCEDURE13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",317, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 638: // PROCEDURE10 ::= PROCEDURE13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",317, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 639: // PROCEDURE11 ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",318, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 640: // PROCEDURE11 ::= EXEC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",318, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 641: // PROCEDURE12 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE12",319, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 642: // PROCEDURE13 ::= FOR REPLICATION PROCEDURE14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE13",320, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 643: // PROCEDURE13 ::= PROCEDURE14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE13",320, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 644: // PROCEDURE14 ::= AS PROCEDURE15 PROCEDURE16 PROCEDURE17 FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE14",321, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 645: // PROCEDURE15 ::= BEGIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE15",322, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 646: // PROCEDURE15 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE15",322, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 647: // PROCEDURE16 ::= SELECT1 FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",323, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 648: // PROCEDURE16 ::= INSERT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",323, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 649: // PROCEDURE16 ::= DEL1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",323, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 650: // PROCEDURE16 ::= UPDATE0 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",323, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 651: // PROCEDURE17 ::= PROCEDURE16 PROCEDURE17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE17",324, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 652: // PROCEDURE17 ::= END 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE17",324, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 653: // PROCEDURE17 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE17",324, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MiniSQL$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$MiniSQL$do_action(
    int                        CUP$MiniSQL$act_num,
    java_cup.runtime.lr_parser CUP$MiniSQL$parser,
    java.util.Stack            CUP$MiniSQL$stack,
    int                        CUP$MiniSQL$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$MiniSQL$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$MiniSQL$do_action_part00000000(
                               CUP$MiniSQL$act_num,
                               CUP$MiniSQL$parser,
                               CUP$MiniSQL$stack,
                               CUP$MiniSQL$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$MiniSQL$do_action_part00000001(
                               CUP$MiniSQL$act_num,
                               CUP$MiniSQL$parser,
                               CUP$MiniSQL$stack,
                               CUP$MiniSQL$top);
          /*. . . . . . . . 600 < #action < 900. . . . . . . . . . . .*/
          case 2: 
              return CUP$MiniSQL$do_action_part00000002(
                               CUP$MiniSQL$act_num,
                               CUP$MiniSQL$parser,
                               CUP$MiniSQL$stack,
                               CUP$MiniSQL$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
