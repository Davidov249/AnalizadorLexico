
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizadores;

import java_cup.runtime.*;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class MiniSQL extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public MiniSQL() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public MiniSQL(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public MiniSQL(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0288\000\002\002\004\000\002\002\003\000\002\002" +
    "\003\000\002\002\003\000\002\002\003\000\002\003\007" +
    "\000\002\004\004\000\002\004\002\000\002\005\003\000" +
    "\002\005\003\000\002\006\004\000\002\007\005\000\002" +
    "\007\002\000\002\010\005\000\002\010\002\000\002\011" +
    "\004\000\002\011\002\000\002\360\005\000\002\361\004" +
    "\000\002\361\004\000\002\361\004\000\002\361\004\000" +
    "\002\361\004\000\002\362\004\000\002\362\002\000\002" +
    "\363\004\000\002\364\004\000\002\364\003\000\002\365" +
    "\004\000\002\366\004\000\002\366\003\000\002\367\004" +
    "\000\002\370\005\000\002\370\003\000\002\372\003\000" +
    "\002\372\003\000\002\373\004\000\002\373\003\000\002" +
    "\374\004\000\002\375\004\000\002\375\005\000\002\375" +
    "\005\000\002\375\005\000\002\376\004\000\002\377\005" +
    "\000\002\377\003\000\002\u0100\005\000\002\u0100\005\000" +
    "\002\u0101\005\000\002\u0101\006\000\002\u0102\006\000\002" +
    "\u0102\004\000\002\u0102\004\000\002\u0103\005\000\002\u0103" +
    "\004\000\002\u0103\004\000\002\u0104\004\000\002\u0104\002" +
    "\000\002\u0105\007\000\002\u0106\004\000\002\u0106\002\000" +
    "\002\u0107\005\000\002\u0107\003\000\002\u0108\003\000\002" +
    "\u0108\002\000\002\u0109\003\000\002\u0109\004\000\002\u010a" +
    "\003\000\002\u010a\005\000\002\u010b\004\000\002\u010b\004" +
    "\000\002\u010c\004\000\002\u010c\003\000\002\u010d\003\000" +
    "\002\u010d\003\000\002\u010e\004\000\002\u010e\004\000\002" +
    "\u010e\003\000\002\u010f\005\000\002\u010f\003\000\002\u0110" +
    "\004\000\002\u0111\004\000\002\u0111\003\000\002\u0112\003" +
    "\000\002\u0112\003\000\002\u0113\005\000\002\u0114\005\000" +
    "\002\u0114\002\000\002\071\004\000\002\072\006\000\002" +
    "\072\003\000\002\073\004\000\002\073\002\000\002\074" +
    "\004\000\002\074\010\000\002\074\010\000\002\075\003" +
    "\000\002\075\003\000\002\075\003\000\002\075\003\000" +
    "\002\075\003\000\002\075\003\000\002\075\003\000\002" +
    "\075\003\000\002\076\004\000\002\076\004\000\002\076" +
    "\005\000\002\076\006\000\002\076\005\000\002\076\005" +
    "\000\002\077\005\000\002\077\006\000\002\077\005\000" +
    "\002\100\003\000\002\100\002\000\002\101\005\000\002" +
    "\101\002\000\002\102\004\000\002\102\002\000\002\103" +
    "\003\000\002\103\003\000\002\104\003\000\002\105\003" +
    "\000\002\105\004\000\002\106\005\000\002\106\006\000" +
    "\002\107\004\000\002\107\002\000\002\110\004\000\002" +
    "\110\003\000\002\111\004\000\002\111\006\000\002\112" +
    "\003\000\002\112\002\000\002\113\005\000\002\114\010" +
    "\000\002\114\010\000\002\025\006\000\002\025\006\000" +
    "\002\025\006\000\002\025\006\000\002\025\006\000\002" +
    "\026\004\000\002\027\003\000\002\027\003\000\002\027" +
    "\002\000\002\030\003\000\002\030\004\000\002\031\004" +
    "\000\002\031\002\000\002\032\004\000\002\033\003\000" +
    "\002\033\003\000\002\033\002\000\002\034\003\000\002" +
    "\034\004\000\002\034\003\000\002\035\004\000\002\035" +
    "\002\000\002\036\004\000\002\037\003\000\002\037\003" +
    "\000\002\037\002\000\002\040\004\000\002\040\003\000" +
    "\002\041\004\000\002\041\002\000\002\042\005\000\002" +
    "\042\005\000\002\042\005\000\002\043\003\000\002\043" +
    "\003\000\002\043\003\000\002\044\003\000\002\044\003" +
    "\000\002\045\003\000\002\045\003\000\002\045\003\000" +
    "\002\046\003\000\002\046\003\000\002\012\004\000\002" +
    "\013\005\000\002\013\005\000\002\013\002\000\002\014" +
    "\004\000\002\015\005\000\002\015\005\000\002\015\002" +
    "\000\002\016\005\000\002\016\003\000\002\016\003\000" +
    "\002\016\004\000\002\016\003\000\002\017\005\000\002" +
    "\017\005\000\002\020\007\000\002\021\005\000\002\022" +
    "\005\000\002\022\002\000\002\023\004\000\002\024\004" +
    "\000\002\024\003\000\002\063\004\000\002\063\003\000" +
    "\002\065\004\000\002\066\004\000\002\066\004\000\002" +
    "\066\004\000\002\066\004\000\002\066\004\000\002\066" +
    "\004\000\002\066\004\000\002\066\004\000\002\066\004" +
    "\000\002\066\004\000\002\066\004\000\002\066\004\000" +
    "\002\066\004\000\002\067\005\000\002\067\002\000\002" +
    "\070\005\000\002\070\003\000\002\234\004\000\002\235" +
    "\004\000\002\235\002\000\002\236\005\000\002\236\004" +
    "\000\002\236\003\000\002\236\004\000\002\236\004\000" +
    "\002\236\004\000\002\237\004\000\002\237\003\000\002" +
    "\240\005\000\002\240\003\000\002\241\010\000\002\241" +
    "\011\000\002\242\007\000\002\243\006\000\002\244\004" +
    "\000\002\244\002\000\002\245\005\000\002\245\003\000" +
    "\002\246\006\000\002\247\005\000\002\247\005\000\002" +
    "\247\002\000\002\250\003\000\002\250\003\000\002\251" +
    "\004\000\002\251\003\000\002\251\004\000\002\252\003" +
    "\000\002\252\003\000\002\253\006\000\002\253\003\000" +
    "\002\254\006\000\002\255\005\000\002\256\006\000\002" +
    "\257\006\000\002\260\004\000\002\260\002\000\002\261" +
    "\005\000\002\261\002\000\002\262\004\000\002\262\003" +
    "\000\002\263\004\000\002\263\002\000\002\221\005\000" +
    "\002\222\005\000\002\222\003\000\002\223\004\000\002" +
    "\223\005\000\002\223\003\000\002\223\004\000\002\224" +
    "\005\000\002\224\003\000\002\224\003\000\002\225\005" +
    "\000\002\226\005\000\002\226\003\000\002\227\010\000" +
    "\002\227\003\000\002\230\006\000\002\230\003\000\002" +
    "\231\004\000\002\231\003\000\002\233\003\000\002\233" +
    "\003\000\002\062\004\000\002\062\003\000\002\062\003" +
    "\000\002\062\003\000\002\062\003\000\002\174\004\000" +
    "\002\175\004\000\002\176\004\000\002\176\003\000\002" +
    "\177\003\000\002\177\003\000\002\177\003\000\002\170" +
    "\005\000\002\170\002\000\002\171\004\000\002\171\002" +
    "\000\002\172\005\000\002\172\004\000\002\173\003\000" +
    "\002\173\002\000\002\164\004\000\002\165\003\000\002" +
    "\165\003\000\002\166\005\000\002\166\002\000\002\167" +
    "\004\000\002\167\002\000\002\u0115\005\000\002\u0116\003" +
    "\000\002\u0116\003\000\002\154\003\000\002\155\003\000" +
    "\002\155\004\000\002\155\004\000\002\155\004\000\002" +
    "\155\004\000\002\155\004\000\002\155\004\000\002\155" +
    "\004\000\002\156\004\000\002\156\004\000\002\156\002" +
    "\000\002\157\003\000\002\157\004\000\002\161\004\000" +
    "\002\161\003\000\002\161\002\000\002\162\003\000\002" +
    "\147\004\000\002\150\003\000\002\150\004\000\002\151" +
    "\004\000\002\151\003\000\002\152\004\000\002\153\003" +
    "\000\002\153\003\000\002\144\005\000\002\144\004\000" +
    "\002\144\005\000\002\145\004\000\002\145\003\000\002" +
    "\145\002\000\002\146\003\000\002\146\002\000\002\137" +
    "\004\000\002\137\005\000\002\140\004\000\002\140\005" +
    "\000\002\140\002\000\002\141\004\000\002\141\005\000" +
    "\002\142\006\000\002\143\003\000\002\143\002\000\002" +
    "\133\004\000\002\134\003\000\002\134\003\000\002\135" +
    "\004\000\002\135\004\000\002\135\004\000\002\135\003" +
    "\000\002\136\004\000\002\136\003\000\002\130\006\000" +
    "\002\131\004\000\002\132\003\000\002\132\003\000\002" +
    "\132\002\000\002\127\010\000\002\127\010\000\002\056" +
    "\004\000\002\057\004\000\002\057\003\000\002\060\007" +
    "\000\002\061\005\000\002\061\003\000\002\061\003\000" +
    "\002\047\003\000\002\047\003\000\002\047\003\000\002" +
    "\047\003\000\002\050\003\000\002\051\003\000\002\052" +
    "\003\000\002\052\003\000\002\053\003\000\002\054\003" +
    "\000\002\054\003\000\002\054\003\000\002\054\003\000" +
    "\002\054\003\000\002\055\003\000\002\055\003\000\002" +
    "\055\003\000\002\u0117\003\000\002\u0117\003\000\002\u0117" +
    "\003\000\002\u0117\003\000\002\u0117\003\000\002\123\007" +
    "\000\002\123\003\000\002\123\003\000\002\123\010\000" +
    "\002\124\005\000\002\124\003\000\002\125\005\000\002" +
    "\125\003\000\002\126\006\000\002\120\006\000\002\120" +
    "\012\000\002\120\006\000\002\120\006\000\002\120\010" +
    "\000\002\120\007\000\002\120\006\000\002\120\010\000" +
    "\002\120\006\000\002\120\012\000\002\121\004\000\002" +
    "\121\003\000\002\121\003\000\002\122\004\000\002\122" +
    "\002\000\002\115\003\000\002\115\006\000\002\115\006" +
    "\000\002\115\006\000\002\115\005\000\002\116\003\000" +
    "\002\116\004\000\002\117\004\000\002\117\003\000\002" +
    "\323\005\000\002\324\010\000\002\324\003\000\002\325" +
    "\003\000\002\325\002\000\002\326\004\000\002\326\005" +
    "\000\002\327\004\000\002\330\004\000\002\331\004\000" +
    "\002\331\006\000\002\332\004\000\002\334\003\000\002" +
    "\334\003\000\002\334\003\000\002\334\003\000\002\335" +
    "\003\000\002\336\004\000\002\336\003\000\002\337\004" +
    "\000\002\337\003\000\002\343\005\000\002\343\003\000" +
    "\002\344\004\000\002\344\002\000\002\342\003\000\002" +
    "\342\003\000\002\u0118\012\000\002\u0119\004\000\002\u0119" +
    "\002\000\002\u011a\010\000\002\u011a\002\000\002\u011b\003" +
    "\000\002\u011b\002\000\002\u011c\004\000\002\u011c\002\000" +
    "\002\u011d\011\000\002\u011d\003\000\002\u011e\010\000\002" +
    "\u011f\004\000\002\u011f\003\000\002\u011f\003\000\002\u011f" +
    "\003\000\002\u0120\004\000\002\u0120\002\000\002\u0122\011" +
    "\000\002\u0123\003\000\002\u0123\003\000\002\u0123\003\000" +
    "\002\u0124\005\000\002\u0124\002\000\002\u0125\004\000\002" +
    "\u0125\002\000\002\u0126\006\000\002\u0126\003\000\002\u0121" +
    "\003\000\002\u0121\003\000\002\u0127\003\000\002\u0127\003" +
    "\000\002\u0127\003\000\002\u0127\003\000\002\u0127\003\000" +
    "\002\345\004\000\002\346\007\000\002\346\003\000\002" +
    "\347\004\000\002\347\003\000\002\350\004\000\002\350" +
    "\003\000\002\351\004\000\002\351\005\000\002\352\004" +
    "\000\002\352\003\000\002\353\005\000\002\353\003\000" +
    "\002\354\005\000\002\354\003\000\002\355\005\000\002" +
    "\355\003\000\002\356\003\000\002\356\003\000\002\306" +
    "\004\000\002\307\007\000\002\307\003\000\002\310\004" +
    "\000\002\310\003\000\002\311\004\000\002\311\003\000" +
    "\002\312\004\000\002\313\004\000\002\313\003\000\002" +
    "\314\004\000\002\314\003\000\002\315\005\000\002\315" +
    "\004\000\002\315\005\000\002\316\004\000\002\320\003" +
    "\000\002\320\003\000\002\320\003\000\002\321\004\000" +
    "\002\321\004\000\002\322\006\000\002\322\003\000\002" +
    "\317\003\000\002\317\003\000\002\264\004\000\002\265" +
    "\004\000\002\266\003\000\002\266\003\000\002\266\002" +
    "\000\002\267\004\000\002\267\003\000\002\270\006\000" +
    "\002\271\004\000\002\271\003\000\002\272\004\000\002" +
    "\305\004\000\002\305\003\000\002\273\004\000\002\273" +
    "\003\000\002\274\004\000\002\275\005\000\002\275\003" +
    "\000\002\276\005\000\002\276\003\000\002\277\007\000" +
    "\002\277\003\000\002\300\005\000\002\300\003\000\002" +
    "\301\005\000\002\301\002\000\002\303\005\000\002\303" +
    "\002\000\002\u0128\010\000\002\u0129\005\000\002\u012a\003" +
    "\000\002\u012a\003\000\002\u012a\002\000\002\u012b\004\000" +
    "\002\u012b\002\000\002\u012c\006\000\002\u012c\002\000\002" +
    "\u012d\004\000\002\u012e\006\000\002\u012e\005\000\002\u012e" +
    "\003\000\002\u012e\005\000\002\u012e\004\000\002\u012f\004" +
    "\000\002\u012f\004\000\002\u012f\004\000\002\u012f\004\000" +
    "\002\u0130\005\000\002\u0130\002\000\002\u0131\004\000\002" +
    "\u0132\004\000\002\u0132\002\000\002\u0133\005\000\002\u0133" +
    "\002\000\002\u0134\014\000\002\u0135\006\000\002\u0135\002" +
    "\000\002\u0147\005\000\002\u0148\004\000\002\u0148\002\000" +
    "\002\u0149\010\000\002\u0149\005\000\002\u014a\004\000\002" +
    "\u014a\002\000\002\u014b\005\000\002\u014b\002\000\002\u014c" +
    "\006\000\002\u014c\003\000\002\u0136\004\000\002\u0137\005" +
    "\000\002\u0137\003\000\002\u0138\005\000\002\u0138\003\000" +
    "\002\u0139\007\000\002\u013a\003\000\002\u013a\002\000\002" +
    "\u013b\004\000\002\u013b\003\000\002\u013c\005\000\002\u013c" +
    "\003\000\002\u013d\004\000\002\u013d\003\000\002\u013e\004" +
    "\000\002\u013e\003\000\002\u013f\007\000\002\u013f\003\000" +
    "\002\u0140\003\000\002\u0140\003\000\002\u0141\003\000\002" +
    "\u0142\005\000\002\u0142\003\000\002\u0143\007\000\002\u0144" +
    "\003\000\002\u0144\002\000\002\u0145\004\000\002\u0145\003" +
    "\000\002\u0145\003\000\002\u0145\003\000\002\u0146\004\000" +
    "\002\u0146\003\000\002\u0146\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02cb\000\012\132\004\216\012\361\007\u0124\005\001" +
    "\002\000\016\103\uffe9\205\uffe9\214\u02ac\u010b\uffe9\u0127\uffe9" +
    "\u012f\uffe9\001\002\000\010\u0116\u027f\u015e\u0281\u0161\021\001" +
    "\002\000\004\002\u027c\001\002\000\106\010\320\023\ufdda" +
    "\040\ufdda\041\ufdda\043\ufdda\070\ufdda\072\ufdda\100\ufdda\105" +
    "\ufdda\126\315\231\ufdda\244\ufdda\250\ufdda\251\ufdda\252\ufdda" +
    "\260\ufdda\265\ufdda\347\ufdda\364\ufdda\373\ufdda\u0105\ufdda\u0106" +
    "\ufdda\u0116\ufdda\u0119\ufdda\u011b\ufdda\u0125\ufdda\u0138\ufdda\u013d\ufdda" +
    "\u013f\ufdda\u0140\ufdda\u0145\ufdda\u0158\ufdda\u015e\ufdda\u0161\ufdda\001" +
    "\002\000\004\002\uffff\001\002\000\004\002\000\001\002" +
    "\000\010\223\020\u0116\017\u0161\021\001\002\000\004\002" +
    "\ufffd\001\002\000\004\002\ufffe\001\002\000\004\002\ufdf7" +
    "\001\002\000\014\113\156\312\155\361\007\u012b\165\u0158" +
    "\166\001\002\000\004\u0158\036\001\002\000\004\u0161\021" +
    "\001\002\000\072\002\ufff5\016\ufff5\074\ufff5\113\ufff5\164" +
    "\ufff5\166\ufff5\172\ufff5\175\ufff5\176\ufff5\210\ufff5\226\ufff5" +
    "\231\ufff5\270\ufff5\304\ufff5\306\ufff5\312\ufff5\347\ufff5\361" +
    "\ufff5\364\ufff5\u0110\ufff5\u012b\ufff5\u0133\ufff5\u014c\ufff5\u0152\ufff5" +
    "\u0153\ufff5\u0154\025\u0158\ufff5\u0161\ufff5\001\002\000\004\002" +
    "\ufdf1\001\002\000\004\002\ufdf5\001\002\000\124\002\ufff7" +
    "\013\ufff7\016\ufff7\026\ufff7\074\ufff7\113\ufff7\140\ufff7\164" +
    "\ufff7\166\ufff7\172\ufff7\175\ufff7\176\ufff7\203\ufff7\210\ufff7" +
    "\224\ufff7\226\ufff7\231\ufff7\235\ufff7\251\ufff7\270\ufff7\303" +
    "\ufff7\304\ufff7\306\ufff7\312\ufff7\347\ufff7\361\ufff7\364\ufff7" +
    "\u0110\ufff7\u012b\ufff7\u0133\ufff7\u0148\ufff7\u0149\ufff7\u014a\ufff7\u014b" +
    "\ufff7\u014c\ufff7\u014e\ufff7\u0152\ufff7\u0153\ufff7\u0158\ufff7\u0159\ufff7" +
    "\u0161\ufff7\001\002\000\004\u0161\026\001\002\000\126\002" +
    "\ufff3\013\ufff3\016\ufff3\026\ufff3\074\ufff3\113\ufff3\140\ufff3" +
    "\164\ufff3\166\ufff3\172\ufff3\175\ufff3\176\ufff3\203\ufff3\210" +
    "\ufff3\224\ufff3\226\ufff3\231\ufff3\235\ufff3\251\ufff3\270\ufff3" +
    "\303\ufff3\304\ufff3\306\ufff3\312\ufff3\347\ufff3\361\ufff3\364" +
    "\ufff3\u0110\ufff3\u012b\ufff3\u0133\ufff3\u0148\ufff3\u0149\ufff3\u014a\ufff3" +
    "\u014b\ufff3\u014c\ufff3\u014e\ufff3\u0152\ufff3\u0153\ufff3\u0154\030\u0158" +
    "\ufff3\u0159\ufff3\u0161\ufff3\001\002\000\124\002\ufff6\013\ufff6" +
    "\016\ufff6\026\ufff6\074\ufff6\113\ufff6\140\ufff6\164\ufff6\166" +
    "\ufff6\172\ufff6\175\ufff6\176\ufff6\203\ufff6\210\ufff6\224\ufff6" +
    "\226\ufff6\231\ufff6\235\ufff6\251\ufff6\270\ufff6\303\ufff6\304" +
    "\ufff6\306\ufff6\312\ufff6\347\ufff6\361\ufff6\364\ufff6\u0110\ufff6" +
    "\u012b\ufff6\u0133\ufff6\u0148\ufff6\u0149\ufff6\u014a\ufff6\u014b\ufff6\u014c" +
    "\ufff6\u014e\ufff6\u0152\ufff6\u0153\ufff6\u0158\ufff6\u0159\ufff6\u0161\ufff6" +
    "\001\002\000\004\u0161\031\001\002\000\126\002\ufff1\013" +
    "\ufff1\016\ufff1\026\ufff1\074\ufff1\113\ufff1\140\ufff1\164\ufff1" +
    "\166\ufff1\172\ufff1\175\ufff1\176\ufff1\203\ufff1\210\ufff1\224" +
    "\ufff1\226\ufff1\231\ufff1\235\ufff1\251\ufff1\270\ufff1\303\ufff1" +
    "\304\ufff1\306\ufff1\312\ufff1\347\ufff1\361\ufff1\364\ufff1\u0110" +
    "\ufff1\u012b\ufff1\u0133\ufff1\u0148\ufff1\u0149\ufff1\u014a\ufff1\u014b\ufff1" +
    "\u014c\ufff1\u014e\ufff1\u0152\ufff1\u0153\ufff1\u0154\033\u0158\ufff1\u0159" +
    "\ufff1\u0161\ufff1\001\002\000\124\002\ufff4\013\ufff4\016\ufff4" +
    "\026\ufff4\074\ufff4\113\ufff4\140\ufff4\164\ufff4\166\ufff4\172" +
    "\ufff4\175\ufff4\176\ufff4\203\ufff4\210\ufff4\224\ufff4\226\ufff4" +
    "\231\ufff4\235\ufff4\251\ufff4\270\ufff4\303\ufff4\304\ufff4\306" +
    "\ufff4\312\ufff4\347\ufff4\361\ufff4\364\ufff4\u0110\ufff4\u012b\ufff4" +
    "\u0133\ufff4\u0148\ufff4\u0149\ufff4\u014a\ufff4\u014b\ufff4\u014c\ufff4\u014e" +
    "\ufff4\u0152\ufff4\u0153\ufff4\u0158\ufff4\u0159\ufff4\u0161\ufff4\001\002" +
    "\000\004\u0161\034\001\002\000\124\002\ufff2\013\ufff2\016" +
    "\ufff2\026\ufff2\074\ufff2\113\ufff2\140\ufff2\164\ufff2\166\ufff2" +
    "\172\ufff2\175\ufff2\176\ufff2\203\ufff2\210\ufff2\224\ufff2\226" +
    "\ufff2\231\ufff2\235\ufff2\251\ufff2\270\ufff2\303\ufff2\304\ufff2" +
    "\306\ufff2\312\ufff2\347\ufff2\361\ufff2\364\ufff2\u0110\ufff2\u012b" +
    "\ufff2\u0133\ufff2\u0148\ufff2\u0149\ufff2\u014a\ufff2\u014b\ufff2\u014c\ufff2" +
    "\u014e\ufff2\u0152\ufff2\u0153\ufff2\u0158\ufff2\u0159\ufff2\u0161\ufff2\001" +
    "\002\000\004\002\ufdf2\001\002\000\024\023\041\072\043" +
    "\250\044\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e" +
    "\051\001\002\000\146\002\uff43\013\uff43\016\uff43\017\uff43" +
    "\026\uff43\054\uff43\074\uff43\113\uff43\120\uff43\134\uff43\135" +
    "\uff43\140\uff43\164\uff43\166\uff43\172\uff43\175\uff43\176\uff43" +
    "\203\uff43\210\uff43\223\uff43\224\uff43\226\uff43\231\uff43\235" +
    "\uff43\251\uff43\303\uff43\304\uff43\307\uff43\312\uff43\347\uff43" +
    "\352\uff43\361\uff43\u010d\uff43\u012b\uff43\u0131\uff43\u0133\uff43\u0143" +
    "\uff43\u0144\uff43\u0145\uff43\u0146\uff43\u0147\uff43\u0148\uff43\u0149\uff43" +
    "\u014a\uff43\u014b\uff43\u014e\uff43\u0152\uff43\u0153\uff43\u0159\uff43\u0161" +
    "\uff43\001\002\000\004\u0158\152\001\002\000\004\u0158\136" +
    "\001\002\000\004\u0159\131\001\002\000\004\u0158\114\001" +
    "\002\000\004\u0158\111\001\002\000\146\002\uff44\013\uff44" +
    "\016\uff44\017\uff44\026\uff44\054\uff44\074\uff44\113\uff44\120" +
    "\uff44\134\uff44\135\uff44\140\uff44\164\uff44\166\uff44\172\uff44" +
    "\175\uff44\176\uff44\203\uff44\210\uff44\223\uff44\224\uff44\226" +
    "\uff44\231\uff44\235\uff44\251\uff44\303\uff44\304\uff44\307\uff44" +
    "\312\uff44\347\uff44\352\uff44\361\uff44\u010d\uff44\u012b\uff44\u0131" +
    "\uff44\u0133\uff44\u0143\uff44\u0144\uff44\u0145\uff44\u0146\uff44\u0147\uff44" +
    "\u0148\uff44\u0149\uff44\u014a\uff44\u014b\uff44\u014e\uff44\u0152\uff44\u0153" +
    "\uff44\u0159\uff44\u0161\uff44\001\002\000\146\002\uff46\013\uff46" +
    "\016\uff46\017\uff46\026\uff46\054\uff46\074\uff46\113\uff46\120" +
    "\uff46\134\uff46\135\uff46\140\uff46\164\uff46\166\uff46\172\uff46" +
    "\175\uff46\176\uff46\203\uff46\210\uff46\223\uff46\224\uff46\226" +
    "\uff46\231\uff46\235\uff46\251\uff46\303\uff46\304\uff46\307\uff46" +
    "\312\uff46\347\uff46\352\uff46\361\uff46\u010d\uff46\u012b\uff46\u0131" +
    "\uff46\u0133\uff46\u0143\uff46\u0144\uff46\u0145\103\u0146\104\u0147\uff46" +
    "\u0148\uff46\u0149\uff46\u014a\uff46\u014b\uff46\u014e\uff46\u0152\uff46\u0153" +
    "\uff46\u0159\uff46\u0161\uff46\001\002\000\146\002\uff4a\013\uff4a" +
    "\016\uff4a\017\uff4a\026\uff4a\054\uff4a\074\uff4a\113\uff4a\120" +
    "\uff4a\134\uff4a\135\uff4a\140\uff4a\164\uff4a\166\uff4a\172\uff4a" +
    "\175\uff4a\176\uff4a\203\uff4a\210\uff4a\223\uff4a\224\uff4a\226" +
    "\uff4a\231\uff4a\235\uff4a\251\uff4a\303\uff4a\304\uff4a\307\uff4a" +
    "\312\uff4a\347\uff4a\352\uff4a\361\uff4a\u010d\uff4a\u012b\uff4a\u0131" +
    "\uff4a\u0133\uff4a\u0143\074\u0144\073\u0145\uff4a\u0146\uff4a\u0147\uff4a" +
    "\u0148\uff4a\u0149\uff4a\u014a\uff4a\u014b\uff4a\u014e\uff4a\u0152\uff4a\u0153" +
    "\uff4a\u0159\uff4a\u0161\uff4a\001\002\000\024\023\041\072\043" +
    "\250\044\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e" +
    "\051\001\002\000\004\u0161\070\001\002\000\004\u0158\054" +
    "\001\002\000\146\002\uff41\013\uff41\016\uff41\017\uff41\026" +
    "\uff41\054\uff41\074\uff41\113\uff41\120\uff41\134\uff41\135\uff41" +
    "\140\uff41\164\uff41\166\uff41\172\uff41\175\uff41\176\uff41\203" +
    "\uff41\210\uff41\223\uff41\224\uff41\226\uff41\231\uff41\235\uff41" +
    "\251\uff41\303\uff41\304\uff41\307\uff41\312\uff41\347\uff41\352" +
    "\uff41\361\uff41\u010d\uff41\u012b\uff41\u0131\uff41\u0133\uff41\u0143\uff41" +
    "\u0144\uff41\u0145\uff41\u0146\uff41\u0147\uff41\u0148\uff41\u0149\uff41\u014a" +
    "\uff41\u014b\uff41\u014e\uff41\u0152\uff41\u0153\uff41\u0159\uff41\u0161\uff41" +
    "\001\002\000\032\010\056\023\uff5f\072\uff5f\126\055\250" +
    "\uff5f\252\uff5f\u0106\uff5f\u013d\uff5f\u013f\uff5f\u0158\uff5f\u015e\uff5f" +
    "\u0161\uff5f\001\002\000\026\023\uff60\072\uff60\250\uff60\252" +
    "\uff60\u0106\uff60\u013d\uff60\u013f\uff60\u0158\uff60\u015e\uff60\u0161\uff60" +
    "\001\002\000\026\023\uff61\072\uff61\250\uff61\252\uff61\u0106" +
    "\uff61\u013d\uff61\u013f\uff61\u0158\uff61\u015e\uff61\u0161\uff61\001\002" +
    "\000\004\u0159\067\001\002\000\026\023\041\072\043\250" +
    "\044\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e\051" +
    "\u0161\063\001\002\000\004\u0159\uff62\001\002\000\004\u0159" +
    "\uff5d\001\002\000\006\u0154\065\u0159\uff5b\001\002\000\004" +
    "\u0159\uff5e\001\002\000\004\u0161\066\001\002\000\004\u0159" +
    "\uff5c\001\002\000\146\002\uff75\013\uff75\016\uff75\017\uff75" +
    "\026\uff75\054\uff75\074\uff75\113\uff75\120\uff75\134\uff75\135" +
    "\uff75\140\uff75\164\uff75\166\uff75\172\uff75\175\uff75\176\uff75" +
    "\203\uff75\210\uff75\223\uff75\224\uff75\226\uff75\231\uff75\235" +
    "\uff75\251\uff75\303\uff75\304\uff75\307\uff75\312\uff75\347\uff75" +
    "\352\uff75\361\uff75\u010d\uff75\u012b\uff75\u0131\uff75\u0133\uff75\u0143" +
    "\uff75\u0144\uff75\u0145\uff75\u0146\uff75\u0147\uff75\u0148\uff75\u0149\uff75" +
    "\u014a\uff75\u014b\uff75\u014e\uff75\u0152\uff75\u0153\uff75\u0159\uff75\u0161" +
    "\uff75\001\002\000\146\002\uff42\013\uff42\016\uff42\017\uff42" +
    "\026\uff42\054\uff42\074\uff42\113\uff42\120\uff42\134\uff42\135" +
    "\uff42\140\uff42\164\uff42\166\uff42\172\uff42\175\uff42\176\uff42" +
    "\203\uff42\210\uff42\223\uff42\224\uff42\226\uff42\231\uff42\235" +
    "\uff42\251\uff42\303\uff42\304\uff42\307\uff42\312\uff42\347\uff42" +
    "\352\uff42\361\uff42\u010d\uff42\u012b\uff42\u0131\uff42\u0133\uff42\u0143" +
    "\uff42\u0144\uff42\u0145\uff42\u0146\uff42\u0147\uff42\u0148\uff42\u0149\uff42" +
    "\u014a\uff42\u014b\uff42\u014e\uff42\u0152\uff42\u0153\uff42\u0159\uff42\u0161" +
    "\uff42\001\002\000\004\u0159\072\001\002\000\146\002\uff45" +
    "\013\uff45\016\uff45\017\uff45\026\uff45\054\uff45\074\uff45\113" +
    "\uff45\120\uff45\134\uff45\135\uff45\140\uff45\164\uff45\166\uff45" +
    "\172\uff45\175\uff45\176\uff45\203\uff45\210\uff45\223\uff45\224" +
    "\uff45\226\uff45\231\uff45\235\uff45\251\uff45\303\uff45\304\uff45" +
    "\307\uff45\312\uff45\347\uff45\352\uff45\361\uff45\u010d\uff45\u012b" +
    "\uff45\u0131\uff45\u0133\uff45\u0143\uff45\u0144\uff45\u0145\uff45\u0146\uff45" +
    "\u0147\uff45\u0148\uff45\u0149\uff45\u014a\uff45\u014b\uff45\u014e\uff45\u0152" +
    "\uff45\u0153\uff45\u0159\uff45\u0161\uff45\001\002\000\024\023\041" +
    "\072\043\250\044\252\052\u0106\040\u013d\045\u013f\037\u0158" +
    "\050\u015e\051\001\002\000\024\023\041\072\043\250\044" +
    "\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e\051\001" +
    "\002\000\146\002\uff4d\013\uff4d\016\uff4d\017\uff4d\026\uff4d" +
    "\054\uff4d\074\uff4d\113\uff4d\120\uff4d\134\uff4d\135\uff4d\140" +
    "\uff4d\164\uff4d\166\uff4d\172\uff4d\175\uff4d\176\uff4d\203\uff4d" +
    "\210\uff4d\223\uff4d\224\uff4d\226\uff4d\231\uff4d\235\uff4d\251" +
    "\uff4d\303\uff4d\304\uff4d\307\uff4d\312\uff4d\347\uff4d\352\uff4d" +
    "\361\uff4d\u010d\uff4d\u012b\uff4d\u0131\uff4d\u0133\uff4d\u0143\uff4d\u0144" +
    "\uff4d\u0145\uff4d\u0146\uff4d\u0147\uff4d\u0148\uff4d\u0149\uff4d\u014a\uff4d" +
    "\u014b\uff4d\u014e\uff4d\u0152\uff4d\u0153\uff4d\u0159\uff4d\u0161\uff4d\001" +
    "\002\000\146\002\uff4a\013\uff4a\016\uff4a\017\uff4a\026\uff4a" +
    "\054\uff4a\074\uff4a\113\uff4a\120\uff4a\134\uff4a\135\uff4a\140" +
    "\uff4a\164\uff4a\166\uff4a\172\uff4a\175\uff4a\176\uff4a\203\uff4a" +
    "\210\uff4a\223\uff4a\224\uff4a\226\uff4a\231\uff4a\235\uff4a\251" +
    "\uff4a\303\uff4a\304\uff4a\307\uff4a\312\uff4a\347\uff4a\352\uff4a" +
    "\361\uff4a\u010d\uff4a\u012b\uff4a\u0131\uff4a\u0133\uff4a\u0143\074\u0144" +
    "\073\u0145\uff4a\u0146\uff4a\u0147\uff4a\u0148\uff4a\u0149\uff4a\u014a\uff4a" +
    "\u014b\uff4a\u014e\uff4a\u0152\uff4a\u0153\uff4a\u0159\uff4a\u0161\uff4a\001" +
    "\002\000\146\002\uff4c\013\uff4c\016\uff4c\017\uff4c\026\uff4c" +
    "\054\uff4c\074\uff4c\113\uff4c\120\uff4c\134\uff4c\135\uff4c\140" +
    "\uff4c\164\uff4c\166\uff4c\172\uff4c\175\uff4c\176\uff4c\203\uff4c" +
    "\210\uff4c\223\uff4c\224\uff4c\226\uff4c\231\uff4c\235\uff4c\251" +
    "\uff4c\303\uff4c\304\uff4c\307\uff4c\312\uff4c\347\uff4c\352\uff4c" +
    "\361\uff4c\u010d\uff4c\u012b\uff4c\u0131\uff4c\u0133\uff4c\u0143\uff4c\u0144" +
    "\uff4c\u0145\uff4c\u0146\uff4c\u0147\uff4c\u0148\uff4c\u0149\uff4c\u014a\uff4c" +
    "\u014b\uff4c\u014e\uff4c\u0152\uff4c\u0153\uff4c\u0159\uff4c\u0161\uff4c\001" +
    "\002\000\146\002\uff4a\013\uff4a\016\uff4a\017\uff4a\026\uff4a" +
    "\054\uff4a\074\uff4a\113\uff4a\120\uff4a\134\uff4a\135\uff4a\140" +
    "\uff4a\164\uff4a\166\uff4a\172\uff4a\175\uff4a\176\uff4a\203\uff4a" +
    "\210\uff4a\223\uff4a\224\uff4a\226\uff4a\231\uff4a\235\uff4a\251" +
    "\uff4a\303\uff4a\304\uff4a\307\uff4a\312\uff4a\347\uff4a\352\uff4a" +
    "\361\uff4a\u010d\uff4a\u012b\uff4a\u0131\uff4a\u0133\uff4a\u0143\074\u0144" +
    "\073\u0145\uff4a\u0146\uff4a\u0147\uff4a\u0148\uff4a\u0149\uff4a\u014a\uff4a" +
    "\u014b\uff4a\u014e\uff4a\u0152\uff4a\u0153\uff4a\u0159\uff4a\u0161\uff4a\001" +
    "\002\000\146\002\uff4b\013\uff4b\016\uff4b\017\uff4b\026\uff4b" +
    "\054\uff4b\074\uff4b\113\uff4b\120\uff4b\134\uff4b\135\uff4b\140" +
    "\uff4b\164\uff4b\166\uff4b\172\uff4b\175\uff4b\176\uff4b\203\uff4b" +
    "\210\uff4b\223\uff4b\224\uff4b\226\uff4b\231\uff4b\235\uff4b\251" +
    "\uff4b\303\uff4b\304\uff4b\307\uff4b\312\uff4b\347\uff4b\352\uff4b" +
    "\361\uff4b\u010d\uff4b\u012b\uff4b\u0131\uff4b\u0133\uff4b\u0143\uff4b\u0144" +
    "\uff4b\u0145\uff4b\u0146\uff4b\u0147\uff4b\u0148\uff4b\u0149\uff4b\u014a\uff4b" +
    "\u014b\uff4b\u014e\uff4b\u0152\uff4b\u0153\uff4b\u0159\uff4b\u0161\uff4b\001" +
    "\002\000\146\002\uff49\013\uff49\016\uff49\017\uff49\026\uff49" +
    "\054\uff49\074\uff49\113\uff49\120\uff49\134\uff49\135\uff49\140" +
    "\uff49\164\uff49\166\uff49\172\uff49\175\uff49\176\uff49\203\uff49" +
    "\210\uff49\223\uff49\224\uff49\226\uff49\231\uff49\235\uff49\251" +
    "\uff49\303\uff49\304\uff49\307\uff49\312\uff49\347\uff49\352\uff49" +
    "\361\uff49\u010d\uff49\u012b\uff49\u0131\uff49\u0133\uff49\u0143\uff49\u0144" +
    "\uff49\u0145\uff49\u0146\uff49\u0147\uff49\u0148\uff49\u0149\uff49\u014a\uff49" +
    "\u014b\uff49\u014e\uff49\u0152\uff49\u0153\uff49\u0159\uff49\u0161\uff49\001" +
    "\002\000\024\023\041\072\043\250\044\252\052\u0106\040" +
    "\u013d\045\u013f\037\u0158\050\u015e\051\001\002\000\024\023" +
    "\041\072\043\250\044\252\052\u0106\040\u013d\045\u013f\037" +
    "\u0158\050\u015e\051\001\002\000\146\002\uff46\013\uff46\016" +
    "\uff46\017\uff46\026\uff46\054\uff46\074\uff46\113\uff46\120\uff46" +
    "\134\uff46\135\uff46\140\uff46\164\uff46\166\uff46\172\uff46\175" +
    "\uff46\176\uff46\203\uff46\210\uff46\223\uff46\224\uff46\226\uff46" +
    "\231\uff46\235\uff46\251\uff46\303\uff46\304\uff46\307\uff46\312" +
    "\uff46\347\uff46\352\uff46\361\uff46\u010d\uff46\u012b\uff46\u0131\uff46" +
    "\u0133\uff46\u0143\uff46\u0144\uff46\u0145\103\u0146\104\u0147\uff46\u0148" +
    "\uff46\u0149\uff46\u014a\uff46\u014b\uff46\u014e\uff46\u0152\uff46\u0153\uff46" +
    "\u0159\uff46\u0161\uff46\001\002\000\146\002\uff47\013\uff47\016" +
    "\uff47\017\uff47\026\uff47\054\uff47\074\uff47\113\uff47\120\uff47" +
    "\134\uff47\135\uff47\140\uff47\164\uff47\166\uff47\172\uff47\175" +
    "\uff47\176\uff47\203\uff47\210\uff47\223\uff47\224\uff47\226\uff47" +
    "\231\uff47\235\uff47\251\uff47\303\uff47\304\uff47\307\uff47\312" +
    "\uff47\347\uff47\352\uff47\361\uff47\u010d\uff47\u012b\uff47\u0131\uff47" +
    "\u0133\uff47\u0143\uff47\u0144\uff47\u0145\uff47\u0146\uff47\u0147\uff47\u0148" +
    "\uff47\u0149\uff47\u014a\uff47\u014b\uff47\u014e\uff47\u0152\uff47\u0153\uff47" +
    "\u0159\uff47\u0161\uff47\001\002\000\146\002\uff46\013\uff46\016" +
    "\uff46\017\uff46\026\uff46\054\uff46\074\uff46\113\uff46\120\uff46" +
    "\134\uff46\135\uff46\140\uff46\164\uff46\166\uff46\172\uff46\175" +
    "\uff46\176\uff46\203\uff46\210\uff46\223\uff46\224\uff46\226\uff46" +
    "\231\uff46\235\uff46\251\uff46\303\uff46\304\uff46\307\uff46\312" +
    "\uff46\347\uff46\352\uff46\361\uff46\u010d\uff46\u012b\uff46\u0131\uff46" +
    "\u0133\uff46\u0143\uff46\u0144\uff46\u0145\103\u0146\104\u0147\uff46\u0148" +
    "\uff46\u0149\uff46\u014a\uff46\u014b\uff46\u014e\uff46\u0152\uff46\u0153\uff46" +
    "\u0159\uff46\u0161\uff46\001\002\000\146\002\uff48\013\uff48\016" +
    "\uff48\017\uff48\026\uff48\054\uff48\074\uff48\113\uff48\120\uff48" +
    "\134\uff48\135\uff48\140\uff48\164\uff48\166\uff48\172\uff48\175" +
    "\uff48\176\uff48\203\uff48\210\uff48\223\uff48\224\uff48\226\uff48" +
    "\231\uff48\235\uff48\251\uff48\303\uff48\304\uff48\307\uff48\312" +
    "\uff48\347\uff48\352\uff48\361\uff48\u010d\uff48\u012b\uff48\u0131\uff48" +
    "\u0133\uff48\u0143\uff48\u0144\uff48\u0145\uff48\u0146\uff48\u0147\uff48\u0148" +
    "\uff48\u0149\uff48\u014a\uff48\u014b\uff48\u014e\uff48\u0152\uff48\u0153\uff48" +
    "\u0159\uff48\u0161\uff48\001\002\000\032\010\056\023\uff5f\072" +
    "\uff5f\126\055\250\uff5f\252\uff5f\u0106\uff5f\u013d\uff5f\u013f\uff5f" +
    "\u0158\uff5f\u015e\uff5f\u0161\uff5f\001\002\000\004\u0159\113\001" +
    "\002\000\146\002\uff76\013\uff76\016\uff76\017\uff76\026\uff76" +
    "\054\uff76\074\uff76\113\uff76\120\uff76\134\uff76\135\uff76\140" +
    "\uff76\164\uff76\166\uff76\172\uff76\175\uff76\176\uff76\203\uff76" +
    "\210\uff76\223\uff76\224\uff76\226\uff76\231\uff76\235\uff76\251" +
    "\uff76\303\uff76\304\uff76\307\uff76\312\uff76\347\uff76\352\uff76" +
    "\361\uff76\u010d\uff76\u012b\uff76\u0131\uff76\u0133\uff76\u0143\uff76\u0144" +
    "\uff76\u0145\uff76\u0146\uff76\u0147\uff76\u0148\uff76\u0149\uff76\u014a\uff76" +
    "\u014b\uff76\u014e\uff76\u0152\uff76\u0153\uff76\u0159\uff76\u0161\uff76\001" +
    "\002\000\034\010\120\023\uff68\072\uff68\126\115\250\uff68" +
    "\252\uff68\u0106\uff68\u013d\uff68\u013f\uff68\u0145\uff68\u0158\uff68\u015e" +
    "\uff68\u0161\uff68\001\002\000\030\023\uff69\072\uff69\250\uff69" +
    "\252\uff69\u0106\uff69\u013d\uff69\u013f\uff69\u0145\uff69\u0158\uff69\u015e" +
    "\uff69\u0161\uff69\001\002\000\004\u0159\130\001\002\000\030" +
    "\023\041\072\043\250\044\252\052\u0106\040\u013d\045\u013f" +
    "\037\u0145\122\u0158\050\u015e\051\u0161\123\001\002\000\030" +
    "\023\uff6a\072\uff6a\250\uff6a\252\uff6a\u0106\uff6a\u013d\uff6a\u013f" +
    "\uff6a\u0145\uff6a\u0158\uff6a\u015e\uff6a\u0161\uff6a\001\002\000\004" +
    "\u0159\uff65\001\002\000\004\u0159\uff67\001\002\000\006\u0154" +
    "\125\u0159\uff63\001\002\000\004\u0159\uff6b\001\002\000\004" +
    "\u0161\127\001\002\000\004\u0159\uff66\001\002\000\004\u0159" +
    "\uff64\001\002\000\146\002\uff77\013\uff77\016\uff77\017\uff77" +
    "\026\uff77\054\uff77\074\uff77\113\uff77\120\uff77\134\uff77\135" +
    "\uff77\140\uff77\164\uff77\166\uff77\172\uff77\175\uff77\176\uff77" +
    "\203\uff77\210\uff77\223\uff77\224\uff77\226\uff77\231\uff77\235" +
    "\uff77\251\uff77\303\uff77\304\uff77\307\uff77\312\uff77\347\uff77" +
    "\352\uff77\361\uff77\u010d\uff77\u012b\uff77\u0131\uff77\u0133\uff77\u0143" +
    "\uff77\u0144\uff77\u0145\uff77\u0146\uff77\u0147\uff77\u0148\uff77\u0149\uff77" +
    "\u014a\uff77\u014b\uff77\u014e\uff77\u0152\uff77\u0153\uff77\u0159\uff77\u0161" +
    "\uff77\001\002\000\010\223\020\307\133\u0161\021\001\002" +
    "\000\004\002\ufdf6\001\002\000\006\223\020\u0161\021\001" +
    "\002\000\004\002\ufdf3\001\002\000\004\002\ufdf4\001\002" +
    "\000\032\010\141\023\uff70\072\uff70\126\137\250\uff70\252" +
    "\uff70\u0106\uff70\u013d\uff70\u013f\uff70\u0158\uff70\u015e\uff70\u0161\uff70" +
    "\001\002\000\026\023\uff71\072\uff71\250\uff71\252\uff71\u0106" +
    "\uff71\u013d\uff71\u013f\uff71\u0158\uff71\u015e\uff71\u0161\uff71\001\002" +
    "\000\004\u0159\151\001\002\000\026\023\uff72\072\uff72\250" +
    "\uff72\252\uff72\u0106\uff72\u013d\uff72\u013f\uff72\u0158\uff72\u015e\uff72" +
    "\u0161\uff72\001\002\000\026\023\041\072\043\250\044\252" +
    "\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e\051\u0161\145" +
    "\001\002\000\004\u0159\uff6f\001\002\000\004\u0159\uff73\001" +
    "\002\000\006\u0154\147\u0159\uff6c\001\002\000\004\u0159\uff6e" +
    "\001\002\000\004\u0161\150\001\002\000\004\u0159\uff6d\001" +
    "\002\000\146\002\uff78\013\uff78\016\uff78\017\uff78\026\uff78" +
    "\054\uff78\074\uff78\113\uff78\120\uff78\134\uff78\135\uff78\140" +
    "\uff78\164\uff78\166\uff78\172\uff78\175\uff78\176\uff78\203\uff78" +
    "\210\uff78\223\uff78\224\uff78\226\uff78\231\uff78\235\uff78\251" +
    "\uff78\303\uff78\304\uff78\307\uff78\312\uff78\347\uff78\352\uff78" +
    "\361\uff78\u010d\uff78\u012b\uff78\u0131\uff78\u0133\uff78\u0143\uff78\u0144" +
    "\uff78\u0145\uff78\u0146\uff78\u0147\uff78\u0148\uff78\u0149\uff78\u014a\uff78" +
    "\u014b\uff78\u014e\uff78\u0152\uff78\u0153\uff78\u0159\uff78\u0161\uff78\001" +
    "\002\000\032\010\056\023\uff5f\072\uff5f\126\055\250\uff5f" +
    "\252\uff5f\u0106\uff5f\u013d\uff5f\u013f\uff5f\u0158\uff5f\u015e\uff5f\u0161" +
    "\uff5f\001\002\000\004\u0159\154\001\002\000\146\002\uff74" +
    "\013\uff74\016\uff74\017\uff74\026\uff74\054\uff74\074\uff74\113" +
    "\uff74\120\uff74\134\uff74\135\uff74\140\uff74\164\uff74\166\uff74" +
    "\172\uff74\175\uff74\176\uff74\203\uff74\210\uff74\223\uff74\224" +
    "\uff74\226\uff74\231\uff74\235\uff74\251\uff74\303\uff74\304\uff74" +
    "\307\uff74\312\uff74\347\uff74\352\uff74\361\uff74\u010d\uff74\u012b" +
    "\uff74\u0131\uff74\u0133\uff74\u0143\uff74\u0144\uff74\u0145\uff74\u0146\uff74" +
    "\u0147\uff74\u0148\uff74\u0149\uff74\u014a\uff74\u014b\uff74\u014e\uff74\u0152" +
    "\uff74\u0153\uff74\u0159\uff74\u0161\uff74\001\002\000\026\023\041" +
    "\072\043\250\044\252\052\u0106\040\u013d\045\u013f\037\u0158" +
    "\050\u015e\051\u0161\270\001\002\000\004\u012b\263\001\002" +
    "\000\004\002\ufdec\001\002\000\012\113\156\312\155\361" +
    "\007\u012b\165\001\002\000\004\002\ufdee\001\002\000\010" +
    "\113\156\361\007\u012b\165\001\002\000\004\002\ufdf0\001" +
    "\002\000\006\172\254\u0152\251\001\002\000\004\u0158\175" +
    "\001\002\000\004\u0161\167\001\002\000\006\u0153\172\u0159" +
    "\171\001\002\000\022\113\ufedb\164\ufedb\172\ufedb\312\ufedb" +
    "\361\ufedb\u012b\ufedb\u0133\ufedb\u0152\ufedb\001\002\000\022\113" +
    "\ufed8\164\ufed8\172\ufed8\312\ufed8\361\ufed8\u012b\ufed8\u0133\ufed8" +
    "\u0152\ufed8\001\002\000\004\u0161\167\001\002\000\022\113" +
    "\ufeda\164\ufeda\172\ufeda\312\ufeda\361\ufeda\u012b\ufeda\u0133\ufeda" +
    "\u0152\ufeda\001\002\000\022\113\ufed9\164\ufed9\172\ufed9\312" +
    "\ufed9\361\ufed9\u012b\ufed9\u0133\ufed9\u0152\ufed9\001\002\000\036" +
    "\023\041\072\043\113\206\250\044\251\176\252\052\253" +
    "\207\u0106\040\u013d\045\u013f\037\u0140\202\u0158\050\u015e\051" +
    "\u0161\177\001\002\000\032\023\ufe77\072\ufe77\250\ufe77\251" +
    "\ufe77\252\ufe77\u0106\ufe77\u013d\ufe77\u013f\ufe77\u0140\ufe77\u0158\ufe77" +
    "\u015e\ufe77\u0161\ufe77\001\002\000\076\002\uff53\016\uff53\017" +
    "\uff53\026\uff53\054\uff53\120\uff53\134\uff53\135\uff53\164\uff53" +
    "\172\uff53\175\uff53\176\uff53\203\uff53\223\uff53\235\uff53\304" +
    "\uff53\312\uff53\u010d\uff53\u0131\uff53\u0133\uff53\u0143\uff53\u0148\uff53" +
    "\u0149\uff53\u014a\uff53\u014b\uff53\u014e\uff53\u0152\uff53\u0153\uff53\u0159" +
    "\uff53\u0161\uff53\001\002\000\006\u0153\246\u0159\244\001\002" +
    "\000\004\u0143\214\001\002\000\076\002\uff54\016\uff54\017" +
    "\uff54\026\uff54\054\uff54\120\uff54\134\uff54\135\uff54\164\uff54" +
    "\172\uff54\175\uff54\176\uff54\203\uff54\223\uff54\235\uff54\304" +
    "\uff54\312\uff54\u010d\uff54\u0131\uff54\u0133\uff54\u0143\uff54\u0148\uff54" +
    "\u0149\uff54\u014a\uff54\u014b\uff54\u014e\uff54\u0152\uff54\u0153\uff54\u0159" +
    "\uff54\u0161\uff54\001\002\000\006\u0153\ufde5\u0159\ufde5\001\002" +
    "\000\032\023\041\072\043\250\044\251\176\252\052\u0106" +
    "\040\u013d\045\u013f\037\u0140\202\u0158\050\u015e\051\u0161\177" +
    "\001\002\000\026\u0143\214\u0144\215\u0145\221\u0146\217\u0147" +
    "\223\u0148\226\u0149\222\u014a\216\u014b\211\u014e\212\001\002" +
    "\000\006\u0153\ufde7\u0159\ufde7\001\002\000\006\u0153\ufde6\u0159" +
    "\ufde6\001\002\000\004\002\ufdeb\001\002\000\174\002\ufe73" +
    "\016\ufe73\017\ufe73\023\ufe73\026\ufe73\040\ufe73\041\ufe73\043" +
    "\ufe73\054\ufe73\070\ufe73\072\ufe73\100\ufe73\105\ufe73\120\ufe73" +
    "\134\ufe73\135\ufe73\164\ufe73\172\ufe73\175\ufe73\176\ufe73\203" +
    "\ufe73\223\ufe73\231\ufe73\235\ufe73\244\ufe73\250\ufe73\252\ufe73" +
    "\256\ufe73\260\ufe73\265\ufe73\266\ufe73\304\ufe73\312\ufe73\347" +
    "\ufe73\363\ufe73\364\ufe73\373\ufe73\u0105\ufe73\u0106\ufe73\u0109\ufe73" +
    "\u010d\ufe73\u0119\ufe73\u011b\ufe73\u0125\ufe73\u0131\ufe73\u0133\ufe73\u0138" +
    "\ufe73\u013d\ufe73\u013f\ufe73\u0140\ufe73\u0148\ufe73\u0149\ufe73\u014a\ufe73" +
    "\u014b\ufe73\u014e\ufe73\u0152\ufe73\u0153\ufe73\u0158\ufe73\u0159\ufe73\u015e" +
    "\ufe73\u0161\ufe73\001\002\000\174\002\ufe72\016\ufe72\017\ufe72" +
    "\023\ufe72\026\ufe72\040\ufe72\041\ufe72\043\ufe72\054\ufe72\070" +
    "\ufe72\072\ufe72\100\ufe72\105\ufe72\120\ufe72\134\ufe72\135\ufe72" +
    "\164\ufe72\172\ufe72\175\ufe72\176\ufe72\203\ufe72\223\ufe72\231" +
    "\ufe72\235\ufe72\244\ufe72\250\ufe72\252\ufe72\256\ufe72\260\ufe72" +
    "\265\ufe72\266\ufe72\304\ufe72\312\ufe72\347\ufe72\363\ufe72\364" +
    "\ufe72\373\ufe72\u0105\ufe72\u0106\ufe72\u0109\ufe72\u010d\ufe72\u0119\ufe72" +
    "\u011b\ufe72\u0125\ufe72\u0131\ufe72\u0133\ufe72\u0138\ufe72\u013d\ufe72\u013f" +
    "\ufe72\u0140\ufe72\u0148\ufe72\u0149\ufe72\u014a\ufe72\u014b\ufe72\u014e\ufe72" +
    "\u0152\ufe72\u0153\ufe72\u0158\ufe72\u0159\ufe72\u015e\ufe72\u0161\ufe72\001" +
    "\002\000\030\023\uff56\072\uff56\250\uff56\252\uff56\u0106\uff56" +
    "\u013d\uff56\u013f\uff56\u0140\uff56\u0158\uff56\u015e\uff56\u0161\uff56\001" +
    "\002\000\030\023\ufe7b\072\ufe7b\250\ufe7b\252\ufe7b\u0106\ufe7b" +
    "\u013d\ufe7b\u013f\ufe7b\u0140\ufe7b\u0158\ufe7b\u015e\ufe7b\u0161\ufe7b\001" +
    "\002\000\030\023\ufe7f\072\ufe7f\250\ufe7f\252\ufe7f\u0106\ufe7f" +
    "\u013d\ufe7f\u013f\ufe7f\u0140\ufe7f\u0158\ufe7f\u015e\ufe7f\u0161\ufe7f\001" +
    "\002\000\174\002\ufe75\016\ufe75\017\ufe75\023\ufe75\026\ufe75" +
    "\040\ufe75\041\ufe75\043\ufe75\054\ufe75\070\ufe75\072\ufe75\100" +
    "\ufe75\105\ufe75\120\ufe75\134\ufe75\135\ufe75\164\ufe75\172\ufe75" +
    "\175\ufe75\176\ufe75\203\ufe75\223\ufe75\231\ufe75\235\ufe75\244" +
    "\ufe75\250\ufe75\252\ufe75\256\ufe75\260\ufe75\265\ufe75\266\ufe75" +
    "\304\ufe75\312\ufe75\347\ufe75\363\ufe75\364\ufe75\373\ufe75\u0105" +
    "\ufe75\u0106\ufe75\u0109\ufe75\u010d\ufe75\u0119\ufe75\u011b\ufe75\u0125\ufe75" +
    "\u0131\ufe75\u0133\ufe75\u0138\ufe75\u013d\ufe75\u013f\ufe75\u0140\ufe75\u0148" +
    "\ufe75\u0149\ufe75\u014a\ufe75\u014b\ufe75\u014e\ufe75\u0152\ufe75\u0153\ufe75" +
    "\u0158\ufe75\u0159\ufe75\u015e\ufe75\u0161\ufe75\001\002\000\030\023" +
    "\ufe7d\072\ufe7d\250\ufe7d\252\ufe7d\u0106\ufe7d\u013d\ufe7d\u013f\ufe7d" +
    "\u0140\ufe7d\u0158\ufe7d\u015e\ufe7d\u0161\ufe7d\001\002\000\030\023" +
    "\uff55\072\uff55\250\uff55\252\uff55\u0106\uff55\u013d\uff55\u013f\uff55" +
    "\u0140\uff55\u0158\uff55\u015e\uff55\u0161\uff55\001\002\000\030\023" +
    "\ufe7e\072\ufe7e\250\ufe7e\252\ufe7e\u0106\ufe7e\u013d\ufe7e\u013f\ufe7e" +
    "\u0140\ufe7e\u0158\ufe7e\u015e\ufe7e\u0161\ufe7e\001\002\000\174\002" +
    "\ufe74\016\ufe74\017\ufe74\023\ufe74\026\ufe74\040\ufe74\041\ufe74" +
    "\043\ufe74\054\ufe74\070\ufe74\072\ufe74\100\ufe74\105\ufe74\120" +
    "\ufe74\134\ufe74\135\ufe74\164\ufe74\172\ufe74\175\ufe74\176\ufe74" +
    "\203\ufe74\223\ufe74\231\ufe74\235\ufe74\244\ufe74\250\ufe74\252" +
    "\ufe74\256\ufe74\260\ufe74\265\ufe74\266\ufe74\304\ufe74\312\ufe74" +
    "\347\ufe74\363\ufe74\364\ufe74\373\ufe74\u0105\ufe74\u0106\ufe74\u0109" +
    "\ufe74\u010d\ufe74\u0119\ufe74\u011b\ufe74\u0125\ufe74\u0131\ufe74\u0133\ufe74" +
    "\u0138\ufe74\u013d\ufe74\u013f\ufe74\u0140\ufe74\u0148\ufe74\u0149\ufe74\u014a" +
    "\ufe74\u014b\ufe74\u014e\ufe74\u0152\ufe74\u0153\ufe74\u0158\ufe74\u0159\ufe74" +
    "\u015e\ufe74\u0161\ufe74\001\002\000\030\023\ufe7c\072\ufe7c\250" +
    "\ufe7c\252\ufe7c\u0106\ufe7c\u013d\ufe7c\u013f\ufe7c\u0140\ufe7c\u0158\ufe7c" +
    "\u015e\ufe7c\u0161\ufe7c\001\002\000\030\023\041\072\043\250" +
    "\044\252\052\u0106\040\u013d\045\u013f\037\u0140\230\u0158\050" +
    "\u015e\051\u0161\232\001\002\000\030\023\uff57\072\uff57\250" +
    "\uff57\252\uff57\u0106\uff57\u013d\uff57\u013f\uff57\u0140\uff57\u0158\uff57" +
    "\u015e\uff57\u0161\uff57\001\002\000\174\002\ufe76\016\ufe76\017" +
    "\ufe76\023\ufe76\026\ufe76\040\ufe76\041\ufe76\043\ufe76\054\ufe76" +
    "\070\ufe76\072\ufe76\100\ufe76\105\ufe76\120\ufe76\134\ufe76\135" +
    "\ufe76\164\ufe76\172\ufe76\175\ufe76\176\ufe76\203\ufe76\223\ufe76" +
    "\231\ufe76\235\ufe76\244\ufe76\250\ufe76\252\ufe76\256\ufe76\260" +
    "\ufe76\265\ufe76\266\ufe76\304\ufe76\312\ufe76\347\ufe76\363\ufe76" +
    "\364\ufe76\373\ufe76\u0105\ufe76\u0106\ufe76\u0109\ufe76\u010d\ufe76\u0119" +
    "\ufe76\u011b\ufe76\u0125\ufe76\u0131\ufe76\u0133\ufe76\u0138\ufe76\u013d\ufe76" +
    "\u013f\ufe76\u0140\ufe76\u0148\ufe76\u0149\ufe76\u014a\ufe76\u014b\ufe76\u014e" +
    "\ufe76\u0152\ufe76\u0153\ufe76\u0158\ufe76\u0159\ufe76\u015e\ufe76\u0161\ufe76" +
    "\001\002\000\074\002\uff52\016\uff52\017\uff52\026\uff52\054" +
    "\uff52\120\uff52\134\uff52\135\uff52\164\uff52\172\uff52\175\uff52" +
    "\176\uff52\203\uff52\223\uff52\235\uff52\304\uff52\312\uff52\u010d" +
    "\uff52\u0131\uff52\u0133\uff52\u0148\uff52\u0149\uff52\u014a\uff52\u014b\uff52" +
    "\u014e\uff52\u0152\uff52\u0153\uff52\u0159\uff52\u0161\uff52\001\002\000" +
    "\074\002\uff50\016\uff50\017\uff50\026\uff50\054\uff50\120\uff50" +
    "\134\uff50\135\uff50\164\uff50\172\uff50\175\uff50\176\uff50\203" +
    "\uff50\223\uff50\235\uff50\304\uff50\312\uff50\u010d\uff50\u0131\uff50" +
    "\u0133\uff50\u0148\uff50\u0149\uff50\u014a\uff50\u014b\uff50\u014e\uff50\u0152" +
    "\uff50\u0153\uff50\u0159\uff50\u0161\uff50\001\002\000\074\002\uff5a" +
    "\016\uff5a\017\uff5a\026\uff5a\054\uff5a\120\uff5a\134\uff5a\135" +
    "\uff5a\164\uff5a\172\uff5a\175\uff5a\176\uff5a\203\uff5a\223\uff5a" +
    "\235\uff5a\304\uff5a\312\uff5a\u010d\uff5a\u0131\uff5a\u0133\uff5a\u0148" +
    "\uff5a\u0149\uff5a\u014a\uff5a\u014b\uff5a\u014e\uff5a\u0152\uff5a\u0153\uff5a" +
    "\u0159\uff5a\u0161\uff5a\001\002\000\074\002\uff51\016\uff51\017" +
    "\uff51\026\uff51\054\uff51\120\uff51\134\uff51\135\uff51\164\uff51" +
    "\172\uff51\175\uff51\176\uff51\203\uff51\223\uff51\235\uff51\304" +
    "\uff51\312\uff51\u010d\uff51\u0131\uff51\u0133\uff51\u0148\uff51\u0149\uff51" +
    "\u014a\uff51\u014b\uff51\u014e\uff51\u0152\uff51\u0153\uff51\u0159\uff51\u0161" +
    "\uff51\001\002\000\022\026\237\203\235\235\241\u0148\226" +
    "\u0149\222\u014a\216\u014b\211\u014e\212\001\002\000\074\002" +
    "\uff4f\016\uff4f\017\uff4f\026\uff4f\054\uff4f\120\uff4f\134\uff4f" +
    "\135\uff4f\164\uff4f\172\uff4f\175\uff4f\176\uff4f\203\uff4f\223" +
    "\uff4f\235\uff4f\304\uff4f\312\uff4f\u010d\uff4f\u0131\uff4f\u0133\uff4f" +
    "\u0148\uff4f\u0149\uff4f\u014a\uff4f\u014b\uff4f\u014e\uff4f\u0152\uff4f\u0153" +
    "\uff4f\u0159\uff4f\u0161\uff4f\001\002\000\074\002\ufe70\016\ufe70" +
    "\017\ufe70\026\ufe70\054\ufe70\120\ufe70\134\ufe70\135\ufe70\164" +
    "\ufe70\172\ufe70\175\ufe70\176\ufe70\203\ufe70\223\ufe70\235\ufe70" +
    "\304\ufe70\312\ufe70\u010d\ufe70\u0131\ufe70\u0133\ufe70\u0148\ufe70\u0149" +
    "\ufe70\u014a\ufe70\u014b\ufe70\u014e\ufe70\u0152\ufe70\u0153\ufe70\u0159\ufe70" +
    "\u0161\ufe70\001\002\000\074\002\uff58\016\uff58\017\uff58\026" +
    "\uff58\054\uff58\120\uff58\134\uff58\135\uff58\164\uff58\172\uff58" +
    "\175\uff58\176\uff58\203\uff58\223\uff58\235\uff58\304\uff58\312" +
    "\uff58\u010d\uff58\u0131\uff58\u0133\uff58\u0148\uff58\u0149\uff58\u014a\uff58" +
    "\u014b\uff58\u014e\uff58\u0152\uff58\u0153\uff58\u0159\uff58\u0161\uff58\001" +
    "\002\000\074\002\ufe71\016\ufe71\017\ufe71\026\ufe71\054\ufe71" +
    "\120\ufe71\134\ufe71\135\ufe71\164\ufe71\172\ufe71\175\ufe71\176" +
    "\ufe71\203\ufe71\223\ufe71\235\ufe71\304\ufe71\312\ufe71\u010d\ufe71" +
    "\u0131\ufe71\u0133\ufe71\u0148\ufe71\u0149\ufe71\u014a\ufe71\u014b\ufe71\u014e" +
    "\ufe71\u0152\ufe71\u0153\ufe71\u0159\ufe71\u0161\ufe71\001\002\000\074" +
    "\002\uff4e\016\uff4e\017\uff4e\026\uff4e\054\uff4e\120\uff4e\134" +
    "\uff4e\135\uff4e\164\uff4e\172\uff4e\175\uff4e\176\uff4e\203\uff4e" +
    "\223\uff4e\235\uff4e\304\uff4e\312\uff4e\u010d\uff4e\u0131\uff4e\u0133" +
    "\uff4e\u0148\uff4e\u0149\uff4e\u014a\uff4e\u014b\uff4e\u014e\uff4e\u0152\uff4e" +
    "\u0153\uff4e\u0159\uff4e\u0161\uff4e\001\002\000\074\002\ufe6f\016" +
    "\ufe6f\017\ufe6f\026\ufe6f\054\ufe6f\120\ufe6f\134\ufe6f\135\ufe6f" +
    "\164\ufe6f\172\ufe6f\175\ufe6f\176\ufe6f\203\ufe6f\223\ufe6f\235" +
    "\ufe6f\304\ufe6f\312\ufe6f\u010d\ufe6f\u0131\ufe6f\u0133\ufe6f\u0148\ufe6f" +
    "\u0149\ufe6f\u014a\ufe6f\u014b\ufe6f\u014e\ufe6f\u0152\ufe6f\u0153\ufe6f\u0159" +
    "\ufe6f\u0161\ufe6f\001\002\000\006\u0140\202\u0161\177\001\002" +
    "\000\074\002\uff59\016\uff59\017\uff59\026\uff59\054\uff59\120" +
    "\uff59\134\uff59\135\uff59\164\uff59\172\uff59\175\uff59\176\uff59" +
    "\203\uff59\223\uff59\235\uff59\304\uff59\312\uff59\u010d\uff59\u0131" +
    "\uff59\u0133\uff59\u0148\uff59\u0149\uff59\u014a\uff59\u014b\uff59\u014e\uff59" +
    "\u0152\uff59\u0153\uff59\u0159\uff59\u0161\uff59\001\002\000\010\172" +
    "\254\u0152\251\u0153\252\001\002\000\004\002\ufde8\001\002" +
    "\000\036\023\041\072\043\113\206\250\044\251\176\252" +
    "\052\253\207\u0106\040\u013d\045\u013f\037\u0140\202\u0158\050" +
    "\u015e\051\u0161\177\001\002\000\004\002\ufde4\001\002\000" +
    "\004\002\ufde3\001\002\000\004\002\ufde0\001\002\000\004" +
    "\u012b\255\001\002\000\004\002\ufde1\001\002\000\004\002" +
    "\ufddf\001\002\000\004\u0158\256\001\002\000\036\023\041" +
    "\072\043\113\206\250\044\251\176\252\052\253\207\u0106" +
    "\040\u013d\045\u013f\037\u0140\202\u0158\050\u015e\051\u0161\177" +
    "\001\002\000\004\002\ufde2\001\002\000\004\002\ufdea\001" +
    "\002\000\004\002\ufded\001\002\000\004\002\ufdef\001\002" +
    "\000\006\172\254\u0152\251\001\002\000\004\002\ufde9\001" +
    "\002\000\024\016\ufeca\113\ufeca\164\ufeca\172\ufeca\223\ufeca" +
    "\361\ufeca\u012b\ufeca\u0133\ufeca\u0152\ufeca\001\002\000\024\016" +
    "\307\113\ufec8\164\ufec8\172\ufec8\223\ufec8\361\ufec8\u012b\ufec8" +
    "\u0133\ufec8\u0152\ufec8\001\002\000\022\113\ufed1\164\ufed1\172" +
    "\ufed1\223\277\361\ufed1\u012b\ufed1\u0133\ufed1\u0152\ufed1\001\002" +
    "\000\004\u0154\272\001\002\000\024\016\ufecb\113\ufecb\164" +
    "\ufecb\172\ufecb\223\ufecb\361\ufecb\u012b\ufecb\u0133\ufecb\u0152\ufecb" +
    "\001\002\000\006\u0145\274\u0161\275\001\002\000\024\016" +
    "\ufec5\113\ufec5\164\ufec5\172\ufec5\223\ufec5\361\ufec5\u012b\ufec5" +
    "\u0133\ufec5\u0152\ufec5\001\002\000\024\016\ufec4\113\ufec4\164" +
    "\ufec4\172\ufec4\223\ufec4\361\ufec4\u012b\ufec4\u0133\ufec4\u0152\ufec4" +
    "\001\002\000\024\016\ufec3\113\ufec3\164\ufec3\172\ufec3\223" +
    "\ufec3\361\ufec3\u012b\ufec3\u0133\ufec3\u0152\ufec3\001\002\000\020" +
    "\113\ufed4\164\ufed4\172\ufed4\361\ufed4\u012b\ufed4\u0133\ufed4\u0152" +
    "\ufed4\001\002\000\006\u015e\302\u0161\301\001\002\000\020" +
    "\113\ufed2\164\ufed2\172\ufed2\361\ufed2\u012b\ufed2\u0133\ufed2\u0152" +
    "\ufed2\001\002\000\022\113\ufecd\164\ufecd\172\ufecd\361\ufecd" +
    "\u012b\ufecd\u0133\ufecd\u0152\ufecd\u0158\166\001\002\000\004\u0161" +
    "\303\001\002\000\022\113\ufecd\164\ufecd\172\ufecd\361\ufecd" +
    "\u012b\ufecd\u0133\ufecd\u0152\ufecd\u0158\166\001\002\000\020\113" +
    "\ufed0\164\ufed0\172\ufed0\361\ufed0\u012b\ufed0\u0133\ufed0\u0152\ufed0" +
    "\001\002\000\020\113\ufece\164\ufece\172\ufece\361\ufece\u012b" +
    "\ufece\u0133\ufece\u0152\ufece\001\002\000\020\113\ufecf\164\ufecf" +
    "\172\ufecf\361\ufecf\u012b\ufecf\u0133\ufecf\u0152\ufecf\001\002\000" +
    "\004\u0161\311\001\002\000\022\113\ufecc\164\ufecc\172\ufecc" +
    "\223\ufecc\361\ufecc\u012b\ufecc\u0133\ufecc\u0152\ufecc\001\002\000" +
    "\024\113\ufec6\164\ufec6\172\ufec6\223\ufec6\361\ufec6\u012b\ufec6" +
    "\u0133\ufec6\u0152\ufec6\u0153\312\001\002\000\026\023\041\072" +
    "\043\250\044\252\052\u0106\040\u013d\045\u013f\037\u0158\050" +
    "\u015e\051\u0161\270\001\002\000\022\113\ufec9\164\ufec9\172" +
    "\ufec9\223\ufec9\361\ufec9\u012b\ufec9\u0133\ufec9\u0152\ufec9\001\002" +
    "\000\022\113\ufec7\164\ufec7\172\ufec7\223\ufec7\361\ufec7\u012b" +
    "\ufec7\u0133\ufec7\u0152\ufec7\001\002\000\102\023\ufddb\040\ufddb" +
    "\041\ufddb\043\ufddb\070\ufddb\072\ufddb\100\ufddb\105\ufddb\231" +
    "\ufddb\244\ufddb\250\ufddb\251\ufddb\252\ufddb\260\ufddb\265\ufddb" +
    "\347\ufddb\364\ufddb\373\ufddb\u0105\ufddb\u0106\ufddb\u0116\ufddb\u0119" +
    "\ufddb\u011b\ufddb\u0125\ufddb\u0138\ufddb\u013d\ufddb\u013f\ufddb\u0140\ufddb" +
    "\u0145\ufddb\u0158\ufddb\u015e\ufddb\u0161\ufddb\001\002\000\102\023" +
    "\041\040\326\041\322\043\324\070\332\072\043\100\350" +
    "\105\355\231\340\244\327\250\044\251\176\252\052\260" +
    "\325\265\346\347\352\364\356\373\321\u0105\323\u0106\040" +
    "\u0116\344\u0119\335\u011b\334\u0125\353\u0138\337\u013d\045\u013f" +
    "\037\u0140\202\u0145\354\u0158\050\u015e\051\u0161\347\001\002" +
    "\000\010\002\ufdde\172\ufdde\u0152\ufdde\001\002\000\102\023" +
    "\ufddc\040\ufddc\041\ufddc\043\ufddc\070\ufddc\072\ufddc\100\ufddc" +
    "\105\ufddc\231\ufddc\244\ufddc\250\ufddc\251\ufddc\252\ufddc\260" +
    "\ufddc\265\ufddc\347\ufddc\364\ufddc\373\ufddc\u0105\ufddc\u0106\ufddc" +
    "\u0116\ufddc\u0119\ufddc\u011b\ufddc\u0125\ufddc\u0138\ufddc\u013d\ufddc\u013f" +
    "\ufddc\u0140\ufddc\u0145\ufddc\u0158\ufddc\u015e\ufddc\u0161\ufddc\001\002" +
    "\000\004\u0158\u0279\001\002\000\004\u0158\u0272\001\002\000" +
    "\004\u0158\u026b\001\002\000\004\u0158\u0268\001\002\000\004" +
    "\u0158\u0265\001\002\000\034\023\041\072\043\250\044\251" +
    "\176\252\052\u0106\040\u0131\u0257\u013d\045\u013f\037\u0140\202" +
    "\u0158\050\u015e\051\u0161\177\001\002\000\004\u0158\u0254\001" +
    "\002\000\040\002\ufeb2\016\360\017\ufeb2\054\ufeb2\120\ufeb2" +
    "\164\ufeb2\172\ufeb2\175\ufeb2\176\ufeb2\223\ufeb2\304\ufeb2\u0133" +
    "\ufeb2\u0152\ufeb2\u0153\ufeb2\u0161\361\001\002\000\040\002\ufeb2" +
    "\016\360\017\ufeb2\054\ufeb2\120\ufeb2\164\ufeb2\172\ufeb2\175" +
    "\ufeb2\176\ufeb2\223\ufeb2\304\ufeb2\u0133\ufeb2\u0152\ufeb2\u0153\ufeb2" +
    "\u0161\361\001\002\000\004\u0158\u021f\001\002\000\040\002" +
    "\ufeb2\016\360\017\ufeb2\054\ufeb2\120\ufeb2\164\ufeb2\172\ufeb2" +
    "\175\ufeb2\176\ufeb2\223\ufeb2\304\ufeb2\u0133\ufeb2\u0152\ufeb2\u0153" +
    "\ufeb2\u0161\361\001\002\000\004\u0158\u0218\001\002\000\004" +
    "\u0158\u0211\001\002\000\034\002\ufec2\017\ufec2\054\ufec2\120" +
    "\ufec2\164\ufec2\172\ufec2\175\ufec2\176\ufec2\223\ufec2\304\ufec2" +
    "\u0133\ufec2\u0152\ufec2\u0153\ufec2\001\002\000\004\u0158\u020e\001" +
    "\002\000\004\u0158\u0209\001\002\000\064\002\ufeb2\016\360" +
    "\017\ufeb2\054\ufeb2\120\ufeb2\164\ufeb2\172\ufeb2\175\ufeb2\176" +
    "\ufeb2\223\ufeb2\304\ufeb2\u0133\ufeb2\u0143\uff41\u0144\uff41\u0145\uff41" +
    "\u0146\uff41\u0147\uff41\u0148\uff41\u0149\uff41\u014a\uff41\u014b\uff41\u014e" +
    "\uff41\u0152\ufeb2\u0153\ufeb2\u0161\361\001\002\000\010\002\ufdd8" +
    "\172\ufdd8\u0152\ufdd8\001\002\000\010\002\ufddd\172\ufddd\u0152" +
    "\ufddd\001\002\000\004\u0158\u0200\001\002\000\026\002\ufdc5" +
    "\164\u0123\172\ufdc5\175\u0122\176\u011f\223\u011d\304\u0124\u0133" +
    "\u0119\u0152\ufdc5\u0153\u0120\001\002\000\004\u0158\u0115\001\002" +
    "\000\042\002\ufeb7\017\ufeb7\054\ufeb7\120\ufeb7\164\ufeb7\172" +
    "\ufeb7\175\ufeb7\176\ufeb7\223\ufeb7\304\ufeb7\u0133\ufeb7\u0143\uff53" +
    "\u014c\u010e\u0152\ufeb7\u0153\ufeb7\u0154\u010d\001\002\000\110\002" +
    "\ufe51\013\ufe51\016\ufe51\017\ufe51\026\ufe51\054\ufe51\074\ufe51" +
    "\120\ufe51\140\ufe51\164\ufe51\166\ufe51\172\ufe51\175\ufe51\176" +
    "\ufe51\203\ufe51\210\ufe51\223\ufe51\224\ufe51\226\ufe51\231\ufe51" +
    "\235\ufe51\251\ufe51\303\ufe51\304\ufe51\347\ufe51\u0133\ufe51\u0148" +
    "\ufe51\u0149\ufe51\u014a\ufe51\u014b\ufe51\u014e\ufe51\u0152\ufe51\u0153\ufe51" +
    "\u0159\ufe51\u0161\ufe51\001\002\000\040\002\ufeb2\016\360\017" +
    "\ufeb2\054\ufeb2\120\ufeb2\164\ufeb2\172\ufeb2\175\ufeb2\176\ufeb2" +
    "\223\ufeb2\304\ufeb2\u0133\ufeb2\u0152\ufeb2\u0153\ufeb2\u0161\361\001" +
    "\002\000\004\u0158\u0106\001\002\000\004\u0158\377\001\002" +
    "\000\034\002\ufec1\017\ufec1\054\ufec1\120\ufec1\164\ufec1\172" +
    "\ufec1\175\ufec1\176\ufec1\223\ufec1\304\ufec1\u0133\ufec1\u0152\ufec1" +
    "\u0153\ufec1\001\002\000\004\u0158\371\001\002\000\004\232" +
    "\364\001\002\000\040\002\ufeb2\016\360\017\ufeb2\054\ufeb2" +
    "\120\ufeb2\164\ufeb2\172\ufeb2\175\ufeb2\176\ufeb2\223\ufeb2\304" +
    "\ufeb2\u0133\ufeb2\u0152\ufeb2\u0153\ufeb2\u0161\361\001\002\000\004" +
    "\u0161\363\001\002\000\034\002\ufeb3\017\ufeb3\054\ufeb3\120" +
    "\ufeb3\164\ufeb3\172\ufeb3\175\ufeb3\176\ufeb3\223\ufeb3\304\ufeb3" +
    "\u0133\ufeb3\u0152\ufeb3\u0153\ufeb3\001\002\000\034\002\ufebb\017" +
    "\ufebb\054\ufebb\120\ufebb\164\ufebb\172\ufebb\175\ufebb\176\ufebb" +
    "\223\ufebb\304\ufebb\u0133\ufebb\u0152\ufebb\u0153\ufebb\001\002\000" +
    "\034\002\ufeb4\017\ufeb4\054\ufeb4\120\ufeb4\164\ufeb4\172\ufeb4" +
    "\175\ufeb4\176\ufeb4\223\ufeb4\304\ufeb4\u0133\ufeb4\u0152\ufeb4\u0153" +
    "\ufeb4\001\002\000\006\u015e\366\u0161\365\001\002\000\110" +
    "\002\ufe49\013\ufe49\016\ufe49\017\ufe49\026\ufe49\054\ufe49\074" +
    "\ufe49\120\ufe49\140\ufe49\164\ufe49\166\ufe49\172\ufe49\175\ufe49" +
    "\176\ufe49\203\ufe49\210\ufe49\223\ufe49\224\ufe49\226\ufe49\231" +
    "\ufe49\235\ufe49\251\ufe49\303\ufe49\304\ufe49\347\ufe49\u0133\ufe49" +
    "\u0148\ufe49\u0149\ufe49\u014a\ufe49\u014b\ufe49\u014e\ufe49\u0152\ufe49\u0153" +
    "\ufe49\u0159\ufe49\u0161\ufe49\001\002\000\004\u0161\370\001\002" +
    "\000\110\002\ufe4d\013\ufe4d\016\ufe4d\017\ufe4d\026\ufe4d\054" +
    "\ufe4d\074\ufe4d\120\ufe4d\140\ufe4d\164\ufe4d\166\ufe4d\172\ufe4d" +
    "\175\ufe4d\176\ufe4d\203\ufe4d\210\ufe4d\223\ufe4d\224\ufe4d\226" +
    "\ufe4d\231\ufe4d\235\ufe4d\251\ufe4d\303\ufe4d\304\ufe4d\347\ufe4d" +
    "\u0133\ufe4d\u0148\ufe4d\u0149\ufe4d\u014a\ufe4d\u014b\ufe4d\u014e\ufe4d\u0152" +
    "\ufe4d\u0153\ufe4d\u0159\ufe4d\u0161\ufe4d\001\002\000\110\002\ufe4a" +
    "\013\ufe4a\016\ufe4a\017\ufe4a\026\ufe4a\054\ufe4a\074\ufe4a\120" +
    "\ufe4a\140\ufe4a\164\ufe4a\166\ufe4a\172\ufe4a\175\ufe4a\176\ufe4a" +
    "\203\ufe4a\210\ufe4a\223\ufe4a\224\ufe4a\226\ufe4a\231\ufe4a\235" +
    "\ufe4a\251\ufe4a\303\ufe4a\304\ufe4a\347\ufe4a\u0133\ufe4a\u0148\ufe4a" +
    "\u0149\ufe4a\u014a\ufe4a\u014b\ufe4a\u014e\ufe4a\u0152\ufe4a\u0153\ufe4a\u0159" +
    "\ufe4a\u0161\ufe4a\001\002\000\006\u0140\374\u015e\372\001\002" +
    "\000\004\u0161\376\001\002\000\004\u0159\375\001\002\000" +
    "\004\u0159\ufe4c\001\002\000\110\002\ufe50\013\ufe50\016\ufe50" +
    "\017\ufe50\026\ufe50\054\ufe50\074\ufe50\120\ufe50\140\ufe50\164" +
    "\ufe50\166\ufe50\172\ufe50\175\ufe50\176\ufe50\203\ufe50\210\ufe50" +
    "\223\ufe50\224\ufe50\226\ufe50\231\ufe50\235\ufe50\251\ufe50\303" +
    "\ufe50\304\ufe50\347\ufe50\u0133\ufe50\u0148\ufe50\u0149\ufe50\u014a\ufe50" +
    "\u014b\ufe50\u014e\ufe50\u0152\ufe50\u0153\ufe50\u0159\ufe50\u0161\ufe50\001" +
    "\002\000\004\u0159\ufe4b\001\002\000\010\u0140\u0103\u015e\u0101" +
    "\u0161\u0100\001\002\000\010\164\ufe54\u0153\ufe54\u0159\ufe54\001" +
    "\002\000\004\u0161\u0105\001\002\000\004\u0159\u0104\001\002" +
    "\000\010\164\ufe55\u0153\ufe55\u0159\ufe55\001\002\000\110\002" +
    "\ufe5e\013\ufe5e\016\ufe5e\017\ufe5e\026\ufe5e\054\ufe5e\074\ufe5e" +
    "\120\ufe5e\140\ufe5e\164\ufe5e\166\ufe5e\172\ufe5e\175\ufe5e\176" +
    "\ufe5e\203\ufe5e\210\ufe5e\223\ufe5e\224\ufe5e\226\ufe5e\231\ufe5e" +
    "\235\ufe5e\251\ufe5e\303\ufe5e\304\ufe5e\347\ufe5e\u0133\ufe5e\u0148" +
    "\ufe5e\u0149\ufe5e\u014a\ufe5e\u014b\ufe5e\u014e\ufe5e\u0152\ufe5e\u0153\ufe5e" +
    "\u0159\ufe5e\u0161\ufe5e\001\002\000\010\164\ufe56\u0153\ufe56\u0159" +
    "\ufe56\001\002\000\010\u0140\u0103\u015e\u0101\u0161\u0100\001\002" +
    "\000\004\u0153\u0108\001\002\000\024\023\041\072\043\250" +
    "\044\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e\051" +
    "\001\002\000\004\u0159\u010a\001\002\000\110\002\ufe59\013" +
    "\ufe59\016\ufe59\017\ufe59\026\ufe59\054\ufe59\074\ufe59\120\ufe59" +
    "\140\ufe59\164\ufe59\166\ufe59\172\ufe59\175\ufe59\176\ufe59\203" +
    "\ufe59\210\ufe59\223\ufe59\224\ufe59\226\ufe59\231\ufe59\235\ufe59" +
    "\251\ufe59\303\ufe59\304\ufe59\347\ufe59\u0133\ufe59\u0148\ufe59\u0149" +
    "\ufe59\u014a\ufe59\u014b\ufe59\u014e\ufe59\u0152\ufe59\u0153\ufe59\u0159\ufe59" +
    "\u0161\ufe59\001\002\000\034\002\ufebd\017\ufebd\054\ufebd\120" +
    "\ufebd\164\ufebd\172\ufebd\175\ufebd\176\ufebd\223\ufebd\304\ufebd" +
    "\u0133\ufebd\u0152\ufebd\u0153\ufebd\001\002\000\034\002\ufec0\017" +
    "\ufec0\054\ufec0\120\ufec0\164\ufec0\172\ufec0\175\ufec0\176\ufec0" +
    "\223\ufec0\304\ufec0\u0133\ufec0\u0152\ufec0\u0153\ufec0\001\002\000" +
    "\006\u0145\u0112\u0161\u0113\001\002\000\032\023\041\072\043" +
    "\250\044\251\176\252\052\u0106\040\u013d\045\u013f\037\u0140" +
    "\202\u0158\050\u015e\051\u0161\177\001\002\000\034\002\ufeb8" +
    "\017\ufeb8\054\ufeb8\120\ufeb8\164\ufeb8\172\ufeb8\175\ufeb8\176" +
    "\ufeb8\223\ufeb8\304\ufeb8\u0133\ufeb8\u0152\ufeb8\u0153\ufeb8\001\002" +
    "\000\034\002\ufeb1\017\ufeb1\054\ufeb1\120\ufeb1\164\ufeb1\172" +
    "\ufeb1\175\ufeb1\176\ufeb1\223\ufeb1\304\ufeb1\u0133\ufeb1\u0152\ufeb1" +
    "\u0153\ufeb1\001\002\000\034\002\ufeb9\017\ufeb9\054\ufeb9\120" +
    "\ufeb9\164\ufeb9\172\ufeb9\175\ufeb9\176\ufeb9\223\ufeb9\304\ufeb9" +
    "\u0133\ufeb9\u0152\ufeb9\u0153\ufeb9\001\002\000\034\002\ufeb6\017" +
    "\ufeb6\054\ufeb6\120\ufeb6\164\ufeb6\172\ufeb6\175\ufeb6\176\ufeb6" +
    "\223\ufeb6\304\ufeb6\u0133\ufeb6\u0152\ufeb6\u0153\ufeb6\001\002\000" +
    "\040\002\ufeb2\016\360\017\ufeb2\054\ufeb2\120\ufeb2\164\ufeb2" +
    "\172\ufeb2\175\ufeb2\176\ufeb2\223\ufeb2\304\ufeb2\u0133\ufeb2\u0152" +
    "\ufeb2\u0153\ufeb2\u0161\361\001\002\000\034\002\ufeb5\017\ufeb5" +
    "\054\ufeb5\120\ufeb5\164\ufeb5\172\ufeb5\175\ufeb5\176\ufeb5\223" +
    "\ufeb5\304\ufeb5\u0133\ufeb5\u0152\ufeb5\u0153\ufeb5\001\002\000\024" +
    "\023\041\072\043\250\044\252\052\u0106\040\u013d\045\u013f" +
    "\037\u0158\050\u015e\051\001\002\000\004\u0159\u0117\001\002" +
    "\000\110\002\ufe5a\013\ufe5a\016\ufe5a\017\ufe5a\026\ufe5a\054" +
    "\ufe5a\074\ufe5a\120\ufe5a\140\ufe5a\164\ufe5a\166\ufe5a\172\ufe5a" +
    "\175\ufe5a\176\ufe5a\203\ufe5a\210\ufe5a\223\ufe5a\224\ufe5a\226" +
    "\ufe5a\231\ufe5a\235\ufe5a\251\ufe5a\303\ufe5a\304\ufe5a\347\ufe5a" +
    "\u0133\ufe5a\u0148\ufe5a\u0149\ufe5a\u014a\ufe5a\u014b\ufe5a\u014e\ufe5a\u0152" +
    "\ufe5a\u0153\ufe5a\u0159\ufe5a\u0161\ufe5a\001\002\000\010\002\ufdc7" +
    "\172\ufdc7\u0152\ufdc7\001\002\000\104\023\uff7c\040\uff7c\041" +
    "\uff7c\043\uff7c\065\uff7c\070\uff7c\072\uff7c\100\uff7c\105\uff7c" +
    "\161\uff7c\231\uff7c\244\uff7c\246\u014b\250\uff7c\251\u014a\252" +
    "\uff7c\256\uff7c\260\uff7c\265\uff7c\266\uff7c\347\uff7c\363\uff7c" +
    "\364\uff7c\373\uff7c\u0105\uff7c\u0106\uff7c\u0109\uff7c\u0119\uff7c\u011b" +
    "\uff7c\u0125\uff7c\u0138\uff7c\u0158\u014f\u0161\uff7c\001\002\000\010" +
    "\002\ufdc9\172\ufdc9\u0152\ufdc9\001\002\000\010\002\ufdcb\172" +
    "\ufdcb\u0152\ufdcb\001\002\000\010\002\ufdcd\172\ufdcd\u0152\ufdcd" +
    "\001\002\000\004\u0161\021\001\002\000\010\002\ufdd0\172" +
    "\ufdd0\u0152\ufdd0\001\002\000\104\023\uff7c\040\uff7c\041\uff7c" +
    "\043\uff7c\065\uff7c\070\uff7c\072\uff7c\100\uff7c\105\uff7c\161" +
    "\uff7c\231\uff7c\244\uff7c\246\u014b\250\uff7c\251\u014a\252\uff7c" +
    "\256\uff7c\260\uff7c\265\uff7c\266\uff7c\347\uff7c\363\uff7c\364" +
    "\uff7c\373\uff7c\u0105\uff7c\u0106\uff7c\u0109\uff7c\u0119\uff7c\u011b\uff7c" +
    "\u0125\uff7c\u0138\uff7c\u0158\u014f\u0161\uff7c\001\002\000\100\023" +
    "\041\040\326\041\322\043\324\070\332\072\043\100\350" +
    "\105\355\231\340\244\327\250\044\251\176\252\052\260" +
    "\325\265\346\347\352\364\356\373\321\u0105\323\u0106\040" +
    "\u0119\335\u011b\334\u0125\353\u0138\337\u013d\045\u013f\037\u0140" +
    "\202\u0145\354\u0158\050\u015e\051\u0161\347\001\002\000\010" +
    "\002\ufdd2\172\ufdd2\u0152\ufdd2\001\002\000\004\035\u01f1\001" +
    "\002\000\014\273\u0135\276\u0137\u0158\u0139\u015e\u013a\u0161\021" +
    "\001\002\000\004\035\u0126\001\002\000\010\002\ufdd4\172" +
    "\ufdd4\u0152\ufdd4\001\002\000\100\023\041\040\326\041\322" +
    "\043\324\070\332\072\043\100\350\105\355\231\340\244" +
    "\327\250\044\251\176\252\052\260\325\265\346\347\352" +
    "\364\356\373\321\u0105\323\u0106\040\u0119\335\u011b\334\u0125" +
    "\353\u0138\337\u013d\045\u013f\037\u0140\202\u0145\354\u0158\050" +
    "\u015e\051\u0161\347\001\002\000\012\017\u012c\054\u0129\120" +
    "\u012a\u0153\u012b\001\002\000\010\002\ufdc6\172\ufdc6\u0152\ufdc6" +
    "\001\002\000\004\u0161\u0132\001\002\000\072\002\ufea9\013" +
    "\ufea9\026\ufea9\074\ufea9\140\ufea9\166\ufea9\172\ufea9\175\ufea9" +
    "\176\ufea9\203\ufea9\210\ufea9\224\ufea9\226\ufea9\231\ufea9\235" +
    "\ufea9\251\ufea9\303\ufea9\304\ufea9\347\ufea9\u0133\ufea9\u0148\ufea9" +
    "\u0149\ufea9\u014a\ufea9\u014b\ufea9\u014e\ufea9\u0152\ufea9\u0153\ufea9\u0159" +
    "\ufea9\001\002\000\100\023\041\040\326\041\322\043\324" +
    "\070\332\072\043\100\350\105\355\231\340\244\327\250" +
    "\044\251\176\252\052\260\325\265\346\347\352\364\356" +
    "\373\321\u0105\323\u0106\040\u0119\335\u011b\334\u0125\353\u0138" +
    "\337\u013d\045\u013f\037\u0140\202\u0145\354\u0158\050\u015e\051" +
    "\u0161\347\001\002\000\072\002\ufeaa\013\ufeaa\026\ufeaa\074" +
    "\ufeaa\140\ufeaa\166\ufeaa\172\ufeaa\175\ufeaa\176\ufeaa\203\ufeaa" +
    "\210\ufeaa\224\ufeaa\226\ufeaa\231\ufeaa\235\ufeaa\251\ufeaa\303" +
    "\ufeaa\304\ufeaa\347\ufeaa\u0133\ufeaa\u0148\ufeaa\u0149\ufeaa\u014a\ufeaa" +
    "\u014b\ufeaa\u014e\ufeaa\u0152\ufeaa\u0153\ufeaa\u0159\ufeaa\001\002\000" +
    "\072\002\ufeac\013\ufeac\026\ufeac\074\ufeac\140\ufeac\166\ufeac" +
    "\172\ufeac\175\ufeac\176\ufeac\203\ufeac\210\ufeac\224\ufeac\226" +
    "\ufeac\231\ufeac\235\ufeac\251\ufeac\303\ufeac\304\ufeac\347\ufeac" +
    "\u0133\ufeac\u0148\ufeac\u0149\ufeac\u014a\ufeac\u014b\ufeac\u014e\ufeac\u0152" +
    "\ufeac\u0153\ufeac\u0159\ufeac\001\002\000\072\002\ufeaf\013\ufeaf" +
    "\026\ufeaf\074\ufeaf\140\ufeaf\166\ufeaf\172\ufeaf\175\ufeaf\176" +
    "\ufeaf\203\ufeaf\210\ufeaf\224\ufeaf\226\ufeaf\231\ufeaf\235\ufeaf" +
    "\251\ufeaf\303\ufeaf\304\ufeaf\347\ufeaf\u0133\ufeaf\u0148\ufeaf\u0149" +
    "\ufeaf\u014a\ufeaf\u014b\ufeaf\u014e\ufeaf\u0152\ufeaf\u0153\ufeaf\u0159\ufeaf" +
    "\001\002\000\072\002\ufeb0\013\ufeb0\026\ufeb0\074\ufeb0\140" +
    "\ufeb0\166\ufeb0\172\ufeb0\175\ufeb0\176\ufeb0\203\ufeb0\210\ufeb0" +
    "\224\ufeb0\226\ufeb0\231\ufeb0\235\ufeb0\251\ufeb0\303\ufeb0\304" +
    "\ufeb0\347\ufeb0\u0133\ufeb0\u0148\ufeb0\u0149\ufeb0\u014a\ufeb0\u014b\ufeb0" +
    "\u014e\ufeb0\u0152\ufeb0\u0153\ufeb0\u0159\ufeb0\001\002\000\072\002" +
    "\ufeae\013\ufeae\026\ufeae\074\ufeae\140\ufeae\166\ufeae\172\ufeae" +
    "\175\ufeae\176\ufeae\203\ufeae\210\ufeae\224\ufeae\226\ufeae\231" +
    "\ufeae\235\ufeae\251\ufeae\303\ufeae\304\ufeae\347\ufeae\u0133\ufeae" +
    "\u0148\ufeae\u0149\ufeae\u014a\ufeae\u014b\ufeae\u014e\ufeae\u0152\ufeae\u0153" +
    "\ufeae\u0159\ufeae\001\002\000\072\002\ufead\013\ufead\026\ufead" +
    "\074\ufead\140\ufead\166\ufead\172\ufead\175\ufead\176\ufead\203" +
    "\ufead\210\ufead\224\ufead\226\ufead\231\ufead\235\ufead\251\ufead" +
    "\303\ufead\304\ufead\347\ufead\u0133\ufead\u0148\ufead\u0149\ufead\u014a" +
    "\ufead\u014b\ufead\u014e\ufead\u0152\ufead\u0153\ufead\u0159\ufead\001\002" +
    "\000\006\017\u012c\120\u012a\001\002\000\072\002\ufeab\013" +
    "\ufeab\026\ufeab\074\ufeab\140\ufeab\166\ufeab\172\ufeab\175\ufeab" +
    "\176\ufeab\203\ufeab\210\ufeab\224\ufeab\226\ufeab\231\ufeab\235" +
    "\ufeab\251\ufeab\303\ufeab\304\ufeab\347\ufeab\u0133\ufeab\u0148\ufeab" +
    "\u0149\ufeab\u014a\ufeab\u014b\ufeab\u014e\ufeab\u0152\ufeab\u0153\ufeab\u0159" +
    "\ufeab\001\002\000\042\002\ufea3\016\u01d4\074\ufea3\166\ufea3" +
    "\172\ufea3\175\ufea3\176\ufea3\210\ufea3\226\ufea3\231\ufea3\270" +
    "\ufea3\304\ufea3\347\ufea3\u0133\ufea3\u0152\ufea3\u0161\u01d5\001\002" +
    "\000\004\u0158\u01eb\001\002\000\044\002\ufea3\016\u01d4\074" +
    "\ufea3\166\ufea3\172\ufea3\175\ufea3\176\ufea3\210\ufea3\226\ufea3" +
    "\231\ufea3\270\ufea3\304\ufea3\347\ufea3\u0110\ufea3\u0133\ufea3\u0152" +
    "\ufea3\u0161\u01d5\001\002\000\004\u0158\u01db\001\002\000\020" +
    "\002\ufdc5\172\ufdc5\175\u0122\176\u011f\304\u0124\u0133\u0119\u0152" +
    "\ufdc5\001\002\000\004\226\u01d8\001\002\000\004\u0161\u01d3" +
    "\001\002\000\034\002\ufe9c\074\u013f\166\u013e\172\ufe9c\175" +
    "\ufe9c\176\ufe9c\210\u0143\226\u013c\231\u013d\304\ufe9c\347\u0140" +
    "\u0133\ufe9c\u0152\ufe9c\001\002\000\004\226\ufe90\001\002\000" +
    "\006\226\u01cb\305\u01cc\001\002\000\006\226\u01cb\305\u01cc" +
    "\001\002\000\004\226\u01cf\001\002\000\006\226\u01cb\305" +
    "\u01cc\001\002\000\004\226\ufe94\001\002\000\004\226\u01ca" +
    "\001\002\000\004\226\ufe95\001\002\000\020\002\ufea0\172" +
    "\ufea0\175\ufea0\176\ufea0\304\ufea0\u0133\ufea0\u0152\ufea0\001\002" +
    "\000\012\273\u0135\276\u0137\u015e\u013a\u0161\021\001\002\000" +
    "\020\002\ufe9e\172\ufe9e\175\ufe9e\176\ufe9e\304\ufe9e\u0133\ufe9e" +
    "\u0152\ufe9e\001\002\000\004\270\u0148\001\002\000\104\023" +
    "\uff7c\040\uff7c\041\uff7c\043\uff7c\065\uff7c\070\uff7c\072\uff7c" +
    "\100\uff7c\105\uff7c\161\uff7c\231\uff7c\244\uff7c\246\u014b\250" +
    "\uff7c\251\u014a\252\uff7c\256\uff7c\260\uff7c\265\uff7c\266\uff7c" +
    "\347\uff7c\363\uff7c\364\uff7c\373\uff7c\u0105\uff7c\u0106\uff7c\u0109" +
    "\uff7c\u0119\uff7c\u011b\uff7c\u0125\uff7c\u0138\uff7c\u0158\u014f\u0161\uff7c" +
    "\001\002\000\076\023\041\040\326\041\322\043\324\065" +
    "\u0162\070\332\072\043\100\350\105\355\161\u0157\231\340" +
    "\244\327\250\044\252\052\256\u0165\260\325\265\346\266" +
    "\u015c\347\352\363\u015f\364\356\373\321\u0105\323\u0106\040" +
    "\u0109\u015e\u0119\335\u011b\334\u0125\353\u0138\337\u0161\u0164\001" +
    "\002\000\076\023\uff7d\040\uff7d\041\uff7d\043\uff7d\065\uff7d" +
    "\070\uff7d\072\uff7d\100\uff7d\105\uff7d\161\uff7d\231\uff7d\244" +
    "\uff7d\250\uff7d\252\uff7d\256\uff7d\260\uff7d\265\uff7d\266\uff7d" +
    "\347\uff7d\363\uff7d\364\uff7d\373\uff7d\u0105\uff7d\u0106\uff7d\u0109" +
    "\uff7d\u0119\uff7d\u011b\uff7d\u0125\uff7d\u0138\uff7d\u0161\uff7d\001\002" +
    "\000\004\u0158\u01b6\001\002\000\040\002\uffa7\013\uffa7\074" +
    "\uffa7\166\uffa7\172\uffa7\175\uffa7\176\uffa7\210\uffa7\226\uffa7" +
    "\231\uffa7\304\uffa7\347\uffa7\u0133\uffa7\u0152\uffa7\u0159\uffa7\001" +
    "\002\000\040\002\uffa5\013\u01b3\074\uffa5\166\uffa5\172\uffa5" +
    "\175\uffa5\176\uffa5\210\uffa5\226\uffa5\231\uffa5\304\uffa5\347" +
    "\uffa5\u0133\uffa5\u0152\uffa5\u0159\uffa5\001\002\000\034\002\ufe97" +
    "\074\u01ac\166\u013e\172\ufe97\175\ufe97\176\ufe97\210\u0143\226" +
    "\u013c\231\u013d\304\ufe97\347\u0140\u0133\ufe97\u0152\ufe97\001\002" +
    "\000\102\023\uff7c\040\uff7c\041\uff7c\043\uff7c\065\uff7c\070" +
    "\uff7c\072\uff7c\100\uff7c\105\uff7c\161\uff7c\231\uff7c\244\uff7c" +
    "\250\uff7c\251\u014a\252\uff7c\256\uff7c\260\uff7c\265\uff7c\266" +
    "\uff7c\347\uff7c\363\uff7c\364\uff7c\373\uff7c\u0105\uff7c\u0106\uff7c" +
    "\u0109\uff7c\u0119\uff7c\u011b\uff7c\u0125\uff7c\u0138\uff7c\u0158\u014f\u0161" +
    "\uff7c\001\002\000\004\u0159\u0151\001\002\000\042\002\uff82" +
    "\013\uff82\074\uff82\166\uff82\172\uff82\175\uff82\176\uff82\210" +
    "\uff82\226\uff82\231\uff82\303\u0153\304\uff82\347\uff82\u0133\uff82" +
    "\u0152\uff82\u0159\uff82\001\002\000\040\002\uff84\013\uff84\074" +
    "\uff84\166\uff84\172\uff84\175\uff84\176\uff84\210\uff84\226\uff84" +
    "\231\uff84\304\uff84\347\uff84\u0133\uff84\u0152\uff84\u0159\uff84\001" +
    "\002\000\102\023\041\040\326\041\322\043\324\065\u0162" +
    "\070\332\072\043\100\350\105\355\161\u0157\231\340\244" +
    "\327\250\044\251\u0159\252\052\256\u0165\260\325\265\346" +
    "\266\u015c\347\352\363\u015f\364\356\373\321\u0105\323\u0106" +
    "\040\u0109\u015e\u0119\335\u011b\334\u0125\353\u0138\337\u0158\u015d" +
    "\u0161\u0164\001\002\000\040\002\uff80\013\uff80\074\uff80\166" +
    "\uff80\172\uff80\175\uff80\176\uff80\210\uff80\226\uff80\231\uff80" +
    "\304\uff80\347\uff80\u0133\uff80\u0152\uff80\u0159\uff80\001\002\000" +
    "\040\002\uff83\013\uff83\074\uff83\166\uff83\172\uff83\175\uff83" +
    "\176\uff83\210\uff83\226\uff83\231\uff83\304\uff83\347\uff83\u0133" +
    "\uff83\u0152\uff83\u0159\uff83\001\002\000\072\002\uff9c\013\uff9c" +
    "\026\uff9c\074\uff9c\140\uff9c\166\uff9c\172\uff9c\175\uff9c\176" +
    "\uff9c\203\uff9c\210\uff9c\224\uff9c\226\uff9c\231\uff9c\235\uff9c" +
    "\251\uff9c\303\uff9c\304\uff9c\347\uff9c\u0133\uff9c\u0148\uff9c\u0149" +
    "\uff9c\u014a\uff9c\u014b\uff9c\u014e\uff9c\u0152\uff9c\u0153\uff9c\u0159\uff9c" +
    "\001\002\000\004\u0158\u01a4\001\002\000\072\002\uff9f\013" +
    "\uff9f\026\uff9f\074\uff9f\140\uff9f\166\uff9f\172\uff9f\175\uff9f" +
    "\176\uff9f\203\uff9f\210\uff9f\224\uff9f\226\uff9f\231\uff9f\235" +
    "\uff9f\251\uff9f\303\uff9f\304\uff9f\347\uff9f\u0133\uff9f\u0148\uff9f" +
    "\u0149\uff9f\u014a\uff9f\u014b\uff9f\u014e\uff9f\u0152\uff9f\u0153\uff9f\u0159" +
    "\uff9f\001\002\000\100\023\041\040\326\041\322\043\324" +
    "\065\u0162\070\332\072\043\100\350\105\355\161\u0157\231" +
    "\340\244\327\250\044\252\052\256\u0165\260\325\265\346" +
    "\266\u015c\347\352\363\u015f\364\356\373\321\u0105\323\u0106" +
    "\040\u0109\u015e\u0119\335\u011b\334\u0125\353\u0138\337\u0158\u015d" +
    "\u0161\u0164\001\002\000\072\002\uffa0\013\uffa0\026\uffa0\074" +
    "\uffa0\140\uffa0\166\uffa0\172\uffa0\175\uffa0\176\uffa0\203\uffa0" +
    "\210\uffa0\224\uffa0\226\uffa0\231\uffa0\235\uffa0\251\uffa0\303" +
    "\uffa0\304\uffa0\347\uffa0\u0133\uffa0\u0148\uffa0\u0149\uffa0\u014a\uffa0" +
    "\u014b\uffa0\u014e\uffa0\u0152\uffa0\u0153\uffa0\u0159\uffa0\001\002\000" +
    "\026\026\u0184\203\u0182\224\u0187\235\u0186\251\u0185\u0148\226" +
    "\u0149\222\u014a\216\u014b\211\u014e\212\001\002\000\004\u012a" +
    "\u0179\001\002\000\102\023\uff7c\040\uff7c\041\uff7c\043\uff7c" +
    "\065\uff7c\070\uff7c\072\uff7c\100\uff7c\105\uff7c\161\uff7c\231" +
    "\uff7c\244\uff7c\250\uff7c\251\u014a\252\uff7c\256\uff7c\260\uff7c" +
    "\265\uff7c\266\uff7c\347\uff7c\363\uff7c\364\uff7c\373\uff7c\u0105" +
    "\uff7c\u0106\uff7c\u0109\uff7c\u0119\uff7c\u011b\uff7c\u0125\uff7c\u0138\uff7c" +
    "\u0158\u014f\u0161\uff7c\001\002\000\072\002\ufe68\013\ufe68\026" +
    "\ufe68\074\ufe68\140\ufe68\166\ufe68\172\ufe68\175\ufe68\176\ufe68" +
    "\203\ufe68\210\ufe68\224\ufe68\226\ufe68\231\ufe68\235\ufe68\251" +
    "\ufe68\303\ufe68\304\ufe68\347\ufe68\u0133\ufe68\u0148\ufe68\u0149\ufe68" +
    "\u014a\ufe68\u014b\ufe68\u014e\ufe68\u0152\ufe68\u0153\ufe68\u0159\ufe68\001" +
    "\002\000\072\002\ufe67\013\ufe67\026\ufe67\074\ufe67\140\ufe67" +
    "\166\ufe67\172\ufe67\175\ufe67\176\ufe67\203\ufe67\210\ufe67\224" +
    "\ufe67\226\ufe67\231\ufe67\235\ufe67\251\ufe67\303\ufe67\304\ufe67" +
    "\347\ufe67\u0133\ufe67\u0148\ufe67\u0149\ufe67\u014a\ufe67\u014b\ufe67\u014e" +
    "\ufe67\u0152\ufe67\u0153\ufe67\u0159\ufe67\001\002\000\072\002\uff9e" +
    "\013\uff9e\026\uff9e\074\uff9e\140\uff9e\166\uff9e\172\uff9e\175" +
    "\uff9e\176\uff9e\203\uff9e\210\uff9e\224\uff9e\226\uff9e\231\uff9e" +
    "\235\uff9e\251\uff9e\303\uff9e\304\uff9e\347\uff9e\u0133\uff9e\u0148" +
    "\uff9e\u0149\uff9e\u014a\uff9e\u014b\uff9e\u014e\uff9e\u0152\uff9e\u0153\uff9e" +
    "\u0159\uff9e\001\002\000\042\002\uff82\013\uff82\074\uff82\166" +
    "\uff82\172\uff82\175\uff82\176\uff82\210\uff82\226\uff82\231\uff82" +
    "\303\u0153\304\uff82\347\uff82\u0133\uff82\u0152\uff82\u0159\uff82\001" +
    "\002\000\004\u0158\u016d\001\002\000\072\002\uff9a\013\uff9a" +
    "\026\uff9a\074\uff9a\140\uff9a\166\uff9a\172\uff9a\175\uff9a\176" +
    "\uff9a\203\uff9a\210\uff9a\224\uff9a\226\uff9a\231\uff9a\235\uff9a" +
    "\251\uff9a\303\uff9a\304\uff9a\347\uff9a\u0133\uff9a\u0148\uff9a\u0149" +
    "\uff9a\u014a\uff9a\u014b\uff9a\u014e\uff9a\u0152\uff9a\u0153\uff9a\u0159\uff9a" +
    "\001\002\000\074\002\ufff5\013\ufff5\026\ufff5\074\ufff5\140" +
    "\ufff5\166\ufff5\172\ufff5\175\ufff5\176\ufff5\203\ufff5\210\ufff5" +
    "\224\ufff5\226\ufff5\231\ufff5\235\ufff5\251\ufff5\303\ufff5\304" +
    "\ufff5\347\ufff5\u0133\ufff5\u0148\ufff5\u0149\ufff5\u014a\ufff5\u014b\ufff5" +
    "\u014e\ufff5\u0152\ufff5\u0153\ufff5\u0154\025\u0159\ufff5\001\002\000" +
    "\004\u0158\u0168\001\002\000\072\002\uff9d\013\uff9d\026\uff9d" +
    "\074\uff9d\140\uff9d\166\uff9d\172\uff9d\175\uff9d\176\uff9d\203" +
    "\uff9d\210\uff9d\224\uff9d\226\uff9d\231\uff9d\235\uff9d\251\uff9d" +
    "\303\uff9d\304\uff9d\347\uff9d\u0133\uff9d\u0148\uff9d\u0149\uff9d\u014a" +
    "\uff9d\u014b\uff9d\u014e\uff9d\u0152\uff9d\u0153\uff9d\u0159\uff9d\001\002" +
    "\000\072\002\uff9b\013\uff9b\026\uff9b\074\uff9b\140\uff9b\166" +
    "\uff9b\172\uff9b\175\uff9b\176\uff9b\203\uff9b\210\uff9b\224\uff9b" +
    "\226\uff9b\231\uff9b\235\uff9b\251\uff9b\303\uff9b\304\uff9b\347" +
    "\uff9b\u0133\uff9b\u0148\uff9b\u0149\uff9b\u014a\uff9b\u014b\uff9b\u014e\uff9b" +
    "\u0152\uff9b\u0153\uff9b\u0159\uff9b\001\002\000\032\023\041\072" +
    "\043\250\044\251\176\252\052\u0106\040\u013d\045\u013f\037" +
    "\u0140\202\u0158\050\u015e\051\u0161\177\001\002\000\004\u0153" +
    "\u016a\001\002\000\032\023\041\072\043\250\044\251\176" +
    "\252\052\u0106\040\u013d\045\u013f\037\u0140\202\u0158\050\u015e" +
    "\051\u0161\177\001\002\000\004\u0159\u016c\001\002\000\072" +
    "\002\ufe66\013\ufe66\026\ufe66\074\ufe66\140\ufe66\166\ufe66\172" +
    "\ufe66\175\ufe66\176\ufe66\203\ufe66\210\ufe66\224\ufe66\226\ufe66" +
    "\231\ufe66\235\ufe66\251\ufe66\303\ufe66\304\ufe66\347\ufe66\u0133" +
    "\ufe66\u0148\ufe66\u0149\ufe66\u014a\ufe66\u014b\ufe66\u014e\ufe66\u0152\ufe66" +
    "\u0153\ufe66\u0159\ufe66\001\002\000\006\u0145\u016f\u0161\021\001" +
    "\002\000\004\u0153\u0171\001\002\000\004\u0153\uff8a\001\002" +
    "\000\004\u0153\uff89\001\002\000\104\023\uff7c\040\uff7c\041" +
    "\uff7c\043\uff7c\065\uff7c\070\uff7c\072\uff7c\100\uff7c\105\uff7c" +
    "\161\uff7c\231\uff7c\244\uff7c\246\u014b\250\uff7c\251\u014a\252" +
    "\uff7c\256\uff7c\260\uff7c\265\uff7c\266\uff7c\347\uff7c\363\uff7c" +
    "\364\uff7c\373\uff7c\u0105\uff7c\u0106\uff7c\u0109\uff7c\u0119\uff7c\u011b" +
    "\uff7c\u0125\uff7c\u0138\uff7c\u0158\u014f\u0161\uff7c\001\002\000\004" +
    "\u0159\u0174\001\002\000\004\u0159\uff88\001\002\000\042\002" +
    "\uffa3\013\uffa3\074\uffa3\166\uffa3\172\uffa3\175\uffa3\176\uffa3" +
    "\210\uffa3\226\uffa3\231\uffa3\303\uffa3\304\uffa3\347\uffa3\u0133" +
    "\uffa3\u0152\uffa3\u0159\uffa3\001\002\000\040\002\uff7f\013\uff7f" +
    "\074\uff7f\166\uff7f\172\uff7f\175\uff7f\176\uff7f\210\uff7f\226" +
    "\uff7f\231\uff7f\304\uff7f\347\uff7f\u0133\uff7f\u0152\uff7f\u0159\uff7f" +
    "\001\002\000\004\u0159\u0177\001\002\000\042\002\uff82\013" +
    "\uff82\074\uff82\166\uff82\172\uff82\175\uff82\176\uff82\210\uff82" +
    "\226\uff82\231\uff82\303\u0153\304\uff82\347\uff82\u0133\uff82\u0152" +
    "\uff82\u0159\uff82\001\002\000\040\002\uff7e\013\uff7e\074\uff7e" +
    "\166\uff7e\172\uff7e\175\uff7e\176\uff7e\210\uff7e\226\uff7e\231" +
    "\uff7e\304\uff7e\347\uff7e\u0133\uff7e\u0152\uff7e\u0159\uff7e\001\002" +
    "\000\004\156\u017a\001\002\000\004\u0161\021\001\002\000" +
    "\004\306\u017d\001\002\000\072\002\ufe69\013\ufe69\026\ufe69" +
    "\074\ufe69\140\ufe69\166\ufe69\172\ufe69\175\ufe69\176\ufe69\203" +
    "\ufe69\210\ufe69\224\ufe69\226\ufe69\231\ufe69\235\ufe69\251\ufe69" +
    "\303\ufe69\304\ufe69\347\ufe69\u0133\ufe69\u0148\ufe69\u0149\ufe69\u014a" +
    "\ufe69\u014b\ufe69\u014e\ufe69\u0152\ufe69\u0153\ufe69\u0159\ufe69\001\002" +
    "\000\004\304\u017e\001\002\000\004\035\u017f\001\002\000" +
    "\100\023\041\040\326\041\322\043\324\070\332\072\043" +
    "\100\350\105\355\231\340\244\327\250\044\251\176\252" +
    "\052\260\325\265\346\347\352\364\356\373\321\u0105\323" +
    "\u0106\040\u0119\335\u011b\334\u0125\353\u0138\337\u013d\045\u013f" +
    "\037\u0140\202\u0145\354\u0158\050\u015e\051\u0161\347\001\002" +
    "\000\072\002\ufe61\013\ufe61\026\ufe61\074\ufe61\140\ufe61\166" +
    "\ufe61\172\ufe61\175\ufe61\176\ufe61\203\ufe61\210\ufe61\224\ufe61" +
    "\226\ufe61\231\ufe61\235\ufe61\251\ufe61\303\ufe61\304\ufe61\347" +
    "\ufe61\u0133\ufe61\u0148\ufe61\u0149\ufe61\u014a\ufe61\u014b\ufe61\u014e\ufe61" +
    "\u0152\ufe61\u0153\ufe61\u0159\ufe61\001\002\000\072\023\041\040" +
    "\326\041\322\043\324\070\332\072\043\100\350\105\355" +
    "\231\340\244\327\250\044\252\052\256\u0165\260\325\265" +
    "\346\266\u015c\347\352\363\u015f\364\356\373\321\u0105\323" +
    "\u0106\040\u0109\u015e\u0119\335\u011b\334\u0125\353\u0138\337\u0161" +
    "\u0164\001\002\000\072\023\041\040\326\041\322\043\324" +
    "\070\332\072\043\100\350\105\355\231\340\244\327\250" +
    "\044\252\052\256\u0165\260\325\265\346\266\u015c\347\352" +
    "\363\u015f\364\356\373\321\u0105\323\u0106\040\u0109\u015e\u0119" +
    "\335\u011b\334\u0125\353\u0138\337\u0161\u0164\001\002\000\042" +
    "\002\uffa4\013\uffa4\074\uffa4\166\uffa4\172\uffa4\175\uffa4\176" +
    "\uffa4\210\uffa4\226\uffa4\231\uffa4\303\uffa4\304\uffa4\347\uffa4" +
    "\u0133\uffa4\u0152\uffa4\u0159\uffa4\001\002\000\072\023\041\040" +
    "\326\041\322\043\324\070\332\072\043\100\350\105\355" +
    "\231\340\244\327\250\044\252\052\256\u0165\260\325\265" +
    "\346\266\u015c\347\352\363\u015f\364\356\373\321\u0105\323" +
    "\u0106\040\u0109\u015e\u0119\335\u011b\334\u0125\353\u0138\337\u0161" +
    "\u0164\001\002\000\010\026\u0191\203\u0190\235\u018f\001\002" +
    "\000\072\023\041\040\326\041\322\043\324\070\332\072" +
    "\043\100\350\105\355\231\340\244\327\250\044\252\052" +
    "\256\u0165\260\325\265\346\266\u015c\347\352\363\u015f\364" +
    "\356\373\321\u0105\323\u0106\040\u0109\u015e\u0119\335\u011b\334" +
    "\u0125\353\u0138\337\u0161\u0164\001\002\000\006\251\u0188\253" +
    "\uff8f\001\002\000\004\253\uff90\001\002\000\004\253\u018a" +
    "\001\002\000\042\002\uff95\013\uff95\074\uff95\166\uff95\172" +
    "\uff95\175\uff95\176\uff95\210\uff95\226\uff95\231\uff95\303\uff95" +
    "\304\uff95\347\uff95\u0133\uff95\u0152\uff95\u0159\uff95\001\002\000" +
    "\044\002\uff8b\013\uff8b\074\uff8b\140\u018d\166\uff8b\172\uff8b" +
    "\175\uff8b\176\uff8b\210\uff8b\226\uff8b\231\uff8b\303\uff8b\304" +
    "\uff8b\347\uff8b\u0133\uff8b\u0152\uff8b\u0159\uff8b\001\002\000\042" +
    "\002\uff97\013\uff97\074\uff97\166\uff97\172\uff97\175\uff97\176" +
    "\uff97\210\uff97\226\uff97\231\uff97\303\uff97\304\uff97\347\uff97" +
    "\u0133\uff97\u0152\uff97\u0159\uff97\001\002\000\004\u0140\u018e\001" +
    "\002\000\042\002\uff8c\013\uff8c\074\uff8c\166\uff8c\172\uff8c" +
    "\175\uff8c\176\uff8c\210\uff8c\226\uff8c\231\uff8c\303\uff8c\304" +
    "\uff8c\347\uff8c\u0133\uff8c\u0152\uff8c\u0159\uff8c\001\002\000\072" +
    "\023\041\040\326\041\322\043\324\070\332\072\043\100" +
    "\350\105\355\231\340\244\327\250\044\252\052\256\u0165" +
    "\260\325\265\346\266\u015c\347\352\363\u015f\364\356\373" +
    "\321\u0105\323\u0106\040\u0109\u015e\u0119\335\u011b\334\u0125\353" +
    "\u0138\337\u0161\u0164\001\002\000\072\023\041\040\326\041" +
    "\322\043\324\070\332\072\043\100\350\105\355\231\340" +
    "\244\327\250\044\252\052\256\u0165\260\325\265\346\266" +
    "\u015c\347\352\363\u015f\364\356\373\321\u0105\323\u0106\040" +
    "\u0109\u015e\u0119\335\u011b\334\u0125\353\u0138\337\u0161\u0164\001" +
    "\002\000\072\023\041\040\326\041\322\043\324\070\332" +
    "\072\043\100\350\105\355\231\340\244\327\250\044\252" +
    "\052\256\u0165\260\325\265\346\266\u015c\347\352\363\u015f" +
    "\364\356\373\321\u0105\323\u0106\040\u0109\u015e\u0119\335\u011b" +
    "\334\u0125\353\u0138\337\u0161\u0164\001\002\000\042\002\uff98" +
    "\013\uff98\074\uff98\166\uff98\172\uff98\175\uff98\176\uff98\210" +
    "\uff98\226\uff98\231\uff98\303\uff98\304\uff98\347\uff98\u0133\uff98" +
    "\u0152\uff98\u0159\uff98\001\002\000\004\013\u0194\001\002\000" +
    "\072\023\041\040\326\041\322\043\324\070\332\072\043" +
    "\100\350\105\355\231\340\244\327\250\044\252\052\256" +
    "\u0165\260\325\265\346\266\u015c\347\352\363\u015f\364\356" +
    "\373\321\u0105\323\u0106\040\u0109\u015e\u0119\335\u011b\334\u0125" +
    "\353\u0138\337\u0161\u0164\001\002\000\042\002\uff92\013\uff92" +
    "\074\uff92\166\uff92\172\uff92\175\uff92\176\uff92\210\uff92\226" +
    "\uff92\231\uff92\303\uff92\304\uff92\347\uff92\u0133\uff92\u0152\uff92" +
    "\u0159\uff92\001\002\000\044\002\uff8d\013\uff8d\074\uff8d\166" +
    "\uff8d\172\uff8d\175\uff8d\176\uff8d\210\uff8d\226\uff8d\231\uff8d" +
    "\303\uff8d\304\uff8d\347\uff8d\u0133\uff8d\u0152\uff8d\u0153\u0197\u0159" +
    "\uff8d\001\002\000\072\023\041\040\326\041\322\043\324" +
    "\070\332\072\043\100\350\105\355\231\340\244\327\250" +
    "\044\252\052\256\u0165\260\325\265\346\266\u015c\347\352" +
    "\363\u015f\364\356\373\321\u0105\323\u0106\040\u0109\u015e\u0119" +
    "\335\u011b\334\u0125\353\u0138\337\u0161\u0164\001\002\000\042" +
    "\002\uff91\013\uff91\074\uff91\166\uff91\172\uff91\175\uff91\176" +
    "\uff91\210\uff91\226\uff91\231\uff91\303\uff91\304\uff91\347\uff91" +
    "\u0133\uff91\u0152\uff91\u0159\uff91\001\002\000\044\002\uff8d\013" +
    "\uff8d\074\uff8d\166\uff8d\172\uff8d\175\uff8d\176\uff8d\210\uff8d" +
    "\226\uff8d\231\uff8d\303\uff8d\304\uff8d\347\uff8d\u0133\uff8d\u0152" +
    "\uff8d\u0153\u0197\u0159\uff8d\001\002\000\042\002\uff8e\013\uff8e" +
    "\074\uff8e\166\uff8e\172\uff8e\175\uff8e\176\uff8e\210\uff8e\226" +
    "\uff8e\231\uff8e\303\uff8e\304\uff8e\347\uff8e\u0133\uff8e\u0152\uff8e" +
    "\u0159\uff8e\001\002\000\044\002\uff8b\013\uff8b\074\uff8b\140" +
    "\u018d\166\uff8b\172\uff8b\175\uff8b\176\uff8b\210\uff8b\226\uff8b" +
    "\231\uff8b\303\uff8b\304\uff8b\347\uff8b\u0133\uff8b\u0152\uff8b\u0159" +
    "\uff8b\001\002\000\042\002\uff93\013\uff93\074\uff93\166\uff93" +
    "\172\uff93\175\uff93\176\uff93\210\uff93\226\uff93\231\uff93\303" +
    "\uff93\304\uff93\347\uff93\u0133\uff93\u0152\uff93\u0159\uff93\001\002" +
    "\000\004\013\u019e\001\002\000\072\023\041\040\326\041" +
    "\322\043\324\070\332\072\043\100\350\105\355\231\340" +
    "\244\327\250\044\252\052\256\u0165\260\325\265\346\266" +
    "\u015c\347\352\363\u015f\364\356\373\321\u0105\323\u0106\040" +
    "\u0109\u015e\u0119\335\u011b\334\u0125\353\u0138\337\u0161\u0164\001" +
    "\002\000\042\002\uff96\013\uff96\074\uff96\166\uff96\172\uff96" +
    "\175\uff96\176\uff96\210\uff96\226\uff96\231\uff96\303\uff96\304" +
    "\uff96\347\uff96\u0133\uff96\u0152\uff96\u0159\uff96\001\002\000\044" +
    "\002\uff8d\013\uff8d\074\uff8d\166\uff8d\172\uff8d\175\uff8d\176" +
    "\uff8d\210\uff8d\226\uff8d\231\uff8d\303\uff8d\304\uff8d\347\uff8d" +
    "\u0133\uff8d\u0152\uff8d\u0153\u0197\u0159\uff8d\001\002\000\042\002" +
    "\uff94\013\uff94\074\uff94\166\uff94\172\uff94\175\uff94\176\uff94" +
    "\210\uff94\226\uff94\231\uff94\303\uff94\304\uff94\347\uff94\u0133" +
    "\uff94\u0152\uff94\u0159\uff94\001\002\000\042\002\uff99\013\uff99" +
    "\074\uff99\166\uff99\172\uff99\175\uff99\176\uff99\210\uff99\226" +
    "\uff99\231\uff99\303\uff99\304\uff99\347\uff99\u0133\uff99\u0152\uff99" +
    "\u0159\uff99\001\002\000\040\002\uff81\013\uff81\074\uff81\166" +
    "\uff81\172\uff81\175\uff81\176\uff81\210\uff81\226\uff81\231\uff81" +
    "\304\uff81\347\uff81\u0133\uff81\u0152\uff81\u0159\uff81\001\002\000" +
    "\006\u0145\u016f\u0161\021\001\002\000\004\u0153\u01a6\001\002" +
    "\000\006\u0140\u01a8\u015e\u01a7\001\002\000\004\u0161\u01ab\001" +
    "\002\000\004\u0159\uff87\001\002\000\004\u0159\u01aa\001\002" +
    "\000\042\002\uffa2\013\uffa2\074\uffa2\166\uffa2\172\uffa2\175" +
    "\uffa2\176\uffa2\210\uffa2\226\uffa2\231\uffa2\303\uffa2\304\uffa2" +
    "\347\uffa2\u0133\uffa2\u0152\uffa2\u0159\uffa2\001\002\000\004\u0159" +
    "\uff86\001\002\000\004\226\u01b1\001\002\000\020\002\ufe99" +
    "\172\ufe99\175\ufe99\176\ufe99\304\ufe99\u0133\ufe99\u0152\ufe99\001" +
    "\002\000\020\002\ufe98\172\ufe98\175\ufe98\176\ufe98\304\ufe98" +
    "\u0133\ufe98\u0152\ufe98\001\002\000\012\273\u0135\276\u0137\u015e" +
    "\u013a\u0161\021\001\002\000\020\002\ufe9b\172\ufe9b\175\ufe9b" +
    "\176\ufe9b\304\ufe9b\u0133\ufe9b\u0152\ufe9b\001\002\000\034\002" +
    "\ufe97\074\u01ac\166\u013e\172\ufe97\175\ufe97\176\ufe97\210\u0143" +
    "\226\u013c\231\u013d\304\ufe97\347\u0140\u0133\ufe97\u0152\ufe97\001" +
    "\002\000\020\002\ufe9a\172\ufe9a\175\ufe9a\176\ufe9a\304\ufe9a" +
    "\u0133\ufe9a\u0152\ufe9a\001\002\000\104\023\uff7c\040\uff7c\041" +
    "\uff7c\043\uff7c\065\uff7c\070\uff7c\072\uff7c\100\uff7c\105\uff7c" +
    "\161\uff7c\231\uff7c\244\uff7c\246\u014b\250\uff7c\251\u014a\252" +
    "\uff7c\256\uff7c\260\uff7c\265\uff7c\266\uff7c\347\uff7c\363\uff7c" +
    "\364\uff7c\373\uff7c\u0105\uff7c\u0106\uff7c\u0109\uff7c\u0119\uff7c\u011b" +
    "\uff7c\u0125\uff7c\u0138\uff7c\u0158\u014f\u0161\uff7c\001\002\000\036" +
    "\002\uffa9\074\uffa9\166\uffa9\172\uffa9\175\uffa9\176\uffa9\210" +
    "\uffa9\226\uffa9\231\uffa9\304\uffa9\347\uffa9\u0133\uffa9\u0152\uffa9" +
    "\u0159\uffa9\001\002\000\036\002\uffa6\074\uffa6\166\uffa6\172" +
    "\uffa6\175\uffa6\176\uffa6\210\uffa6\226\uffa6\231\uffa6\304\uffa6" +
    "\347\uffa6\u0133\uffa6\u0152\uffa6\u0159\uffa6\001\002\000\004\u0161" +
    "\u01b7\001\002\000\006\u0144\u01ba\u014a\u01bb\001\002\000\004" +
    "\u0159\u01b9\001\002\000\040\002\uffa8\013\uffa8\074\uffa8\166" +
    "\uffa8\172\uffa8\175\uffa8\176\uffa8\210\uffa8\226\uffa8\231\uffa8" +
    "\304\uffa8\347\uffa8\u0133\uffa8\u0152\uffa8\u0159\uffa8\001\002\000" +
    "\004\u0158\u01c3\001\002\000\004\u0144\u01be\001\002\000\004" +
    "\u0161\u01bd\001\002\000\004\u0159\uff7b\001\002\000\004\u0158" +
    "\u01bf\001\002\000\004\u0161\u01c0\001\002\000\004\u0159\u01c1" +
    "\001\002\000\004\u0144\u01c2\001\002\000\004\u0161\uff7a\001" +
    "\002\000\004\u0161\u01c4\001\002\000\004\u0159\u01c5\001\002" +
    "\000\004\u0144\u01c6\001\002\000\004\u0148\u01c7\001\002\000" +
    "\004\u0161\uff79\001\002\000\042\002\uff82\013\uff82\074\uff82" +
    "\166\uff82\172\uff82\175\uff82\176\uff82\210\uff82\226\uff82\231" +
    "\uff82\303\u0153\304\uff82\347\uff82\u0133\uff82\u0152\uff82\u0159\uff82" +
    "\001\002\000\040\002\uff85\013\uff85\074\uff85\166\uff85\172" +
    "\uff85\175\uff85\176\uff85\210\uff85\226\uff85\231\uff85\304\uff85" +
    "\347\uff85\u0133\uff85\u0152\uff85\u0159\uff85\001\002\000\012\273" +
    "\ufe96\276\ufe96\u015e\ufe96\u0161\ufe96\001\002\000\004\226\ufe8e" +
    "\001\002\000\004\226\u01ce\001\002\000\004\226\ufe92\001" +
    "\002\000\004\226\ufe8f\001\002\000\034\002\ufe97\074\u01ac" +
    "\166\u013e\172\ufe97\175\ufe97\176\ufe97\210\u0143\226\u013c\231" +
    "\u013d\304\ufe97\347\u0140\u0133\ufe97\u0152\ufe97\001\002\000\020" +
    "\002\ufe9d\172\ufe9d\175\ufe9d\176\ufe9d\304\ufe9d\u0133\ufe9d\u0152" +
    "\ufe9d\001\002\000\004\226\ufe91\001\002\000\004\226\ufe93" +
    "\001\002\000\042\002\ufea3\016\u01d4\074\ufea3\166\ufea3\172" +
    "\ufea3\175\ufea3\176\ufea3\210\ufea3\226\ufea3\231\ufea3\270\ufea3" +
    "\304\ufea3\347\ufea3\u0133\ufea3\u0152\ufea3\u0161\u01d5\001\002\000" +
    "\004\u0161\u01d7\001\002\000\040\002\ufea4\074\ufea4\166\ufea4" +
    "\172\ufea4\175\ufea4\176\ufea4\210\ufea4\226\ufea4\231\ufea4\270" +
    "\ufea4\304\ufea4\347\ufea4\u0110\ufea4\u0133\ufea4\u0152\ufea4\001\002" +
    "\000\036\002\ufea6\074\ufea6\166\ufea6\172\ufea6\175\ufea6\176" +
    "\ufea6\210\ufea6\226\ufea6\231\ufea6\270\ufea6\304\ufea6\347\ufea6" +
    "\u0133\ufea6\u0152\ufea6\001\002\000\040\002\ufea5\074\ufea5\166" +
    "\ufea5\172\ufea5\175\ufea5\176\ufea5\210\ufea5\226\ufea5\231\ufea5" +
    "\270\ufea5\304\ufea5\347\ufea5\u0110\ufea5\u0133\ufea5\u0152\ufea5\001" +
    "\002\000\004\u0159\u01d9\001\002\000\020\002\ufe9f\172\ufe9f" +
    "\175\ufe9f\176\ufe9f\304\ufe9f\u0133\ufe9f\u0152\ufe9f\001\002\000" +
    "\010\002\ufdce\172\ufdce\u0152\ufdce\001\002\000\004\u0161\u01dc" +
    "\001\002\000\004\u0153\u01dd\001\002\000\004\u0140\u01de\001" +
    "\002\000\004\u0159\u01df\001\002\000\042\002\ufe87\016\ufe87" +
    "\074\ufe87\166\ufe87\172\ufe87\175\ufe87\176\ufe87\210\ufe87\226" +
    "\ufe87\231\ufe87\270\ufe87\304\ufe87\347\ufe87\u0133\ufe87\u0152\ufe87" +
    "\u0161\ufe87\001\002\000\040\002\ufea1\074\ufea1\166\ufea1\172" +
    "\ufea1\175\ufea1\176\ufea1\210\ufea1\226\ufea1\231\ufea1\270\ufea1" +
    "\304\ufea1\347\ufea1\u0110\u01e1\u0133\ufea1\u0152\ufea1\001\002\000" +
    "\004\u0158\u01e4\001\002\000\036\002\ufea8\074\ufea8\166\ufea8" +
    "\172\ufea8\175\ufea8\176\ufea8\210\ufea8\226\ufea8\231\ufea8\270" +
    "\ufea8\304\ufea8\347\ufea8\u0133\ufea8\u0152\ufea8\001\002\000\036" +
    "\002\ufea2\074\ufea2\166\ufea2\172\ufea2\175\ufea2\176\ufea2\210" +
    "\ufea2\226\ufea2\231\ufea2\270\ufea2\304\ufea2\347\ufea2\u0133\ufea2" +
    "\u0152\ufea2\001\002\000\024\023\041\072\043\250\044\252" +
    "\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e\051\001\002" +
    "\000\010\307\u01e9\352\u01e8\u0159\ufe89\001\002\000\004\u0159" +
    "\u01e7\001\002\000\036\002\ufe8d\074\ufe8d\166\ufe8d\172\ufe8d" +
    "\175\ufe8d\176\ufe8d\210\ufe8d\226\ufe8d\231\ufe8d\270\ufe8d\304" +
    "\ufe8d\347\ufe8d\u0133\ufe8d\u0152\ufe8d\001\002\000\004\u0159\ufe8a" +
    "\001\002\000\004\u0159\ufe8b\001\002\000\004\u0159\ufe8c\001" +
    "\002\000\004\u0140\u01ec\001\002\000\004\u0153\u01ed\001\002" +
    "\000\004\u0140\u01ee\001\002\000\004\u0159\u01ef\001\002\000" +
    "\042\002\ufe88\016\ufe88\074\ufe88\166\ufe88\172\ufe88\175\ufe88" +
    "\176\ufe88\210\ufe88\226\ufe88\231\ufe88\270\ufe88\304\ufe88\347" +
    "\ufe88\u0133\ufe88\u0152\ufe88\u0161\ufe88\001\002\000\036\002\ufea7" +
    "\074\ufea7\166\ufea7\172\ufea7\175\ufea7\176\ufea7\210\ufea7\226" +
    "\ufea7\231\ufea7\270\ufea7\304\ufea7\347\ufea7\u0133\ufea7\u0152\ufea7" +
    "\001\002\000\032\023\041\072\043\250\044\251\176\252" +
    "\052\u0106\040\u013d\045\u013f\037\u0140\202\u0158\050\u015e\051" +
    "\u0161\177\001\002\000\016\002\ufdc3\172\ufdc3\176\ufdc3\304" +
    "\ufdc3\u0152\ufdc3\u0153\u01f3\001\002\000\032\023\041\072\043" +
    "\250\044\251\176\252\052\u0106\040\u013d\045\u013f\037\u0140" +
    "\202\u0158\050\u015e\051\u0161\177\001\002\000\014\002\ufdc5" +
    "\172\ufdc5\176\u011f\304\u0124\u0152\ufdc5\001\002\000\010\002" +
    "\ufdca\172\ufdca\u0152\ufdca\001\002\000\016\002\ufdc3\172\ufdc3" +
    "\176\ufdc3\304\ufdc3\u0152\ufdc3\u0153\u01f3\001\002\000\014\002" +
    "\ufdc4\172\ufdc4\176\ufdc4\304\ufdc4\u0152\ufdc4\001\002\000\010" +
    "\002\ufdd3\172\ufdd3\u0152\ufdd3\001\002\000\012\002\ufdc5\172" +
    "\ufdc5\304\u0124\u0152\ufdc5\001\002\000\010\002\ufdc8\172\ufdc8" +
    "\u0152\ufdc8\001\002\000\022\002\ufdc5\164\u0123\172\ufdc5\175" +
    "\u0122\176\u011f\304\u0124\u0133\u0119\u0152\ufdc5\001\002\000\010" +
    "\002\ufdd1\172\ufdd1\u0152\ufdd1\001\002\000\010\002\ufdcf\172" +
    "\ufdcf\u0152\ufdcf\001\002\000\016\002\ufdc5\172\ufdc5\175\u0122" +
    "\176\u011f\304\u0124\u0152\ufdc5\001\002\000\010\002\ufdcc\172" +
    "\ufdcc\u0152\ufdcc\001\002\000\024\023\041\072\043\250\044" +
    "\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e\051\001" +
    "\002\000\010\002\ufdd9\172\ufdd9\u0152\ufdd9\001\002\000\004" +
    "\u0159\u0203\001\002\000\102\023\041\040\326\041\322\043" +
    "\324\070\332\072\043\100\350\105\355\231\340\244\327" +
    "\250\044\251\176\252\052\260\325\265\346\307\u0204\347" +
    "\352\364\356\373\321\u0105\323\u0106\040\u0119\335\u011b\334" +
    "\u0125\353\u0138\337\u013d\045\u013f\037\u0140\202\u0145\354\u0158" +
    "\050\u015e\051\u0161\347\001\002\000\100\023\041\040\326" +
    "\041\322\043\324\070\332\072\043\100\350\105\355\231" +
    "\340\244\327\250\044\251\176\252\052\260\325\265\346" +
    "\347\352\364\356\373\321\u0105\323\u0106\040\u0119\335\u011b" +
    "\334\u0125\353\u0138\337\u013d\045\u013f\037\u0140\202\u0145\354" +
    "\u0158\050\u015e\051\u0161\347\001\002\000\010\002\ufdd5\172" +
    "\ufdd5\u0152\ufdd5\001\002\000\010\002\ufdd7\172\ufdd7\u0152\ufdd7" +
    "\001\002\000\010\002\ufdd6\172\ufdd6\u0152\ufdd6\001\002\000" +
    "\034\002\ufebe\017\ufebe\054\ufebe\120\ufebe\164\ufebe\172\ufebe" +
    "\175\ufebe\176\ufebe\223\ufebe\304\ufebe\u0133\ufebe\u0152\ufebe\u0153" +
    "\ufebe\001\002\000\010\u0140\u0103\u015e\u0101\u0161\u0100\001\002" +
    "\000\004\u0153\u020b\001\002\000\024\023\041\072\043\250" +
    "\044\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e\051" +
    "\001\002\000\004\u0159\u020d\001\002\000\110\002\ufe5c\013" +
    "\ufe5c\016\ufe5c\017\ufe5c\026\ufe5c\054\ufe5c\074\ufe5c\120\ufe5c" +
    "\140\ufe5c\164\ufe5c\166\ufe5c\172\ufe5c\175\ufe5c\176\ufe5c\203" +
    "\ufe5c\210\ufe5c\223\ufe5c\224\ufe5c\226\ufe5c\231\ufe5c\235\ufe5c" +
    "\251\ufe5c\303\ufe5c\304\ufe5c\347\ufe5c\u0133\ufe5c\u0148\ufe5c\u0149" +
    "\ufe5c\u014a\ufe5c\u014b\ufe5c\u014e\ufe5c\u0152\ufe5c\u0153\ufe5c\u0159\ufe5c" +
    "\u0161\ufe5c\001\002\000\006\u0140\374\u015e\372\001\002\000" +
    "\004\u0159\u0210\001\002\000\110\002\ufe4e\013\ufe4e\016\ufe4e" +
    "\017\ufe4e\026\ufe4e\054\ufe4e\074\ufe4e\120\ufe4e\140\ufe4e\164" +
    "\ufe4e\166\ufe4e\172\ufe4e\175\ufe4e\176\ufe4e\203\ufe4e\210\ufe4e" +
    "\223\ufe4e\224\ufe4e\226\ufe4e\231\ufe4e\235\ufe4e\251\ufe4e\303" +
    "\ufe4e\304\ufe4e\347\ufe4e\u0133\ufe4e\u0148\ufe4e\u0149\ufe4e\u014a\ufe4e" +
    "\u014b\ufe4e\u014e\ufe4e\u0152\ufe4e\u0153\ufe4e\u0159\ufe4e\u0161\ufe4e\001" +
    "\002\000\010\u0140\u0103\u015e\u0101\u0161\u0100\001\002\000\004" +
    "\u0153\u0213\001\002\000\010\u0140\u0103\u015e\u0101\u0161\u0100\001" +
    "\002\000\004\u0153\u0215\001\002\000\010\u0140\u0103\u015e\u0101" +
    "\u0161\u0100\001\002\000\004\u0159\u0217\001\002\000\110\002" +
    "\ufe5f\013\ufe5f\016\ufe5f\017\ufe5f\026\ufe5f\054\ufe5f\074\ufe5f" +
    "\120\ufe5f\140\ufe5f\164\ufe5f\166\ufe5f\172\ufe5f\175\ufe5f\176" +
    "\ufe5f\203\ufe5f\210\ufe5f\223\ufe5f\224\ufe5f\226\ufe5f\231\ufe5f" +
    "\235\ufe5f\251\ufe5f\303\ufe5f\304\ufe5f\347\ufe5f\u0133\ufe5f\u0148" +
    "\ufe5f\u0149\ufe5f\u014a\ufe5f\u014b\ufe5f\u014e\ufe5f\u0152\ufe5f\u0153\ufe5f" +
    "\u0159\ufe5f\u0161\ufe5f\001\002\000\010\u0140\u0103\u015e\u0101\u0161" +
    "\u0100\001\002\000\006\164\u021a\u0159\ufe52\001\002\000\010" +
    "\u0140\u0103\u015e\u0101\u0161\u0100\001\002\000\004\u0159\u021c\001" +
    "\002\000\110\002\ufe5b\013\ufe5b\016\ufe5b\017\ufe5b\026\ufe5b" +
    "\054\ufe5b\074\ufe5b\120\ufe5b\140\ufe5b\164\ufe5b\166\ufe5b\172" +
    "\ufe5b\175\ufe5b\176\ufe5b\203\ufe5b\210\ufe5b\223\ufe5b\224\ufe5b" +
    "\226\ufe5b\231\ufe5b\235\ufe5b\251\ufe5b\303\ufe5b\304\ufe5b\347" +
    "\ufe5b\u0133\ufe5b\u0148\ufe5b\u0149\ufe5b\u014a\ufe5b\u014b\ufe5b\u014e\ufe5b" +
    "\u0152\ufe5b\u0153\ufe5b\u0159\ufe5b\u0161\ufe5b\001\002\000\004\u0159" +
    "\ufe53\001\002\000\034\002\ufeba\017\ufeba\054\ufeba\120\ufeba" +
    "\164\ufeba\172\ufeba\175\ufeba\176\ufeba\223\ufeba\304\ufeba\u0133" +
    "\ufeba\u0152\ufeba\u0153\ufeba\001\002\000\036\027\u0227\043\u022f" +
    "\104\u0223\111\u0221\157\u0230\217\u0220\220\u0222\265\u0226\274" +
    "\u0225\340\u022c\367\u022a\u010e\u0224\u012c\u0228\u0161\u022b\001\002" +
    "\000\034\023\uff26\072\uff26\250\uff26\251\uff26\252\uff26\u0106" +
    "\uff26\u013d\uff26\u013f\uff26\u0140\uff26\u0158\u0232\u0159\uff26\u015e\uff26" +
    "\u0161\uff26\001\002\000\034\023\uff26\072\uff26\250\uff26\251" +
    "\uff26\252\uff26\u0106\uff26\u013d\uff26\u013f\uff26\u0140\uff26\u0158\u0232" +
    "\u0159\uff26\u015e\uff26\u0161\uff26\001\002\000\034\023\uff26\072" +
    "\uff26\250\uff26\251\uff26\252\uff26\u0106\uff26\u013d\uff26\u013f\uff26" +
    "\u0140\uff26\u0158\u0232\u0159\uff26\u015e\uff26\u0161\uff26\001\002\000" +
    "\034\023\uff26\072\uff26\250\uff26\251\uff26\252\uff26\u0106\uff26" +
    "\u013d\uff26\u013f\uff26\u0140\uff26\u0158\u0232\u0159\uff26\u015e\uff26\u0161" +
    "\uff26\001\002\000\034\023\uff26\072\uff26\250\uff26\251\uff26" +
    "\252\uff26\u0106\uff26\u013d\uff26\u013f\uff26\u0140\uff26\u0158\u0232\u0159" +
    "\uff26\u015e\uff26\u0161\uff26\001\002\000\034\023\uff26\072\uff26" +
    "\250\uff26\251\uff26\252\uff26\u0106\uff26\u013d\uff26\u013f\uff26\u0140" +
    "\uff26\u0158\u0232\u0159\uff26\u015e\uff26\u0161\uff26\001\002\000\034" +
    "\023\uff26\072\uff26\250\uff26\251\uff26\252\uff26\u0106\uff26\u013d" +
    "\uff26\u013f\uff26\u0140\uff26\u0158\u0232\u0159\uff26\u015e\uff26\u0161\uff26" +
    "\001\002\000\034\023\uff26\072\uff26\250\uff26\251\uff26\252" +
    "\uff26\u0106\uff26\u013d\uff26\u013f\uff26\u0140\uff26\u0158\u0232\u0159\uff26" +
    "\u015e\uff26\u0161\uff26\001\002\000\034\023\uff26\072\uff26\250" +
    "\uff26\251\uff26\252\uff26\u0106\uff26\u013d\uff26\u013f\uff26\u0140\uff26" +
    "\u0158\u0232\u0159\uff26\u015e\uff26\u0161\uff26\001\002\000\110\002" +
    "\uff3f\013\uff3f\016\uff3f\017\uff3f\026\uff3f\054\uff3f\074\uff3f" +
    "\120\uff3f\140\uff3f\164\uff3f\166\uff3f\172\uff3f\175\uff3f\176" +
    "\uff3f\203\uff3f\210\uff3f\223\uff3f\224\uff3f\226\uff3f\231\uff3f" +
    "\235\uff3f\251\uff3f\303\uff3f\304\uff3f\347\uff3f\u0133\uff3f\u0148" +
    "\uff3f\u0149\uff3f\u014a\uff3f\u014b\uff3f\u014e\uff3f\u0152\uff3f\u0153\uff3f" +
    "\u0159\uff3f\u0161\uff3f\001\002\000\034\023\uff26\072\uff26\250" +
    "\uff26\251\uff26\252\uff26\u0106\uff26\u013d\uff26\u013f\uff26\u0140\uff26" +
    "\u0158\u0232\u0159\uff26\u015e\uff26\u0161\uff26\001\002\000\004\u0154" +
    "\u0245\001\002\000\034\023\uff26\072\uff26\250\uff26\251\uff26" +
    "\252\uff26\u0106\uff26\u013d\uff26\u013f\uff26\u0140\uff26\u0158\u0232\u0159" +
    "\uff26\u015e\uff26\u0161\uff26\001\002\000\032\023\uff3b\072\uff3b" +
    "\250\uff3b\251\uff3b\252\uff3b\u0106\uff3b\u013d\uff3b\u013f\uff3b\u0140" +
    "\uff3b\u0158\u023b\u015e\uff3b\u0161\uff3b\001\002\000\034\023\uff36" +
    "\072\uff36\250\uff36\251\uff36\252\uff36\u0106\uff36\u013d\uff36\u013f" +
    "\uff36\u0140\uff36\u0158\uff36\u0159\uff36\u015e\uff36\u0161\uff36\001\002" +
    "\000\034\023\uff26\072\uff26\250\uff26\251\uff26\252\uff26\u0106" +
    "\uff26\u013d\uff26\u013f\uff26\u0140\uff26\u0158\u0232\u0159\uff26\u015e\uff26" +
    "\u0161\uff26\001\002\000\034\023\uff26\072\uff26\250\uff26\251" +
    "\uff26\252\uff26\u0106\uff26\u013d\uff26\u013f\uff26\u0140\uff26\u0158\u0232" +
    "\u0159\uff26\u015e\uff26\u0161\uff26\001\002\000\034\023\uff31\072" +
    "\uff31\250\uff31\251\uff31\252\uff31\u0106\uff31\u013d\uff31\u013f\uff31" +
    "\u0140\uff31\u0158\uff31\u0159\uff31\u015e\uff31\u0161\uff31\001\002\000" +
    "\004\u013d\u0233\001\002\000\006\u0153\u0235\u0159\u0234\001\002" +
    "\000\034\023\uff24\072\uff24\250\uff24\251\uff24\252\uff24\u0106" +
    "\uff24\u013d\uff24\u013f\uff24\u0140\uff24\u0158\uff24\u0159\uff24\u015e\uff24" +
    "\u0161\uff24\001\002\000\004\u013d\u0237\001\002\000\034\023" +
    "\uff27\072\uff27\250\uff27\251\uff27\252\uff27\u0106\uff27\u013d\uff27" +
    "\u013f\uff27\u0140\uff27\u0158\uff27\u0159\uff27\u015e\uff27\u0161\uff27\001" +
    "\002\000\004\u0159\u0238\001\002\000\034\023\uff25\072\uff25" +
    "\250\uff25\251\uff25\252\uff25\u0106\uff25\u013d\uff25\u013f\uff25\u0140" +
    "\uff25\u0158\uff25\u0159\uff25\u015e\uff25\u0161\uff25\001\002\000\034" +
    "\023\uff29\072\uff29\250\uff29\251\uff29\252\uff29\u0106\uff29\u013d" +
    "\uff29\u013f\uff29\u0140\uff29\u0158\uff29\u0159\uff29\u015e\uff29\u0161\uff29" +
    "\001\002\000\032\023\041\072\043\250\044\251\176\252" +
    "\052\u0106\040\u013d\045\u013f\037\u0140\202\u0158\050\u015e\051" +
    "\u0161\177\001\002\000\004\u013d\u023c\001\002\000\004\u0159" +
    "\u023d\001\002\000\034\023\uff3c\072\uff3c\250\uff3c\251\uff3c" +
    "\252\uff3c\u0106\uff3c\u013d\uff3c\u013f\uff3c\u0140\uff3c\u0158\uff3c\u0159" +
    "\uff3c\u015e\uff3c\u0161\uff3c\001\002\000\110\002\uff3d\013\uff3d" +
    "\016\uff3d\017\uff3d\026\uff3d\054\uff3d\074\uff3d\120\uff3d\140" +
    "\uff3d\164\uff3d\166\uff3d\172\uff3d\175\uff3d\176\uff3d\203\uff3d" +
    "\210\uff3d\223\uff3d\224\uff3d\226\uff3d\231\uff3d\235\uff3d\251" +
    "\uff3d\303\uff3d\304\uff3d\347\uff3d\u0133\uff3d\u0148\uff3d\u0149\uff3d" +
    "\u014a\uff3d\u014b\uff3d\u014e\uff3d\u0152\uff3d\u0153\uff3d\u0159\uff3d\u0161" +
    "\uff3d\001\002\000\006\u0153\u0241\u0159\u0240\001\002\000\110" +
    "\002\uff38\013\uff38\016\uff38\017\uff38\026\uff38\054\uff38\074" +
    "\uff38\120\uff38\140\uff38\164\uff38\166\uff38\172\uff38\175\uff38" +
    "\176\uff38\203\uff38\210\uff38\223\uff38\224\uff38\226\uff38\231" +
    "\uff38\235\uff38\251\uff38\303\uff38\304\uff38\347\uff38\u0133\uff38" +
    "\u0148\uff38\u0149\uff38\u014a\uff38\u014b\uff38\u014e\uff38\u0152\uff38\u0153" +
    "\uff38\u0159\uff38\u0161\uff38\001\002\000\024\023\041\072\043" +
    "\250\044\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e" +
    "\051\001\002\000\110\002\uff3a\013\uff3a\016\uff3a\017\uff3a" +
    "\026\uff3a\054\uff3a\074\uff3a\120\uff3a\140\uff3a\164\uff3a\166" +
    "\uff3a\172\uff3a\175\uff3a\176\uff3a\203\uff3a\210\uff3a\223\uff3a" +
    "\224\uff3a\226\uff3a\231\uff3a\235\uff3a\251\uff3a\303\uff3a\304" +
    "\uff3a\347\uff3a\u0133\uff3a\u0148\uff3a\u0149\uff3a\u014a\uff3a\u014b\uff3a" +
    "\u014e\uff3a\u0152\uff3a\u0153\uff3a\u0159\uff3a\u0161\uff3a\001\002\000" +
    "\110\002\uff39\013\uff39\016\uff39\017\uff39\026\uff39\054\uff39" +
    "\074\uff39\120\uff39\140\uff39\164\uff39\166\uff39\172\uff39\175" +
    "\uff39\176\uff39\203\uff39\210\uff39\223\uff39\224\uff39\226\uff39" +
    "\231\uff39\235\uff39\251\uff39\303\uff39\304\uff39\347\uff39\u0133" +
    "\uff39\u0148\uff39\u0149\uff39\u014a\uff39\u014b\uff39\u014e\uff39\u0152\uff39" +
    "\u0153\uff39\u0159\uff39\u0161\uff39\001\002\000\034\023\uff2e\072" +
    "\uff2e\250\uff2e\251\uff2e\252\uff2e\u0106\uff2e\u013d\uff2e\u013f\uff2e" +
    "\u0140\uff2e\u0158\uff2e\u0159\uff2e\u015e\uff2e\u0161\uff2e\001\002\000" +
    "\004\u0161\u0247\001\002\000\034\023\uff37\072\uff37\250\uff37" +
    "\251\uff37\252\uff37\u0106\uff37\u013d\uff37\u013f\uff37\u0140\uff37\u0158" +
    "\uff37\u0159\uff37\u015e\uff37\u0161\uff37\001\002\000\034\023\uff35" +
    "\072\uff35\250\uff35\251\uff35\252\uff35\u0106\uff35\u013d\uff35\u013f" +
    "\uff35\u0140\uff35\u0158\uff35\u0159\uff35\u015e\uff35\u0161\uff35\001\002" +
    "\000\034\023\uff2b\072\uff2b\250\uff2b\251\uff2b\252\uff2b\u0106" +
    "\uff2b\u013d\uff2b\u013f\uff2b\u0140\uff2b\u0158\uff2b\u0159\uff2b\u015e\uff2b" +
    "\u0161\uff2b\001\002\000\034\023\uff30\072\uff30\250\uff30\251" +
    "\uff30\252\uff30\u0106\uff30\u013d\uff30\u013f\uff30\u0140\uff30\u0158\uff30" +
    "\u0159\uff30\u015e\uff30\u0161\uff30\001\002\000\034\023\uff34\072" +
    "\uff34\250\uff34\251\uff34\252\uff34\u0106\uff34\u013d\uff34\u013f\uff34" +
    "\u0140\uff34\u0158\uff34\u0159\uff34\u015e\uff34\u0161\uff34\001\002\000" +
    "\034\023\uff28\072\uff28\250\uff28\251\uff28\252\uff28\u0106\uff28" +
    "\u013d\uff28\u013f\uff28\u0140\uff28\u0158\uff28\u0159\uff28\u015e\uff28\u0161" +
    "\uff28\001\002\000\034\023\uff2c\072\uff2c\250\uff2c\251\uff2c" +
    "\252\uff2c\u0106\uff2c\u013d\uff2c\u013f\uff2c\u0140\uff2c\u0158\uff2c\u0159" +
    "\uff2c\u015e\uff2c\u0161\uff2c\001\002\000\034\023\uff2a\072\uff2a" +
    "\250\uff2a\251\uff2a\252\uff2a\u0106\uff2a\u013d\uff2a\u013f\uff2a\u0140" +
    "\uff2a\u0158\uff2a\u0159\uff2a\u015e\uff2a\u0161\uff2a\001\002\000\034" +
    "\023\uff2f\072\uff2f\250\uff2f\251\uff2f\252\uff2f\u0106\uff2f\u013d" +
    "\uff2f\u013f\uff2f\u0140\uff2f\u0158\uff2f\u0159\uff2f\u015e\uff2f\u0161\uff2f" +
    "\001\002\000\034\023\uff32\072\uff32\250\uff32\251\uff32\252" +
    "\uff32\u0106\uff32\u013d\uff32\u013f\uff32\u0140\uff32\u0158\uff32\u0159\uff32" +
    "\u015e\uff32\u0161\uff32\001\002\000\034\023\uff2d\072\uff2d\250" +
    "\uff2d\251\uff2d\252\uff2d\u0106\uff2d\u013d\uff2d\u013f\uff2d\u0140\uff2d" +
    "\u0158\uff2d\u0159\uff2d\u015e\uff2d\u0161\uff2d\001\002\000\034\023" +
    "\uff33\072\uff33\250\uff33\251\uff33\252\uff33\u0106\uff33\u013d\uff33" +
    "\u013f\uff33\u0140\uff33\u0158\uff33\u0159\uff33\u015e\uff33\u0161\uff33\001" +
    "\002\000\034\002\ufebc\017\ufebc\054\ufebc\120\ufebc\164\ufebc" +
    "\172\ufebc\175\ufebc\176\ufebc\223\ufebc\304\ufebc\u0133\ufebc\u0152" +
    "\ufebc\u0153\ufebc\001\002\000\034\002\ufebf\017\ufebf\054\ufebf" +
    "\120\ufebf\164\ufebf\172\ufebf\175\ufebf\176\ufebf\223\ufebf\304" +
    "\ufebf\u0133\ufebf\u0152\ufebf\u0153\ufebf\001\002\000\010\u0140\u0103" +
    "\u015e\u0101\u0161\u0100\001\002\000\004\u0159\u0256\001\002\000" +
    "\110\002\ufe60\013\ufe60\016\ufe60\017\ufe60\026\ufe60\054\ufe60" +
    "\074\ufe60\120\ufe60\140\ufe60\164\ufe60\166\ufe60\172\ufe60\175" +
    "\ufe60\176\ufe60\203\ufe60\210\ufe60\223\ufe60\224\ufe60\226\ufe60" +
    "\231\ufe60\235\ufe60\251\ufe60\303\ufe60\304\ufe60\347\ufe60\u0133" +
    "\ufe60\u0148\ufe60\u0149\ufe60\u014a\ufe60\u014b\ufe60\u014e\ufe60\u0152\ufe60" +
    "\u0153\ufe60\u0159\ufe60\u0161\ufe60\001\002\000\032\023\041\072" +
    "\043\250\044\251\176\252\052\u0106\040\u013d\045\u013f\037" +
    "\u0140\202\u0158\050\u015e\051\u0161\177\001\002\000\004\u0131" +
    "\u0257\001\002\000\110\002\ufe84\013\ufe84\016\ufe84\017\ufe84" +
    "\026\ufe84\054\ufe84\074\ufe84\120\ufe84\140\ufe84\164\ufe84\166" +
    "\ufe84\172\ufe84\175\ufe84\176\ufe84\203\ufe84\210\ufe84\223\ufe84" +
    "\224\ufe84\226\ufe84\231\ufe84\235\ufe84\251\ufe84\303\ufe84\304" +
    "\ufe84\347\ufe84\u0133\ufe84\u0148\ufe84\u0149\ufe84\u014a\ufe84\u014b\ufe84" +
    "\u014e\ufe84\u0152\ufe84\u0153\ufe84\u0159\ufe84\u0161\ufe84\001\002\000" +
    "\110\002\ufe86\013\ufe86\016\ufe86\017\ufe86\026\ufe86\054\ufe86" +
    "\074\ufe86\120\ufe86\140\ufe86\164\ufe86\166\ufe86\172\ufe86\175" +
    "\ufe86\176\ufe86\203\ufe86\210\ufe86\223\ufe86\224\ufe86\226\ufe86" +
    "\231\ufe86\235\ufe86\251\ufe86\303\ufe86\304\ufe86\347\ufe86\u0133" +
    "\ufe86\u0148\ufe86\u0149\ufe86\u014a\ufe86\u014b\ufe86\u014e\ufe86\u0152\ufe86" +
    "\u0153\ufe86\u0159\ufe86\u0161\ufe86\001\002\000\110\002\ufe85\013" +
    "\ufe85\016\ufe85\017\ufe85\026\ufe85\054\ufe85\074\ufe85\120\ufe85" +
    "\140\ufe85\164\ufe85\166\ufe85\172\ufe85\175\ufe85\176\ufe85\203" +
    "\ufe85\210\ufe85\223\ufe85\224\ufe85\226\ufe85\231\ufe85\235\ufe85" +
    "\251\ufe85\303\ufe85\304\ufe85\347\ufe85\u0133\ufe85\u0148\ufe85\u0149" +
    "\ufe85\u014a\ufe85\u014b\ufe85\u014e\ufe85\u0152\ufe85\u0153\ufe85\u0159\ufe85" +
    "\u0161\ufe85\001\002\000\004\u010d\u025d\001\002\000\032\023" +
    "\041\072\043\250\044\251\176\252\052\u0106\040\u013d\045" +
    "\u013f\037\u0140\202\u0158\050\u015e\051\u0161\177\001\002\000" +
    "\010\134\u025f\135\u0261\u0131\u0257\001\002\000\032\023\041" +
    "\072\043\250\044\251\176\252\052\u0106\040\u013d\045\u013f" +
    "\037\u0140\202\u0158\050\u015e\051\u0161\177\001\002\000\110" +
    "\002\ufe83\013\ufe83\016\ufe83\017\ufe83\026\ufe83\054\ufe83\074" +
    "\ufe83\120\ufe83\140\ufe83\164\ufe83\166\ufe83\172\ufe83\175\ufe83" +
    "\176\ufe83\203\ufe83\210\ufe83\223\ufe83\224\ufe83\226\ufe83\231" +
    "\ufe83\235\ufe83\251\ufe83\303\ufe83\304\ufe83\347\ufe83\u0133\ufe83" +
    "\u0148\ufe83\u0149\ufe83\u014a\ufe83\u014b\ufe83\u014e\ufe83\u0152\ufe83\u0153" +
    "\ufe83\u0159\ufe83\u0161\ufe83\001\002\000\110\002\ufe80\013\ufe80" +
    "\016\ufe80\017\ufe80\026\ufe80\054\ufe80\074\ufe80\120\ufe80\140" +
    "\ufe80\164\ufe80\166\ufe80\172\ufe80\175\ufe80\176\ufe80\203\ufe80" +
    "\210\ufe80\223\ufe80\224\ufe80\226\ufe80\231\ufe80\235\ufe80\251" +
    "\ufe80\303\ufe80\304\ufe80\347\ufe80\u0133\ufe80\u0148\ufe80\u0149\ufe80" +
    "\u014a\ufe80\u014b\ufe80\u014e\ufe80\u0152\ufe80\u0153\ufe80\u0159\ufe80\u0161" +
    "\ufe80\001\002\000\110\002\ufe81\013\ufe81\016\ufe81\017\ufe81" +
    "\026\ufe81\054\ufe81\074\ufe81\120\ufe81\140\ufe81\164\ufe81\166" +
    "\ufe81\172\ufe81\175\ufe81\176\ufe81\203\ufe81\210\ufe81\223\ufe81" +
    "\224\ufe81\226\ufe81\231\ufe81\235\ufe81\251\ufe81\303\ufe81\304" +
    "\ufe81\347\ufe81\u0133\ufe81\u0148\ufe81\u0149\ufe81\u014a\ufe81\u014b\ufe81" +
    "\u014e\ufe81\u0152\ufe81\u0153\ufe81\u0159\ufe81\u0161\ufe81\001\002\000" +
    "\004\135\u0264\001\002\000\110\002\ufe82\013\ufe82\016\ufe82" +
    "\017\ufe82\026\ufe82\054\ufe82\074\ufe82\120\ufe82\140\ufe82\164" +
    "\ufe82\166\ufe82\172\ufe82\175\ufe82\176\ufe82\203\ufe82\210\ufe82" +
    "\223\ufe82\224\ufe82\226\ufe82\231\ufe82\235\ufe82\251\ufe82\303" +
    "\ufe82\304\ufe82\347\ufe82\u0133\ufe82\u0148\ufe82\u0149\ufe82\u014a\ufe82" +
    "\u014b\ufe82\u014e\ufe82\u0152\ufe82\u0153\ufe82\u0159\ufe82\u0161\ufe82\001" +
    "\002\000\006\u0140\374\u015e\372\001\002\000\004\u0159\u0267" +
    "\001\002\000\110\002\ufe4f\013\ufe4f\016\ufe4f\017\ufe4f\026" +
    "\ufe4f\054\ufe4f\074\ufe4f\120\ufe4f\140\ufe4f\164\ufe4f\166\ufe4f" +
    "\172\ufe4f\175\ufe4f\176\ufe4f\203\ufe4f\210\ufe4f\223\ufe4f\224" +
    "\ufe4f\226\ufe4f\231\ufe4f\235\ufe4f\251\ufe4f\303\ufe4f\304\ufe4f" +
    "\347\ufe4f\u0133\ufe4f\u0148\ufe4f\u0149\ufe4f\u014a\ufe4f\u014b\ufe4f\u014e" +
    "\ufe4f\u0152\ufe4f\u0153\ufe4f\u0159\ufe4f\u0161\ufe4f\001\002\000\024" +
    "\023\041\072\043\250\044\252\052\u0106\040\u013d\045\u013f" +
    "\037\u0158\050\u015e\051\001\002\000\004\u0159\u026a\001\002" +
    "\000\110\002\ufe5d\013\ufe5d\016\ufe5d\017\ufe5d\026\ufe5d\054" +
    "\ufe5d\074\ufe5d\120\ufe5d\140\ufe5d\164\ufe5d\166\ufe5d\172\ufe5d" +
    "\175\ufe5d\176\ufe5d\203\ufe5d\210\ufe5d\223\ufe5d\224\ufe5d\226" +
    "\ufe5d\231\ufe5d\235\ufe5d\251\ufe5d\303\ufe5d\304\ufe5d\347\ufe5d" +
    "\u0133\ufe5d\u0148\ufe5d\u0149\ufe5d\u014a\ufe5d\u014b\ufe5d\u014e\ufe5d\u0152" +
    "\ufe5d\u0153\ufe5d\u0159\ufe5d\u0161\ufe5d\001\002\000\010\u0140\u0103" +
    "\u015e\u0101\u0161\u0100\001\002\000\004\u0153\u026d\001\002\000" +
    "\024\023\041\072\043\250\044\252\052\u0106\040\u013d\045" +
    "\u013f\037\u0158\050\u015e\051\001\002\000\004\u0153\u026f\001" +
    "\002\000\024\023\041\072\043\250\044\252\052\u0106\040" +
    "\u013d\045\u013f\037\u0158\050\u015e\051\001\002\000\004\u0159" +
    "\u0271\001\002\000\110\002\ufe57\013\ufe57\016\ufe57\017\ufe57" +
    "\026\ufe57\054\ufe57\074\ufe57\120\ufe57\140\ufe57\164\ufe57\166" +
    "\ufe57\172\ufe57\175\ufe57\176\ufe57\203\ufe57\210\ufe57\223\ufe57" +
    "\224\ufe57\226\ufe57\231\ufe57\235\ufe57\251\ufe57\303\ufe57\304" +
    "\ufe57\347\ufe57\u0133\ufe57\u0148\ufe57\u0149\ufe57\u014a\ufe57\u014b\ufe57" +
    "\u014e\ufe57\u0152\ufe57\u0153\ufe57\u0159\ufe57\u0161\ufe57\001\002\000" +
    "\032\023\041\072\043\250\044\251\176\252\052\u0106\040" +
    "\u013d\045\u013f\037\u0140\202\u0158\050\u015e\051\u0161\177\001" +
    "\002\000\110\002\uff40\013\uff40\016\uff40\017\uff40\026\uff40" +
    "\054\uff40\074\uff40\120\uff40\140\uff40\164\uff40\166\uff40\172" +
    "\uff40\175\uff40\176\uff40\203\uff40\210\uff40\223\uff40\224\uff40" +
    "\226\uff40\231\uff40\235\uff40\251\uff40\303\uff40\304\uff40\347" +
    "\uff40\u0133\uff40\u0148\uff40\u0149\uff40\u014a\uff40\u014b\uff40\u014e\uff40" +
    "\u0152\uff40\u0153\uff40\u0159\uff40\u0161\uff40\001\002\000\004\016" +
    "\u0275\001\002\000\036\027\u0227\043\u022f\104\u0223\111\u0221" +
    "\157\u0230\217\u0220\220\u0222\265\u0226\274\u0225\340\u022c\367" +
    "\u022a\u010e\u0224\u012c\u0228\u0161\u022b\001\002\000\006\u0158\u023b" +
    "\u0159\uff3b\001\002\000\004\u0159\u0278\001\002\000\110\002" +
    "\uff3e\013\uff3e\016\uff3e\017\uff3e\026\uff3e\054\uff3e\074\uff3e" +
    "\120\uff3e\140\uff3e\164\uff3e\166\uff3e\172\uff3e\175\uff3e\176" +
    "\uff3e\203\uff3e\210\uff3e\223\uff3e\224\uff3e\226\uff3e\231\uff3e" +
    "\235\uff3e\251\uff3e\303\uff3e\304\uff3e\347\uff3e\u0133\uff3e\u0148" +
    "\uff3e\u0149\uff3e\u014a\uff3e\u014b\uff3e\u014e\uff3e\u0152\uff3e\u0153\uff3e" +
    "\u0159\uff3e\u0161\uff3e\001\002\000\024\023\041\072\043\250" +
    "\044\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e\051" +
    "\001\002\000\004\u0159\u027b\001\002\000\110\002\ufe58\013" +
    "\ufe58\016\ufe58\017\ufe58\026\ufe58\054\ufe58\074\ufe58\120\ufe58" +
    "\140\ufe58\164\ufe58\166\ufe58\172\ufe58\175\ufe58\176\ufe58\203" +
    "\ufe58\210\ufe58\223\ufe58\224\ufe58\226\ufe58\231\ufe58\235\ufe58" +
    "\251\ufe58\303\ufe58\304\ufe58\347\ufe58\u0133\ufe58\u0148\ufe58\u0149" +
    "\ufe58\u014a\ufe58\u014b\ufe58\u014e\ufe58\u0152\ufe58\u0153\ufe58\u0159\ufe58" +
    "\u0161\ufe58\001\002\000\004\002\001\001\002\000\004\364" +
    "\u0284\001\002\000\006\172\ufe46\u0152\ufe46\001\002\000\004" +
    "\u0158\u02a4\001\002\000\006\172\u02a2\u0152\u02a1\001\002\000" +
    "\004\u0161\u0282\001\002\000\004\364\u0284\001\002\000\006" +
    "\172\ufe42\u0152\ufe42\001\002\000\006\u015e\u0288\u0161\021\001" +
    "\002\000\016\164\u0299\172\ufed3\312\155\u0133\u0296\u0152\ufed3" +
    "\u0153\u0297\001\002\000\006\172\ufe41\u0152\ufe41\001\002\000" +
    "\004\u014c\u028e\001\002\000\004\u0161\u0289\001\002\000\004" +
    "\u014c\u028a\001\002\000\032\023\041\072\043\250\044\251" +
    "\176\252\052\u0106\040\u013d\045\u013f\037\u0140\202\u0158\050" +
    "\u015e\051\u0161\177\001\002\000\016\164\ufe38\172\ufe38\312" +
    "\ufe38\u0133\ufe38\u0152\ufe38\u0153\ufe38\001\002\000\016\164\ufe3e" +
    "\172\ufe3e\312\ufe3e\u0133\ufe3e\u0152\ufe3e\u0153\ufe3e\001\002\000" +
    "\016\164\ufe3f\172\ufe3f\312\ufe3f\u0133\ufe3f\u0152\ufe3f\u0153\ufe3f" +
    "\001\002\000\036\023\041\072\043\113\u0292\250\044\251" +
    "\176\252\052\253\u0293\u0106\040\u013d\045\u013f\037\u0140\202" +
    "\u0158\050\u015e\051\u0161\177\001\002\000\016\164\ufe3d\172" +
    "\ufe3d\312\ufe3d\u0133\ufe3d\u0152\ufe3d\u0153\ufe3d\001\002\000\016" +
    "\164\ufe3c\172\ufe3c\312\ufe3c\u0133\ufe3c\u0152\ufe3c\u0153\ufe3c\001" +
    "\002\000\042\164\ufe3b\172\ufe3b\312\ufe3b\u0133\ufe3b\u0143\214" +
    "\u0144\215\u0145\221\u0146\217\u0147\223\u0148\226\u0149\222\u014a" +
    "\216\u014b\211\u014e\212\u0152\ufe3b\u0153\ufe3b\001\002\000\016" +
    "\164\ufe3a\172\ufe3a\312\ufe3a\u0133\ufe3a\u0152\ufe3a\u0153\ufe3a\001" +
    "\002\000\016\164\ufe39\172\ufe39\312\ufe39\u0133\ufe39\u0152\ufe39" +
    "\u0153\ufe39\001\002\000\006\172\ufe36\u0152\ufe36\001\002\000" +
    "\006\172\ufe40\u0152\ufe40\001\002\000\104\023\uff7c\040\uff7c" +
    "\041\uff7c\043\uff7c\065\uff7c\070\uff7c\072\uff7c\100\uff7c\105" +
    "\uff7c\161\uff7c\231\uff7c\244\uff7c\246\u014b\250\uff7c\251\u014a" +
    "\252\uff7c\256\uff7c\260\uff7c\265\uff7c\266\uff7c\347\uff7c\363" +
    "\uff7c\364\uff7c\373\uff7c\u0105\uff7c\u0106\uff7c\u0109\uff7c\u0119\uff7c" +
    "\u011b\uff7c\u0125\uff7c\u0138\uff7c\u0158\u014f\u0161\uff7c\001\002\000" +
    "\006\u015e\u0288\u0161\021\001\002\000\012\164\u0299\172\ufe30" +
    "\u0133\u0296\u0152\ufe30\001\002\000\014\273\u0135\276\u0137\u0158" +
    "\u0139\u015e\u013a\u0161\021\001\002\000\006\172\ufe32\u0152\ufe32" +
    "\001\002\000\006\172\ufe34\u0152\ufe34\001\002\000\010\172" +
    "\ufe30\u0133\u0296\u0152\ufe30\001\002\000\006\172\ufe33\u0152\ufe33" +
    "\001\002\000\006\172\ufe35\u0152\ufe35\001\002\000\006\172" +
    "\ufe37\u0152\ufe37\001\002\000\006\172\ufe31\u0152\ufe31\001\002" +
    "\000\004\002\ufe2e\001\002\000\004\002\ufe2f\001\002\000" +
    "\004\002\ufe48\001\002\000\024\023\041\072\043\250\044" +
    "\252\052\u0106\040\u013d\045\u013f\037\u0158\050\u015e\051\001" +
    "\002\000\004\u0159\u02a6\001\002\000\010\307\u02a7\u015e\ufe44" +
    "\u0161\ufe44\001\002\000\006\u015e\ufe45\u0161\ufe45\001\002\000" +
    "\006\u015e\u0281\u0161\021\001\002\000\006\172\ufe47\u0152\ufe47" +
    "\001\002\000\006\172\ufe43\u0152\ufe43\001\002\000\014\103" +
    "\u02af\205\u02ae\u010b\u02b0\u0127\u02b2\u012f\u02b1\001\002\000\004" +
    "\145\u02ad\001\002\000\014\103\uffea\205\uffea\u010b\uffea\u0127" +
    "\uffea\u012f\uffea\001\002\000\004\u0161\021\001\002\000\004" +
    "\u0161\u02bf\001\002\000\004\u0161\021\001\002\000\004\u0161" +
    "\021\001\002\000\004\u0161\u02b4\001\002\000\004\002\ufff0" +
    "\001\002\000\004\002\uffed\001\002\000\010\172\u02bb\u0152" +
    "\u02b7\u0153\u02b8\001\002\000\004\002\uffec\001\002\000\004" +
    "\002\uffdf\001\002\000\004\u0161\021\001\002\000\004\002" +
    "\uffe6\001\002\000\004\002\uffe8\001\002\000\004\002\uffde" +
    "\001\002\000\004\002\uffe7\001\002\000\004\002\uffef\001" +
    "\002\000\004\002\uffee\001\002\000\010\172\u02bb\u0152\u02b7" +
    "\u0153\u02c0\001\002\000\004\u0161\u02bf\001\002\000\004\002" +
    "\uffe3\001\002\000\004\002\uffe5\001\002\000\004\002\uffe4" +
    "\001\002\000\012\172\u02bb\270\u02c7\u0152\u02b7\u0153\u02c8\001" +
    "\002\000\004\002\uffeb\001\002\000\004\002\uffe0\001\002" +
    "\000\004\u0161\021\001\002\000\004\u0161\021\001\002\000" +
    "\004\002\uffe2\001\002\000\004\002\uffdc\001\002\000\004" +
    "\002\uffdd\001\002\000\010\172\u02bb\u0152\u02b7\u0153\u02c8\001" +
    "\002\000\004\002\uffe1\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02cb\000\014\002\005\264\010\306\007\323\013\360" +
    "\012\001\001\000\004\362\u02aa\001\001\000\010\006\u027c" +
    "\324\u027f\326\u027d\001\001\000\002\001\001\000\006\265" +
    "\316\266\315\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\006\015\307\014\311\022\312\021\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\170\161\174\157\264\163\313\162\314\160\315\156\001" +
    "\001\000\002\001\001\000\006\006\015\312\034\001\001" +
    "\000\004\007\023\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\026" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\031\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\012\041\014\046\016" +
    "\045\025\052\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\015\101\001\001" +
    "\000\004\013\074\001\001\000\012\012\070\014\046\016" +
    "\045\025\052\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\036\056\037\057\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\012\061\014\046\016\045\025\052\040\060\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\041\063\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\014\077\016\045\025\052\001\001\000" +
    "\010\014\075\016\045\025\052\001\001\000\002\001\001" +
    "\000\004\013\076\001\001\000\002\001\001\000\004\013" +
    "\100\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\016\106\025\052\001\001\000\006\016\104\025\052\001" +
    "\001\000\004\015\105\001\001\000\002\001\001\000\004" +
    "\015\107\001\001\000\002\001\001\000\006\036\111\037" +
    "\057\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\032\115\033\116\001\001\000\002\001\001\000\002\001" +
    "\001\000\014\012\120\014\046\016\045\025\052\034\123" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\035\125\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\006\015\310\131\311\133\312\021\001\001" +
    "\000\002\001\001\000\010\006\015\311\134\312\021\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\026\137" +
    "\027\141\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\012\142\014\046\016\045\025\052" +
    "\030\143\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\145\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\036\152\037" +
    "\057\001\001\000\002\001\001\000\002\001\001\000\020" +
    "\012\264\014\046\016\045\025\052\164\266\165\265\u0115" +
    "\270\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\170\161\264\163\314\261\315\156\001\001\000\002\001" +
    "\001\000\006\264\163\315\260\001\001\000\002\001\001" +
    "\000\004\317\257\001\001\000\002\001\001\000\004\175" +
    "\167\001\001\000\004\176\172\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\175\173\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\012\204\014\046\016\045" +
    "\025\052\042\202\044\200\053\203\316\207\320\177\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\321\244" +
    "\001\001\000\004\050\241\001\001\000\002\001\001\000" +
    "\002\001\001\000\020\012\204\014\046\016\045\025\052" +
    "\042\232\044\200\053\203\001\001\000\012\043\223\047" +
    "\224\050\217\054\212\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\012\226\014\046\016\045\025\052\045\230\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\046" +
    "\235\054\233\055\237\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\044\242\001\001\000\002" +
    "\001\001\000\006\317\252\322\247\001\001\000\002\001" +
    "\001\000\024\012\204\014\046\016\045\025\052\042\202" +
    "\044\200\053\203\316\246\320\177\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\024\012\204\014\046\016\045\025\052\042\202\044\200" +
    "\053\203\316\256\320\177\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\317\263\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\166\307\001\001\000\004\171\275\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u0116\272\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\172\277\001\001\000\002\001\001\000" +
    "\006\173\305\174\304\001\001\000\002\001\001\000\006" +
    "\173\303\174\304\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\167\312\001\001\000\020\012\264\014\046\016" +
    "\045\025\052\164\313\165\265\u0115\270\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\040\012" +
    "\204\014\046\016\045\017\356\025\340\042\327\044\200" +
    "\053\203\056\332\115\330\120\350\154\344\155\335\267" +
    "\342\272\341\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\012\204\014\046" +
    "\016\045\025\052\042\u0257\044\200\053\203\057\u0259\060" +
    "\u0258\001\001\000\002\001\001\000\004\161\u0252\001\001" +
    "\000\004\161\u0251\001\001\000\002\001\001\000\004\161" +
    "\u021d\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\161" +
    "\u0207\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\270\u0200\001\001\000\020\273\u0120\275\u011d\276\u011b\277" +
    "\u011a\300\u0119\301\u0117\305\u0124\001\001\000\002\001\001" +
    "\000\004\156\u010b\001\001\000\002\001\001\000\004\161" +
    "\u010a\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\161" +
    "\361\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\117\366\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\116\372\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\121\u0101\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\121\u0106\001\001\000" +
    "\002\001\001\000\012\012\u0108\014\046\016\045\025\052" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\157\u0110\001\001\000\022" +
    "\012\204\014\046\016\045\025\052\042\u010f\044\200\053" +
    "\203\162\u010e\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\161\u0113\001" +
    "\001\000\002\001\001\000\012\012\u0115\014\046\016\045" +
    "\025\052\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\071\u01fd\072\u014c\106\u014b\112\u0148" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\006\u01fa\274\u01fb\001\001\000\002\001\001" +
    "\000\012\071\u01f8\072\u014c\106\u014b\112\u0148\001\001\000" +
    "\036\012\204\014\046\016\045\017\356\025\340\042\327" +
    "\044\200\053\203\056\332\115\330\120\350\154\344\155" +
    "\335\272\u01f7\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\006\u0135\127\u0133\137\u0137\144\u013a\001\001\000" +
    "\002\001\001\000\002\001\001\000\036\012\204\014\046" +
    "\016\045\017\356\025\340\042\327\044\200\053\203\056" +
    "\332\115\330\120\350\147\u0127\154\u0126\155\335\001\001" +
    "\000\010\150\u012e\151\u012d\153\u012c\001\001\000\002\001" +
    "\001\000\004\152\u0130\001\001\000\002\001\001\000\036" +
    "\012\204\014\046\016\045\017\356\025\340\042\327\044" +
    "\200\053\203\056\332\115\330\120\350\147\u012f\154\u0126" +
    "\155\335\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\153\u0132\001\001\000\002\001\001\000" +
    "\004\145\u01ef\001\001\000\002\001\001\000\004\145\u01df" +
    "\001\001\000\002\001\001\000\012\276\u01d9\277\u011a\300" +
    "\u0119\301\u0117\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\133\u0144\134\u0141\135\u0140\140\u0143\001\001\000" +
    "\002\001\001\000\004\136\u01d1\001\001\000\004\136\u01d0" +
    "\001\001\000\002\001\001\000\004\136\u01cc\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\006\u0135\127\u0133\142\u0145\144\u0146\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\071\u014d" +
    "\072\u014c\106\u014b\112\u0148\001\001\000\024\006\u0159\017" +
    "\u0166\025\u015f\056\u0157\074\u01c7\075\u015a\115\u0155\120\u0165" +
    "\123\u0162\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\073\u01b3\001\001\000\014\133\u01ae" +
    "\134\u0141\135\u0140\141\u01ad\143\u01ac\001\001\000\006\106" +
    "\u014f\112\u0148\001\001\000\002\001\001\000\004\107\u0151" +
    "\001\001\000\002\001\001\000\030\006\u0159\017\u0166\025" +
    "\u015f\056\u0157\074\u0160\075\u015a\110\u0154\111\u0153\115\u0155" +
    "\120\u0165\123\u0162\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\026\006\u0159\017\u0166\025\u015f\056\u0157\074\u0160\075" +
    "\u015a\111\u01a2\115\u0155\120\u0165\123\u0162\001\001\000\002" +
    "\001\001\000\006\054\u0180\076\u0182\001\001\000\002\001" +
    "\001\000\006\106\u0175\112\u0148\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\107\u0174\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\007\023" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\012\204\014\046\016\045\025\052\042\u0168" +
    "\044\200\053\203\001\001\000\002\001\001\000\020\012" +
    "\204\014\046\016\045\025\052\042\u016a\044\200\053\203" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u016f\103\u016d\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\071\u0172\072\u014c\104\u0171\106" +
    "\u014b\112\u0148\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\107\u0177\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\u017a\001\001\000\004\126\u017b\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\036" +
    "\012\204\014\046\016\045\017\356\025\340\042\327\044" +
    "\200\053\203\056\332\115\330\120\350\147\u017f\154\u0126" +
    "\155\335\001\001\000\002\001\001\000\022\006\u0159\017" +
    "\u0166\025\u015f\056\u0157\075\u01a1\115\u0155\120\u0165\123\u0162" +
    "\001\001\000\022\006\u0159\017\u0166\025\u015f\056\u0157\075" +
    "\u019f\115\u0155\120\u0165\123\u0162\001\001\000\002\001\001" +
    "\000\022\006\u0159\017\u0166\025\u015f\056\u0157\075\u019c\115" +
    "\u0155\120\u0165\123\u0162\001\001\000\004\077\u0191\001\001" +
    "\000\022\006\u0159\017\u0166\025\u015f\056\u0157\075\u018a\115" +
    "\u0155\120\u0165\123\u0162\001\001\000\004\100\u0188\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\102\u018b\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\006\u0159\017\u0166\025\u015f\056" +
    "\u0157\075\u019a\115\u0155\120\u0165\123\u0162\001\001\000\022" +
    "\006\u0159\017\u0166\025\u015f\056\u0157\075\u0195\115\u0155\120" +
    "\u0165\123\u0162\001\001\000\022\006\u0159\017\u0166\025\u015f" +
    "\056\u0157\075\u0192\115\u0155\120\u0165\123\u0162\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\006\u0159\017\u0166" +
    "\025\u015f\056\u0157\075\u0194\115\u0155\120\u0165\123\u0162\001" +
    "\001\000\002\001\001\000\004\101\u0197\001\001\000\022" +
    "\006\u0159\017\u0166\025\u015f\056\u0157\075\u0198\115\u0155\120" +
    "\u0165\123\u0162\001\001\000\002\001\001\000\004\101\u0199" +
    "\001\001\000\002\001\001\000\004\102\u019b\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\006\u0159\017\u0166" +
    "\025\u015f\056\u0157\075\u019e\115\u0155\120\u0165\123\u0162\001" +
    "\001\000\002\001\001\000\004\101\u01a0\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u016f\103\u01a4\001\001\000\002\001\001\000\004\105\u01a8" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\012\006\u0135\127" +
    "\u0133\142\u01af\144\u0146\001\001\000\002\001\001\000\014" +
    "\133\u01ae\134\u0141\135\u0140\141\u01ad\143\u01b1\001\001\000" +
    "\002\001\001\000\012\071\u01b4\072\u014c\106\u014b\112\u0148" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\113" +
    "\u01b7\001\001\000\004\114\u01bb\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\107\u01c8\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\133\u01ae\134\u0141\135\u0140\141\u01ad\143\u01cf\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\145\u01d5\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\130\u01e2\146\u01e1\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\012\u01e4\014" +
    "\046\016\045\025\052\131\u01e5\001\001\000\004\132\u01e9" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\020\012\204\014\046" +
    "\016\045\025\052\042\u01f1\044\200\053\203\001\001\000" +
    "\004\303\u01f3\001\001\000\020\012\204\014\046\016\045" +
    "\025\052\042\u01f5\044\200\053\203\001\001\000\006\300" +
    "\u01f4\301\u0117\001\001\000\002\001\001\000\004\303\u01f6" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\301" +
    "\u01f9\001\001\000\002\001\001\000\014\275\u01fc\276\u011b" +
    "\277\u011a\300\u0119\301\u0117\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\277\u01fe\300\u0119\301\u0117\001\001" +
    "\000\002\001\001\000\012\012\u0201\014\046\016\045\025" +
    "\052\001\001\000\002\001\001\000\002\001\001\000\040" +
    "\012\204\014\046\016\045\017\356\025\340\042\327\044" +
    "\200\053\203\056\332\115\330\120\350\154\344\155\335" +
    "\271\u0205\272\u0204\001\001\000\036\012\204\014\046\016" +
    "\045\017\356\025\340\042\327\044\200\053\203\056\332" +
    "\115\330\120\350\154\344\155\335\272\u0206\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\121\u0209\001\001\000\002\001\001\000" +
    "\012\012\u020b\014\046\016\045\025\052\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\116\u020e\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\121\u0211\001\001" +
    "\000\002\001\001\000\004\121\u0213\001\001\000\002\001" +
    "\001\000\004\121\u0215\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\121\u0218\001\001\000\004\122\u021a\001" +
    "\001\000\004\121\u021c\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\021" +
    "\u0228\063\u022c\066\u022d\001\001\000\004\067\u0250\001\001" +
    "\000\004\067\u024f\001\001\000\004\067\u024e\001\001\000" +
    "\004\067\u024d\001\001\000\004\067\u024c\001\001\000\004" +
    "\067\u024b\001\001\000\004\067\u024a\001\001\000\004\067" +
    "\u0249\001\001\000\004\067\u0248\001\001\000\002\001\001" +
    "\000\004\067\u0247\001\001\000\004\065\u0245\001\001\000" +
    "\004\067\u0243\001\001\000\004\022\u0239\001\001\000\002" +
    "\001\001\000\004\067\u0238\001\001\000\004\067\u0230\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\070\u0235" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\012\204\014\046\016\045\023\u023d\025\052\042" +
    "\u023e\044\200\053\203\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\024" +
    "\u0241\001\001\000\002\001\001\000\012\012\u0242\014\046" +
    "\016\045\025\052\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\121\u0254\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\012\204\014\046\016\045\025\052\042\u025b" +
    "\044\200\053\203\001\001\000\004\060\u025a\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\012\204\014\046\016\045\025\052\042" +
    "\u025d\044\200\053\203\001\001\000\006\060\u0261\061\u025f" +
    "\001\001\000\020\012\204\014\046\016\045\025\052\042" +
    "\u0262\044\200\053\203\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\116\u0265\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\012\u0268\014\046\016\045\025\052\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\121\u026b" +
    "\001\001\000\002\001\001\000\012\012\u026d\014\046\016" +
    "\045\025\052\001\001\000\002\001\001\000\012\012\u026f" +
    "\014\046\016\045\025\052\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\012\204\014\046\016\045\020\u0272" +
    "\025\052\042\u0273\044\200\053\203\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\063\u0275\066\u022d\001\001" +
    "\000\004\022\u0276\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\012\u0279\014\046\016\045\025\052\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\327\u02a9\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\342\u02a2\001\001\000\002\001\001\000\004\327" +
    "\u0282\001\001\000\002\001\001\000\010\006\u0286\330\u0285" +
    "\331\u0284\001\001\000\014\170\u0297\336\u0294\337\u0293\343" +
    "\u029a\344\u0299\001\001\000\002\001\001\000\004\332\u028c" +
    "\001\001\000\002\001\001\000\002\001\001\000\022\012" +
    "\204\014\046\016\045\025\052\042\u028a\044\200\053\203" +
    "\335\u028b\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\022\012\u0290\014\046\016\045\025\052" +
    "\042\u028f\044\200\053\203\334\u028e\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\043\223\047\224\050\217" +
    "\054\212\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\071\u029f\072\u014c" +
    "\106\u014b\112\u0148\001\001\000\010\006\u0286\330\u029e\331" +
    "\u0284\001\001\000\006\343\u029d\344\u0299\001\001\000\012" +
    "\006\u0135\127\u0133\137\u029b\144\u013a\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\344\u029c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\012\u02a4\014\046\016\045\025\052\001\001\000" +
    "\002\001\001\000\004\325\u02a7\001\001\000\002\001\001" +
    "\000\006\006\u027c\326\u02a8\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\361\u02b2\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\u02c3\367\u02c4\001\001\000" +
    "\004\365\u02bd\001\001\000\006\006\u02b4\363\u02bc\001\001" +
    "\000\006\006\u02b4\363\u02b5\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\364\u02b9\372\u02b8" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\u02b4\363\u02bb\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\366\u02c1\372\u02c0\001\001\000\004" +
    "\365\u02c2\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\370\u02c8\372\u02c9\373\u02c5\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\006\u02cb\001" +
    "\001\000\006\006\u02c3\367\u02ca\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\372\u02c9\373" +
    "\u02cc\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$MiniSQL$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$MiniSQL$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$MiniSQL$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    /* Reporte de error encontrado. */
    public void report_error (String message, Object info) {
        StringBuilder m = new StringBuilder ("Error");
        if  (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s =  ( (java_cup.runtime.Symbol) info);
            m.append (" " + s.value.toString ());
            if  (s.left >= 0) {                
                m.append (" in line "+ (s.left));
                if  (s.right >= 0)
                    m.append (", column "+ (s.right));
            }
        }
        m.append (" : "+message);
        System.err.println (m);
    }
   
    /* Cuando se encuentra un error de donde el sistema no puede
        recuperarse, se lanza un error fatal. Se despliega el mensaje
        de error y se finaliza la ejecucion. */
    public void report_fatal_error (String message, Object info) {
        report_error (message, info);
        System.exit (1);
    }

    /* Metodo main para garantizar la ejecucion del analizador
       lexico y sintactico, ademas que se pase como parametro la tabla
       de simbolos correspondiente. */
    public static void main (String[] args){
        try {
             MiniSQL asin = new MiniSQL (
                    new Lexer ( new FileReader (args[0])));
            Object result = asin.parse ().value;
            System.out.println ("\n*** Resultados finales ***");
        } catch  (Exception ex) {
            ex.printStackTrace ();
        }
    }


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$MiniSQL$actions {
  private final MiniSQL parser;

  /** Constructor */
  CUP$MiniSQL$actions(MiniSQL parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$MiniSQL$do_action_part00000000(
    int                        CUP$MiniSQL$act_num,
    java_cup.runtime.lr_parser CUP$MiniSQL$parser,
    java.util.Stack            CUP$MiniSQL$stack,
    int                        CUP$MiniSQL$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MiniSQL$result;

      /* select the action based on the action number */
      switch (CUP$MiniSQL$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)).value;
		RESULT = start_val;
              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$MiniSQL$parser.done_parsing();
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= SELECT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIO ::= INSERT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= UPDATE0 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIO ::= DROP1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // TRUNCATEP ::= TRUNCATE TABLE OBJECT TRUNCATE1 TRUNCATE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATEP",1, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // TRUNCATE1 ::= Coma OBJECT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATE1",2, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // TRUNCATE1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATE1",2, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // TRUNCATE2 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATE2",3, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // TRUNCATE2 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TRUNCATE2",3, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // OBJECT ::= Identificador OBJECT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT",4, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // OBJECT1 ::= Punto Identificador OBJECT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT1",5, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // OBJECT1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT1",5, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // OBJECT2 ::= Punto Identificador OBJECT3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT2",6, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // OBJECT2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT2",6, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // OBJECT3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT3",7, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // OBJECT3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OBJECT3",7, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // DROP1 ::= DROP DROP3 DROP2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP1",238, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // DROP2 ::= TABLE DROP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // DROP2 ::= DATABASE DROP6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // DROP2 ::= USER Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // DROP2 ::= VIEW DROP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // DROP2 ::= INDEX DROP8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP2",239, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // DROP3 ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP3",240, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // DROP3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP3",240, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // DROP4 ::= OBJECT DROP5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP4",241, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // DROP5 ::= Coma DROP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP5",242, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // DROP5 ::= DROP11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP5",242, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // DROP6 ::= Identificador DROP7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP6",243, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // DROP7 ::= Coma DROP6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP7",244, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // DROP7 ::= DROP11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP7",244, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // DROP8 ::= OBJECT DROP9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP8",245, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // DROP9 ::= ON OBJECT DROP12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP9",246, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // DROP9 ::= DROP12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP9",246, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // DROP11 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP11",248, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // DROP11 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP11",248, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // DROP12 ::= Coma DROP8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP12",249, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // DROP12 ::= DROP11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DROP12",249, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // ALTER1 ::= ALTER ALTER2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER1",250, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // ALTER2 ::= VIEW ALTER2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER2",251, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // ALTER2 ::= TABLE OBJECT ALTER7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER2",251, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // ALTER2 ::= USER Identificador ALTER18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER2",251, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // ALTER2 ::= DATABASE ALTER23 ALTER24 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER2",251, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ALTER3 ::= Identificador ALTER4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER3",252, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ALTER4 ::= Punto Identificador ALTER5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER4",253, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ALTER4 ::= ALTER5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER4",253, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ALTER5 ::= Parentesisapertura Identificador ALTER6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER5",254, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ALTER5 ::= AS SELECT ALTER25 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER5",254, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ALTER6 ::= Coma Identificador ALTER6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER6",255, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // ALTER6 ::= Parentesiscerradura AS SELECT1 ALTER25 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER6",255, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ALTER7 ::= ALTER COLUMN Identificador ALTER8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER7",256, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // ALTER7 ::= ADD ALTER16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER7",256, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // ALTER7 ::= DROP ALTER19 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER7",256, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // ALTER8 ::= Identificador ALTER9 ALTER10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER8",257, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // ALTER8 ::= ADD ALTER15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER8",257, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // ALTER8 ::= DROP ALTER15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER8",257, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // ALTER9 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER9",258, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // ALTER9 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER9",258, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // ALTER10 ::= Parentesisapertura Entero ALTER11 Parentesiscerradura ALTER12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER10",259, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // ALTER11 ::= Coma INTEGER 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER11",260, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // ALTER11 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER11",260, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // ALTER12 ::= COLLATE Identificador ALTER13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER12",261, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // ALTER12 ::= ALTER13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER12",261, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // ALTER13 ::= ALTER14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER13",262, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ALTER13 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER13",262, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // ALTER14 ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER14",263, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ALTER14 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER14",263, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ALTER15 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER15",264, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ALTER15 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER15",264, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // ALTER16 ::= COL_DEF ALTER17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER16",265, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // ALTER16 ::= TB_CST ALTER17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER16",265, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // ALTER17 ::= Coma ALTER16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER17",266, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ALTER17 ::= ALTER18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER17",266, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ALTER18 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER18",267, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ALTER18 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER18",267, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // ALTER19 ::= CONSTRAINT ALTER20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER19",268, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // ALTER19 ::= COLUMN ALTER20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER19",268, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // ALTER19 ::= ALTER20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER19",268, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // ALTER20 ::= IF EXISTS ALTER21 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER20",269, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // ALTER20 ::= ALTER21 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER20",269, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // ALTER21 ::= Identificador ALTER22 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER21",270, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // ALTER22 ::= Coma ALTER21 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER22",271, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // ALTER22 ::= ALTER18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER22",271, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ALTER23 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER23",272, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // ALTER23 ::= CURRENT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER23",272, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // ALTER24 ::= COLLATE Identificador ALTER18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER24",273, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // ALTER25 ::= WITH CHECK OPTION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER25",274, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // ALTER25 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ALTER25",274, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // SH_COND ::= SH_COND1 SH_COND2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND",55, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // SH_COND1 ::= MATCH Parentesisapertura GSP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND1",56, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // SH_COND1 ::= SH_CONDWM 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND1",56, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // SH_COND2 ::= AND SH_COND 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND2",57, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // SH_COND2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_COND2",57, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // PREDICATE ::= PREDICATE1 PREDICATE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE",58, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // PREDICATE ::= CONTAINS Parentesisapertura PREDICATE7 Coma PREDICATE8 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE",58, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // PREDICATE ::= FREETEXT Parentesisapertura PREDICATE7 Coma PREDICATE9 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE",58, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // PREDICATE1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // PREDICATE1 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // PREDICATE1 ::= CASEW 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // PREDICATE1 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // PREDICATE1 ::= STR_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // PREDICATE1 ::= DT_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // PREDICATE1 ::= CONV 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // PREDICATE1 ::= OTH_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE1",59, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // PREDICATE2 ::= COMPARE_OPR PREDICATE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // PREDICATE2 ::= NOT PREDICATE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // PREDICATE2 ::= LIKE PREDICATE1 PREDICATE6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // PREDICATE2 ::= BETWEEN PREDICATE1 AND PREDICATE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // PREDICATE2 ::= IS PREDICATE4 NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // PREDICATE2 ::= IN PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE2",60, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // PREDICATE3 ::= LIKE PREDICATE1 PREDICATE6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE3",61, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // PREDICATE3 ::= BETWEEN PREDICATE1 AND PREDICATE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE3",61, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // PREDICATE3 ::= IN PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE3",61, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // PREDICATE4 ::= NOT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE4",62, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // PREDICATE4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE4",62, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // PREDICATE5 ::= Coma PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE5",63, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // PREDICATE5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE5",63, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // PREDICATE6 ::= ESCAPE Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE6",64, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // PREDICATE6 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE6",64, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // PREDICATE7 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE7",65, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // PREDICATE7 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE7",65, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // PREDICATE8 ::= SH_COND 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE8",66, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // PREDICATE9 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE9",67, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // PREDICATE9 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PREDICATE9",67, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // SH_CONDWM ::= SH_CONDWM4 PREDICATE SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM",68, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // SH_CONDWM ::= Parentesisapertura SH_CONDWM Parentesiscerradura SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM",68, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // SH_CONDWM1 ::= OR SH_CONDWM2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM1",69, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // SH_CONDWM1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM1",69, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // SH_CONDWM2 ::= NOT SH_CONDWM3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM2",70, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // SH_CONDWM2 ::= SH_CONDWM3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM2",70, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // SH_CONDWM3 ::= PREDICATE SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM3",71, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // SH_CONDWM3 ::= Parentesisapertura SH_CONDWM Parentesiscerradura SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM3",71, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // SH_CONDWM4 ::= NOT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM4",72, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // SH_CONDWM4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SH_CONDWM4",72, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // GSP ::= Identificador GSP1 Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("GSP",73, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // GSP1 ::= Signomenor Signomenos Parentesisapertura Identificador Parentesiscerradura Signomenos 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("GSP1",74, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // GSP1 ::= Signomenos Parentesisapertura Identificador Parentesiscerradura Signomenos Signomayor 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("GSP1",74, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // AGG_FN ::= AVG Parentesisapertura SEL_AVG Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // AGG_FN ::= COUNT Parentesisapertura SEL_COUNT Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // AGG_FN ::= MAX Parentesisapertura SEL_AGR Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // AGG_FN ::= MIN Parentesisapertura SEL_AGR Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // AGG_FN ::= SUM Parentesisapertura SEL_AGR Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AGG_FN",19, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // SEL_AVG ::= SEL_AVG1 SEL_AVG2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG",20, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // SEL_AVG1 ::= ALL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",21, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // SEL_AVG1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",21, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // SEL_AVG1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",21, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // SEL_AVG2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG2",22, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // SEL_AVG2 ::= Identificador SEL_AVG3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG2",22, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // SEL_AVG3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG3",23, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // SEL_AVG3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AVG3",23, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // SEL_COUNT ::= SEL_COUNT1 SEL_COUNT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT",24, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // SEL_COUNT1 ::= ALL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",25, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // SEL_COUNT1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",25, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // SEL_COUNT1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",25, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // SEL_COUNT2 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",26, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // SEL_COUNT2 ::= Identificador SEL_COUNT3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",26, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // SEL_COUNT2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",26, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // SEL_COUNT3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT3",27, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // SEL_COUNT3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_COUNT3",27, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // SEL_AGR ::= SEL_AGR1 SEL_AGR2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR",28, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // SEL_AGR1 ::= ALL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",29, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // SEL_AGR1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",29, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // SEL_AGR1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",29, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // SEL_AGR2 ::= Identificador SEL_AGR3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR2",30, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // SEL_AGR2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR2",30, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // SEL_AGR3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR3",31, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // SEL_AGR3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEL_AGR3",31, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION",32, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // EXPRESSION ::= EXPRESSION2 SUM_OPR EXPRESSION2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION",32, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // EXPRESSION ::= NOT_OPR EXPRESSION EXPRESSION4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION",32, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // EXPRESSION1 ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",33, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // EXPRESSION1 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",33, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // EXPRESSION1 ::= SUM_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",33, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // EXPRESSION2 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",34, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // EXPRESSION2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",34, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // EXPRESSION3 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",35, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // EXPRESSION3 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",35, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // EXPRESSION3 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",35, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // EXPRESSION4 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",36, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // EXPRESSION4 ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",36, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // SEXP ::= SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP",8, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // SEXP2 ::= Signomas SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP2",9, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // SEXP2 ::= Signomenos SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP2",9, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // SEXP2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP2",9, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // SEXP3 ::= SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP3",10, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // SEXP4 ::= Signomult SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP4",11, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // SEXP4 ::= Signodiv SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP4",11, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // SEXP4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP4",11, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // SEXP5 ::= Parentesisapertura SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // SEXP5 ::= Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // SEXP5 ::= Float 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // SEXP5 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // SEXP5 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SEXP5",12, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // CONV ::= CAST Parentesisapertura CONV1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV",13, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // CONV ::= CONVERT Parentesisapertura CONV2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV",13, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // CONV1 ::= EXPRESSION AS DATATYPE CONV3 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV1",14, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // CONV2 ::= DATATYPE CONV3 CONV4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV2",15, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // CONV3 ::= Parentesisapertura Entero Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV3",16, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // CONV3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV3",16, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // CONV4 ::= EXPRESSION CONV5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV4",17, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // CONV5 ::= Coma SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV5",18, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // CONV5 ::= Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONV5",18, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // DATATYPE ::= Identificador DATATYPE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE",49, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // DATATYPE ::= DATATYPE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE",49, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // DATATYPE2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE2",51, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // DATATYPE3 ::= BIT DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // DATATYPE3 ::= INT DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // DATATYPE3 ::= INTEGER DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // DATATYPE3 ::= FLOAT DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // DATATYPE3 ::= VARCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // DATATYPE3 ::= DATE DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // DATATYPE3 ::= REAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // DATATYPE3 ::= DECIMAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // DATATYPE3 ::= NUMERIC DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // DATATYPE3 ::= SMALLINT DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // DATATYPE3 ::= TIME DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // DATATYPE3 ::= CHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // DATATYPE3 ::= NCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE3",52, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // DATATYPE4 ::= Parentesisapertura Entero DATATYPE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE4",53, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // DATATYPE4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE4",53, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // DATATYPE5 ::= Coma Entero Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE5",54, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // DATATYPE5 ::= Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATATYPE5",54, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // TB_CST ::= TB_CST1 TB_CST2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST",154, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // TB_CST1 ::= CONSTRAINT Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST1",155, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // TB_CST1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST1",155, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // TB_CST2 ::= PRIMARY KEY TB_CST3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // TB_CST2 ::= UNIQUE TB_CST3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // TB_CST2 ::= TB_CST7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // TB_CST2 ::= CONNECTION TB_CST17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // TB_CST2 ::= DEFAULT TB_CST18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // TB_CST2 ::= CHECK TB_CST15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST2",156, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // TB_CST3 ::= CLUSTERED TB_CST4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST3",157, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // TB_CST3 ::= TB_CST4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST3",157, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // TB_CST4 ::= WITH TB_CST5 TB_CST6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST4",158, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // TB_CST4 ::= TB_CST6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST4",158, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // TB_CST5 ::= FILLFACTOR Signoigual Entero Parentesisapertura Entero Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST5",159, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // TB_CST5 ::= Parentesisapertura FILLFACTOR Signoigual INTEGER Parentesisapertura Entero Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST5",159, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-6)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // TB_CST6 ::= ON Identificador Parentesisapertura Identificador Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST6",160, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // TB_CST7 ::= TB_CST8 REFERENCES Identificador TB_CST9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST7",161, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // TB_CST8 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST8",162, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // TB_CST8 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST8",162, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // TB_CST9 ::= Punto Identificador TB_CST10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST9",163, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // TB_CST9 ::= TB_CST10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST9",163, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // TB_CST10 ::= Parentesisapertura Identificador Parentesiscerradura TB_CST11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST10",164, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // TB_CST11 ::= ON TB_CST12 TB_CST13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST11",165, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // TB_CST11 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST11",165, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // TB_CST11 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST11",165, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // TB_CST12 ::= DELETE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST12",166, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // TB_CST12 ::= UPDATE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST12",166, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // TB_CST13 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST13",167, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // TB_CST13 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST13",167, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // TB_CST13 ::= SET TB_CST14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST13",167, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // TB_CST14 ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST14",168, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // TB_CST14 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST14",168, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // TB_CST15 ::= NOT FOR REPLICATION TB_CST16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST15",169, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // TB_CST15 ::= TB_CST16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST15",169, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // TB_CST16 ::= Parentesisapertura EXPRESSION Parentesiscerradura TB_CST21 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST16",170, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // TB_CST17 ::= Parentesisapertura TB_CST19 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST17",171, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // TB_CST18 ::= CONST_EXP FOR Identificador TB_CST23 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST18",172, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // TB_CST19 ::= Identificador TO Identificador TB_CST20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST19",173, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // TB_CST20 ::= Coma TB_CST19 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST20",174, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // TB_CST20 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST20",174, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // TB_CST21 ::= ON DELETE TB_CST22 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST21",175, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // TB_CST21 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST21",175, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // TB_CST22 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST22",176, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // TB_CST22 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST22",176, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // TB_CST23 ::= WITH VALUES 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST23",177, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // TB_CST23 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_CST23",177, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // COL_DEF ::= Identificador DATATYPE COL_DEF1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF",143, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // COL_DEF1 ::= COLLATE Identificador COL_DEF2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF1",144, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // COL_DEF1 ::= COL_DEF2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF1",144, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // COL_DEF2 ::= NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF2",145, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // COL_DEF2 ::= NOT NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF2",145, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // COL_DEF2 ::= COL_DEF3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF2",145, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // COL_DEF2 ::= IDENTITY COL_DEF6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF2",145, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // COL_DEF3 ::= CONSTRAINT Identificador COL_DEF10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF3",146, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // COL_DEF3 ::= COL_CST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF3",146, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // COL_DEF3 ::= COL_DEF4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF3",146, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // COL_DEF4 ::= DEFAULT CONST_EXP COL_DEF5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF4",147, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // COL_DEF5 ::= WITH VALUES COL_DEF8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF5",148, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // COL_DEF5 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF5",148, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // COL_DEF6 ::= Parentesisapertura SEXP Coma SEXP Parentesiscerradura COL_DEF7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF6",149, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // COL_DEF6 ::= COL_DEF7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF6",149, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // COL_DEF7 ::= NOT FOR REPLICATION COL_DEF8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF7",150, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // COL_DEF7 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF7",150, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // COL_DEF8 ::= ROWGUIDCOL COL_DEF9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF8",151, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // COL_DEF8 ::= COL_DEF9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF8",151, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // COL_DEF10 ::= COL_DEF4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF10",153, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // COL_DEF10 ::= COL_CST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COL_DEF10",153, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // CONST_EXP ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // CONST_EXP ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // CONST_EXP ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // CONST_EXP ::= Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // CONST_EXP ::= Float 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CONST_EXP",48, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // COLST ::= Parentesisapertura COLST1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLST",122, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // COLST1 ::= Identificador COLST2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLST1",123, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // COLST2 ::= Coma COLST1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLST2",124, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // COLST2 ::= Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLST2",124, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // EXPR_INSERT ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",125, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // EXPR_INSERT ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",125, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MiniSQL$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$MiniSQL$do_action_part00000001(
    int                        CUP$MiniSQL$act_num,
    java_cup.runtime.lr_parser CUP$MiniSQL$parser,
    java.util.Stack            CUP$MiniSQL$stack,
    int                        CUP$MiniSQL$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MiniSQL$result;

      /* select the action based on the action number */
      switch (CUP$MiniSQL$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // EXPR_INSERT ::= BIT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",125, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // OUTCL ::= OUTPUT DML1 OUTCL1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL",118, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // OUTCL ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL",118, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // OUTCL1 ::= INTO OUTCL2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL1",119, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // OUTCL1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL1",119, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // OUTCL2 ::= Arroba Identificador OUTCL3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL2",120, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // OUTCL2 ::= Identificador OUTCL3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL2",120, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // OUTCL3 ::= COLST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL3",121, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // OUTCL3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OUTCL3",121, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // DML1 ::= DML2 DML3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML1",114, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // DML2 ::= COLNAME 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML2",115, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // DML2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML2",115, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // DML3 ::= AS Identificador DML4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML3",116, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // DML3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML3",116, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // DML4 ::= Coma DML1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML4",117, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // DML4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DML4",117, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // COLNAME ::= Identificador Punto COLNAME1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLNAME",275, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // COLNAME1 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLNAME1",276, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // COLNAME1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COLNAME1",276, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // SELIST ::= SELIST1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST",106, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // SELIST1 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // SELIST1 ::= Identificador SELIST2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // SELIST1 ::= EXPRESSION SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // SELIST1 ::= AGG_FN SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // SELIST1 ::= STR_FN SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // SELIST1 ::= DT_FN SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // SELIST1 ::= CONV SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // SELIST1 ::= CASEW SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST1",107, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // SELIST2 ::= Punto SELIST3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST2",108, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // SELIST2 ::= Signoigual SELIST6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST2",108, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // SELIST2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST2",108, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // SELIST3 ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST3",109, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // SELIST3 ::= Identificador SELIST5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST3",109, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // SELIST5 ::= AS Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST5",111, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // SELIST5 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST5",111, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // SELIST5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST5",111, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // SELIST6 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELIST6",112, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // ORDERB ::= SELIST ORDERB1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB",101, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ORDERB1 ::= ORDERB2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB1",102, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ORDERB1 ::= Coma ORDERB 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB1",102, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // ORDERB2 ::= COLLATE ORDERB3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB2",103, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // ORDERB2 ::= ORDERB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB2",103, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ORDERB3 ::= Identificador ORDERB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB3",104, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ORDERB4 ::= ASC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB4",105, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ORDERB4 ::= DESC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ORDERB4",105, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // TB_SOURCE ::= OBJECT TB_SOURCE1 TB_SOURCE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",98, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // TB_SOURCE ::= ROWSET TB_SOURCE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",98, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // TB_SOURCE ::= Arroba Identificador TB_SOURCE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",98, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // TB_SOURCE1 ::= AS Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",99, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // TB_SOURCE1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",99, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // TB_SOURCE1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",99, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // TB_SOURCE2 ::= SAM_CL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE2",100, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // TB_SOURCE2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_SOURCE2",100, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // JOINTB ::= TB_SOURCE JOINTB1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB",93, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // JOINTB ::= Parentesisapertura JOIN Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB",93, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // JOINTB1 ::= JOIN_TYPE JOINTB3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB1",94, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // JOINTB1 ::= CROSS JOIN JOINTB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB1",94, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // JOINTB1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB1",94, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // JOINTB2 ::= JOIN_TYPE JOINTB3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB2",95, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // JOINTB2 ::= CROSS JOIN JOINTB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB2",95, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // JOINTB3 ::= TB_SOURCE ON SH_COND JOINTB4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB3",96, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // JOINTB4 ::= JOINTB2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB4",97, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // JOINTB4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOINTB4",97, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // JOIN_TYPE ::= JOIN_TYPE1 JOIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE",89, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // JOIN_TYPE1 ::= INNER 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",90, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // JOIN_TYPE1 ::= JOIN_TYPE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",90, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // JOIN_TYPE2 ::= LEFT JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",91, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // JOIN_TYPE2 ::= RIGHT JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",91, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // JOIN_TYPE2 ::= FULL JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",91, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // JOIN_TYPE2 ::= JOIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",91, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // JOIN_TYPE3 ::= OUTER JOIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE3",92, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // JOIN_TYPE3 ::= JOIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE3",92, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // SAM_CL ::= TABLESAMPLE Parentesisapertura SAM_CL1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL",86, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // SAM_CL1 ::= SEXP SAM_CL2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL1",87, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // SAM_CL2 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL2",88, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // SAM_CL2 ::= ROWS 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL2",88, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // SAM_CL2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SAM_CL2",88, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // ROWSET ::= OPENDATASOURCE Parentesisapertura Cadena Coma Cadena Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ROWSET",85, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // ROWSET ::= OPENQUERY Parentesisapertura Identificador Coma Cadena Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ROWSET",85, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // CASEW ::= CASE CASEW1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW",44, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // CASEW1 ::= EXPRESSION CASEW2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW1",45, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // CASEW1 ::= CASEW2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW1",45, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // CASEW2 ::= WHEN EXPRESSION THEN EXPRESSION CASEW3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW2",46, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // CASEW3 ::= ELSE EXPRESSION END 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW3",47, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // CASEW3 ::= CASEW2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW3",47, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // CASEW3 ::= END 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CASEW3",47, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // AR_OPR ::= Signomenos 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AR_OPR",37, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // AR_OPR ::= Signomult 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AR_OPR",37, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // AR_OPR ::= Signodiv 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AR_OPR",37, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // AR_OPR ::= Signoporcentaje 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("AR_OPR",37, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // SUM_OPR ::= Signomas 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SUM_OPR",38, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // ASIG_OPR ::= Signoigual 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("ASIG_OPR",39, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // BIT_OPR ::= AND 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIT_OPR",40, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // BIT_OPR ::= OR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIT_OPR",40, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // NOT_OPR ::= NOT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("NOT_OPR",41, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // COMPARE_OPR ::= Signomayor 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // COMPARE_OPR ::= Signomenor 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // COMPARE_OPR ::= Signomayorigual 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // COMPARE_OPR ::= Signomenorigual 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // COMPARE_OPR ::= Signonotigual 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",42, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // LOGIC_OPR ::= BETWEEN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",43, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // LOGIC_OPR ::= IN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",43, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // LOGIC_OPR ::= LIKE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",43, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // BIN_OPR ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // BIN_OPR ::= ASIG_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // BIN_OPR ::= BIT_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // BIN_OPR ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // BIN_OPR ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("BIN_OPR",277, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // OTH_FN ::= NEXT VALUE FOR OBJECT OTH_FN3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN",81, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // OTH_FN ::= SYSTEM_USER 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN",81, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // OTH_FN ::= SESSION_USER 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN",81, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // OTH_FN ::= NULLIF Parentesisapertura EXPRESSION Coma EXPRESSION Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN",81, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // OTH_FN1 ::= Punto Identificador OTH_FN2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN1",82, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // OTH_FN1 ::= OTH_FN2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN1",82, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // OTH_FN2 ::= Punto Identificador OTH_FN3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN2",83, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // OTH_FN2 ::= OTH_FN3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN2",83, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // OTH_FN3 ::= OVER ORDER BY ORDERB 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("OTH_FN3",84, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // STR_FN ::= LOWER Parentesisapertura STR_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // STR_FN ::= TRANSLATE Parentesisapertura STR_FN1 Coma STR_FN1 Coma STR_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-7)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // STR_FN ::= UPPER Parentesisapertura STR_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // STR_FN ::= CHAR Parentesisapertura SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // STR_FN ::= LEFT Parentesisapertura STR_FN1 Coma SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // STR_FN ::= TRIM Parentesisapertura STR_FN1 STR_FN2 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // STR_FN ::= NCHAR Parentesisapertura SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // STR_FN ::= RIGHT Parentesisapertura STR_FN1 Coma SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // STR_FN ::= SPACE Parentesisapertura SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // STR_FN ::= SUBSTRING Parentesisapertura STR_FN1 Coma SEXP Coma SEXP Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN",78, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-7)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // STR_FN1 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN1",79, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // STR_FN1 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN1",79, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // STR_FN1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN1",79, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // STR_FN2 ::= FROM STR_FN1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN2",80, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // STR_FN2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("STR_FN2",80, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // DT_FN ::= CURRENT_TIMESTAMP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // DT_FN ::= DAY Parentesisapertura DT_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // DT_FN ::= MONTH Parentesisapertura DT_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // DT_FN ::= YEAR Parentesisapertura DT_FN1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // DT_FN ::= SET LANGUAGE DT_FN2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN",75, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // DT_FN1 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN1",76, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // DT_FN1 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN1",76, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // DT_FN2 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN2",77, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // DT_FN2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DT_FN2",77, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // UPDATE0 ::= UPDATE UPDATE1 UPDATE15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE0",209, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // UPDATE1 ::= TOP Parentesisapertura SEXP Parentesiscerradura UPDATE2 UPDATE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE1",210, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // UPDATE1 ::= UPDATE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE1",210, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // UPDATE2 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE2",211, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // UPDATE2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE2",211, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // UPDATE3 ::= OBJECT UPDATE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE3",212, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // UPDATE3 ::= Arroba Identificador UPDATE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE3",212, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // UPDATE4 ::= SET UPDATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE4",213, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // UPDATE5 ::= UPDATE6 UPDATE11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE5",214, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // UPDATE6 ::= OBJECT UPDATE7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE6",215, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // UPDATE6 ::= Arroba Identificador Signoigual UPDATE10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE6",215, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // UPDATE7 ::= Signoigual UPDATE9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE7",216, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // UPDATE9 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE9",218, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // UPDATE9 ::= SEXP 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE9",218, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // UPDATE9 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE9",218, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // UPDATE9 ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE9",218, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // UPDATE10 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE10",219, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // UPDATE11 ::= Coma UPDATE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE11",220, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // UPDATE11 ::= UPDATE12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE11",220, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // UPDATE12 ::= OUTCL UPDATE16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE12",221, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // UPDATE12 ::= UPDATE16 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE12",221, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // UPDATE16 ::= FROM JOINTB UPDATE17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE16",225, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // UPDATE16 ::= UPDATE17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE16",225, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // UPDATE17 ::= WHERE SH_COND 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE17",226, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // UPDATE17 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE17",226, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // UPDATE15 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE15",224, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // UPDATE15 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("UPDATE15",224, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // FUNCTION1 ::= Identificador FUNCTION2 Parentesisapertura FUNCTION3 Parentesiscerradura RETURNS DATATYPE FUNCTION6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION1",278, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-7)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // FUNCTION2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION2",279, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // FUNCTION2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION2",279, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // FUNCTION3 ::= Arroba Identificador FUNCTION4 DATATYPE FUNCTION5 FUNCTION3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION3",280, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // FUNCTION3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION3",280, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // FUNCTION4 ::= AS 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION4",281, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // FUNCTION4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION4",281, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // FUNCTION5 ::= Signoigual DEFV 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION5",282, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // FUNCTION5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION5",282, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // FUNCTION6 ::= WITH RETURNS NULL ON NULL INPUT FUNCTION7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION6",283, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-6)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // FUNCTION6 ::= FUNCTION7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION6",283, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // FUNCTION7 ::= FUNCTION4 BEGIN FUNCTION8 FUNCTION9 END FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION7",284, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // FUNCTION8 ::= SELECT1 FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION8",285, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // FUNCTION8 ::= INSERT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION8",285, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // FUNCTION8 ::= DEL1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION8",285, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // FUNCTION8 ::= UPDATE0 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION8",285, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // FUNCTION9 ::= FUNCTION8 FUNCTION9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION9",286, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // FUNCTION9 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FUNCTION9",286, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // TABLE1 ::= OBJECT Parentesisapertura TABLE2 TABLE3 Parentesiscerradura TABLE4 FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE1",288, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-6)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // TABLE2 ::= COL_DEF 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE2",289, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // TABLE2 ::= TB_CST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE2",289, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // TABLE2 ::= COL_CST 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE2",289, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // TABLE3 ::= Coma TABLE2 TABLE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE3",290, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // TABLE3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE3",290, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // TABLE4 ::= ON TABLE5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE4",291, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // TABLE4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE4",291, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // TABLE5 ::= Identificador Parentesisapertura Identificador Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE5",292, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // TABLE5 ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TABLE5",292, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // FIN_AN ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FIN_AN",287, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // FIN_AN ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FIN_AN",287, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // DEFV ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // DEFV ::= Float 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // DEFV ::= Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // DEFV ::= DBit 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // DEFV ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEFV",293, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // DEL1 ::= DELETE DEL2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL1",227, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // DEL2 ::= TOP Parentesisapertura SEXP Parentesiscerradura DEL3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL2",228, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // DEL2 ::= DEL4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL2",228, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // DEL3 ::= PERCENT DEL4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL3",229, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // DEL3 ::= DEL4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL3",229, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // DEL4 ::= FROM DEL5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL4",230, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // DEL4 ::= DEL5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL4",230, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // DEL5 ::= OBJECT DEL6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL5",231, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // DEL5 ::= Arroba Identificador DEL6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL5",231, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // DEL6 ::= OUTCL DEL7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL6",232, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // DEL6 ::= DEL7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL6",232, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // DEL7 ::= FROM JOINTB DEL8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL7",233, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // DEL7 ::= DEL9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL7",233, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // DEL8 ::= Coma JOINTB DEL8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL8",234, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // DEL8 ::= DEL9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL8",234, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // DEL9 ::= WHERE SH_COND DEL10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL9",235, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // DEL9 ::= DEL10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL9",235, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // DEL10 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL10",236, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // DEL10 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DEL10",236, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // INSERT1 ::= INSERT INSERT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT1",196, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // INSERT2 ::= TOP Parentesisapertura SEXP Parentesiscerradura INSERT3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT2",197, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // INSERT2 ::= INSERT4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT2",197, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // INSERT3 ::= PERCENT INSERT4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT3",198, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // INSERT3 ::= INSERT4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT3",198, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // INSERT4 ::= INTO INSERT5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT4",199, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // INSERT4 ::= INSERT5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT4",199, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // INSERT5 ::= OBJECT INSERT6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT5",200, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // INSERT6 ::= COLST INSERT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT6",201, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // INSERT6 ::= INSERT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT6",201, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // INSERT7 ::= OUTCL INSERT8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT7",202, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // INSERT7 ::= INSERT8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT7",202, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // INSERT8 ::= VALUES Parentesisapertura INSERT9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT8",203, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // INSERT8 ::= SELECT1 INSERT10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT8",203, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // INSERT8 ::= DEFAULT VALUES INSERT10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT8",203, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // INSERT9 ::= INSERT11 INSERT12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT9",204, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 538: // INSERT11 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT11",206, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 539: // INSERT11 ::= NULL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT11",206, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 540: // INSERT11 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT11",206, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 541: // INSERT12 ::= Coma INSERT9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT12",207, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 542: // INSERT12 ::= Parentesiscerradura INSERT13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT12",207, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 543: // INSERT13 ::= Coma VALUES Parentesisapertura INSERT9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT13",208, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 544: // INSERT13 ::= INSERT10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT13",208, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 545: // INSERT10 ::= Puntoycoma 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT10",205, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 546: // INSERT10 ::= GO 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("INSERT10",205, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 547: // SELECT1 ::= SELECT SELECT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT1",178, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 548: // SELECT2 ::= SELECT3 SELECT4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT2",179, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 549: // SELECT3 ::= ALL 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT3",180, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 550: // SELECT3 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT3",180, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 551: // SELECT3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT3",180, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 552: // SELECT4 ::= TOP SELECT5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT4",181, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 553: // SELECT4 ::= SELECT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT4",181, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 554: // SELECT5 ::= Parentesisapertura SEXP Parentesiscerradura SELECT6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT5",182, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 555: // SELECT6 ::= PERCENT SELECT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT6",183, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 556: // SELECT6 ::= SELECT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT6",183, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 557: // SELECT7 ::= SELIST SELECT20 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT7",184, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 558: // SELECT20 ::= Coma SELECT7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT20",195, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 559: // SELECT20 ::= SELECT8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT20",195, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 560: // SELECT8 ::= INTO SELECT9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT8",185, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 561: // SELECT8 ::= SELECT11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT8",185, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 562: // SELECT9 ::= OBJECT SELECT11 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT9",186, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 563: // SELECT11 ::= FROM JOINTB SELECT12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT11",187, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 564: // SELECT11 ::= SELECT12 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT11",187, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 565: // SELECT12 ::= WHERE SH_COND SELECT13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT12",188, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 566: // SELECT12 ::= SELECT13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT12",188, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 567: // SELECT13 ::= GROUP BY EXPRESSION SELECT18 SELECT14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT13",189, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 568: // SELECT13 ::= SELECT14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT13",189, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 569: // SELECT14 ::= HAVING SH_COND SELECT15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT14",190, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 570: // SELECT14 ::= SELECT15 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT14",190, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 571: // SELECT15 ::= ORDER BY ORDERB 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT15",191, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 572: // SELECT15 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT15",191, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 573: // SELECT18 ::= Coma EXPRESSION SELECT18 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT18",193, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 574: // SELECT18 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("SELECT18",193, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 575: // TB_IX ::= INDEX Identificador Parentesisapertura TB_IX1 Parentesiscerradura TB_IX4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX",294, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 576: // TB_IX1 ::= Identificador TB_IX2 TB_IX3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX1",295, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 577: // TB_IX2 ::= ASC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX2",296, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 578: // TB_IX2 ::= DEC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX2",296, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 579: // TB_IX2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX2",296, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 580: // TB_IX3 ::= Coma TB_IX2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX3",297, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 581: // TB_IX3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX3",297, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 582: // TB_IX4 ::= WITH FILLFACTOR Signoigual Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX4",298, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 583: // TB_IX4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("TB_IX4",298, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 584: // CRT ::= CREATE CRT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT",299, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 585: // CRT1 ::= DATABASE Identificador DATABASE1 FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 586: // CRT1 ::= OR ALTER CRT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 587: // CRT1 ::= CRT2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 588: // CRT1 ::= USER Identificador FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 589: // CRT1 ::= TABLE TABLE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT1",300, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 590: // CRT2 ::= PROC PROCEDURE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT2",301, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 591: // CRT2 ::= PROCEDURE PROCEDURE1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT2",301, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 592: // CRT2 ::= VIEW VIEW1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT2",301, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 593: // CRT2 ::= FUNCTION FUNCTION1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("CRT2",301, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 594: // DATABASE1 ::= ON DATABASE2 DATABASE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE1",302, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 595: // DATABASE1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE1",302, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 596: // DATABASE2 ::= PRIMARY FLSPC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE2",303, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 597: // DATABASE3 ::= COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE3",304, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 598: // DATABASE3 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE3",304, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 599: // DATABASE4 ::= Coma FLSPC DATABASE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE4",305, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MiniSQL$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 2 with the actual generated action code for actions 600 to 900. */
  public final java_cup.runtime.Symbol CUP$MiniSQL$do_action_part00000002(
    int                        CUP$MiniSQL$act_num,
    java_cup.runtime.lr_parser CUP$MiniSQL$parser,
    java.util.Stack            CUP$MiniSQL$stack,
    int                        CUP$MiniSQL$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$MiniSQL$result;

      /* select the action based on the action number */
      switch (CUP$MiniSQL$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 600: // DATABASE4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("DATABASE4",305, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 601: // FLSPC ::= Parentesisapertura NAMES Signoigual Cadena Coma FILE Signoigual Cadena FLSPC1 Parentesiscerradura 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FLSPC",306, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-9)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 602: // FLSPC1 ::= Coma SIZE Signoigual Entero 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FLSPC1",307, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 603: // FLSPC1 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("FLSPC1",307, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 604: // VIEW1 ::= Identificador VIEW2 VIEW3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW1",325, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 605: // VIEW2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW2",326, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 606: // VIEW2 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW2",326, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 607: // VIEW3 ::= Parentesisapertura VIEW4 Parentesiscerradura AS SELECT1 VIEW6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW3",327, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-5)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 608: // VIEW3 ::= AS SELECT1 VIEW6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW3",327, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 609: // VIEW4 ::= Identificador VIEW5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW4",328, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 610: // VIEW4 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW4",328, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 611: // VIEW5 ::= Coma Identificador VIEW5 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW5",329, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 612: // VIEW5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW5",329, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 613: // VIEW6 ::= WITH CHECK OPTION FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW6",330, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-3)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 614: // VIEW6 ::= FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("VIEW6",330, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 615: // PROCEDURE1 ::= Identificador PROCEDURE2 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE1",308, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 616: // PROCEDURE2 ::= Punto Identificador PROCEDURE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",309, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 617: // PROCEDURE2 ::= PROCEDURE3 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",309, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 618: // PROCEDURE3 ::= Puntoycoma Entero PROCEDURE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",310, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 619: // PROCEDURE3 ::= PROCEDURE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",310, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 620: // PROCEDURE4 ::= Arroba Identificador PROCEDURE5 DATATYPE PROCEDURE6 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE4",311, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 621: // PROCEDURE5 ::= AS 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",312, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 622: // PROCEDURE5 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",312, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 623: // PROCEDURE6 ::= VARYING PROCEDURE7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",313, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 624: // PROCEDURE6 ::= PROCEDURE7 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",313, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 625: // PROCEDURE7 ::= Signoigual DEFV PROCEDURE8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",314, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 626: // PROCEDURE7 ::= PROCEDURE8 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",314, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 627: // PROCEDURE8 ::= OUTPUT PROCEDURE9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",315, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 628: // PROCEDURE8 ::= PROCEDURE9 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",315, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 629: // PROCEDURE9 ::= Coma PROCEDURE4 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",316, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 630: // PROCEDURE9 ::= PROCEDURE10 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",316, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 631: // PROCEDURE10 ::= WITH PROCEDURE11 AS PROCEDURE12 PROCEDURE13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",317, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 632: // PROCEDURE10 ::= PROCEDURE13 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",317, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 633: // PROCEDURE11 ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",318, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 634: // PROCEDURE11 ::= EXEC 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",318, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 635: // PROCEDURE12 ::= Cadena 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE12",319, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 636: // PROCEDURE13 ::= FOR REPLICATION PROCEDURE14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE13",320, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-2)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 637: // PROCEDURE13 ::= PROCEDURE14 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE13",320, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 638: // PROCEDURE14 ::= AS PROCEDURE15 PROCEDURE16 PROCEDURE17 FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE14",321, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-4)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 639: // PROCEDURE15 ::= BEGIN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE15",322, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 640: // PROCEDURE15 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE15",322, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 641: // PROCEDURE16 ::= SELECT1 FIN_AN 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",323, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 642: // PROCEDURE16 ::= INSERT1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",323, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 643: // PROCEDURE16 ::= DEL1 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",323, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 644: // PROCEDURE16 ::= UPDATE0 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",323, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 645: // PROCEDURE17 ::= PROCEDURE16 PROCEDURE17 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE17",324, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.elementAt(CUP$MiniSQL$top-1)), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 646: // PROCEDURE17 ::= END 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE17",324, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 647: // PROCEDURE17 ::= 
            {
              Object RESULT =null;

              CUP$MiniSQL$result = parser.getSymbolFactory().newSymbol("PROCEDURE17",324, ((java_cup.runtime.Symbol)CUP$MiniSQL$stack.peek()), RESULT);
            }
          return CUP$MiniSQL$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$MiniSQL$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$MiniSQL$do_action(
    int                        CUP$MiniSQL$act_num,
    java_cup.runtime.lr_parser CUP$MiniSQL$parser,
    java.util.Stack            CUP$MiniSQL$stack,
    int                        CUP$MiniSQL$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$MiniSQL$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$MiniSQL$do_action_part00000000(
                               CUP$MiniSQL$act_num,
                               CUP$MiniSQL$parser,
                               CUP$MiniSQL$stack,
                               CUP$MiniSQL$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$MiniSQL$do_action_part00000001(
                               CUP$MiniSQL$act_num,
                               CUP$MiniSQL$parser,
                               CUP$MiniSQL$stack,
                               CUP$MiniSQL$top);
          /*. . . . . . . . 600 < #action < 900. . . . . . . . . . . .*/
          case 2: 
              return CUP$MiniSQL$do_action_part00000002(
                               CUP$MiniSQL$act_num,
                               CUP$MiniSQL$parser,
                               CUP$MiniSQL$stack,
                               CUP$MiniSQL$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
